'------------------------------------------------------------------------------
' <auto-generated>
'     This code was generated by a tool.
'     Runtime Version:4.0.30319.0
'
'     Changes to this file may cause incorrect behavior and will be lost if
'     the code is regenerated.
' </auto-generated>
'------------------------------------------------------------------------------

Option Strict Off
Option Explicit On



'''<summary>
'''Represents a strongly typed in-memory cache of data.
'''</summary>
<Global.System.Serializable(),  _
 Global.System.ComponentModel.DesignerCategoryAttribute("code"),  _
 Global.System.ComponentModel.ToolboxItem(true),  _
 Global.System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedDataSetSchema"),  _
 Global.System.Xml.Serialization.XmlRootAttribute("Dossier"),  _
 Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.DataSet")>  _
Partial Public Class Dossier
    Inherits Global.System.Data.DataSet
    
    Private tableAcute_Toxicity As Acute_ToxicityDataTable
    
    Private tableAquatic_Toxicity As Aquatic_ToxicityDataTable
    
    Private tableBranding As BrandingDataTable
    
    Private tableClassifications As ClassificationsDataTable
    
    Private tableComponents As ComponentsDataTable
    
    Private tableDefaults As DefaultsDataTable
    
    Private tableHazard_Lexicon As Hazard_LexiconDataTable
    
    Private tablePrecautionary_Lexicon As Precautionary_LexiconDataTable
    
    Private tableProduct_Log As Product_LogDataTable
    
    Private tableSafety_Dance As Safety_DanceDataTable
    
    Private tableSafety_Lexicon As Safety_LexiconDataTable
    
    Private _schemaSerializationMode As Global.System.Data.SchemaSerializationMode = Global.System.Data.SchemaSerializationMode.IncludeSchema
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Public Sub New()
        MyBase.New
        Me.BeginInit
        Me.InitClass
        Dim schemaChangedHandler As Global.System.ComponentModel.CollectionChangeEventHandler = AddressOf Me.SchemaChanged
        AddHandler MyBase.Tables.CollectionChanged, schemaChangedHandler
        AddHandler MyBase.Relations.CollectionChanged, schemaChangedHandler
        Me.EndInit
    End Sub
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Protected Sub New(ByVal info As Global.System.Runtime.Serialization.SerializationInfo, ByVal context As Global.System.Runtime.Serialization.StreamingContext)
        MyBase.New(info, context, false)
        If (Me.IsBinarySerialized(info, context) = true) Then
            Me.InitVars(false)
            Dim schemaChangedHandler1 As Global.System.ComponentModel.CollectionChangeEventHandler = AddressOf Me.SchemaChanged
            AddHandler Me.Tables.CollectionChanged, schemaChangedHandler1
            AddHandler Me.Relations.CollectionChanged, schemaChangedHandler1
            Return
        End If
        Dim strSchema As String = CType(info.GetValue("XmlSchema", GetType(String)),String)
        If (Me.DetermineSchemaSerializationMode(info, context) = Global.System.Data.SchemaSerializationMode.IncludeSchema) Then
            Dim ds As Global.System.Data.DataSet = New Global.System.Data.DataSet()
            ds.ReadXmlSchema(New Global.System.Xml.XmlTextReader(New Global.System.IO.StringReader(strSchema)))
            If (Not (ds.Tables("Acute Toxicity")) Is Nothing) Then
                MyBase.Tables.Add(New Acute_ToxicityDataTable(ds.Tables("Acute Toxicity")))
            End If
            If (Not (ds.Tables("Aquatic Toxicity")) Is Nothing) Then
                MyBase.Tables.Add(New Aquatic_ToxicityDataTable(ds.Tables("Aquatic Toxicity")))
            End If
            If (Not (ds.Tables("Branding")) Is Nothing) Then
                MyBase.Tables.Add(New BrandingDataTable(ds.Tables("Branding")))
            End If
            If (Not (ds.Tables("Classifications")) Is Nothing) Then
                MyBase.Tables.Add(New ClassificationsDataTable(ds.Tables("Classifications")))
            End If
            If (Not (ds.Tables("Components")) Is Nothing) Then
                MyBase.Tables.Add(New ComponentsDataTable(ds.Tables("Components")))
            End If
            If (Not (ds.Tables("Defaults")) Is Nothing) Then
                MyBase.Tables.Add(New DefaultsDataTable(ds.Tables("Defaults")))
            End If
            If (Not (ds.Tables("Hazard Lexicon")) Is Nothing) Then
                MyBase.Tables.Add(New Hazard_LexiconDataTable(ds.Tables("Hazard Lexicon")))
            End If
            If (Not (ds.Tables("Precautionary Lexicon")) Is Nothing) Then
                MyBase.Tables.Add(New Precautionary_LexiconDataTable(ds.Tables("Precautionary Lexicon")))
            End If
            If (Not (ds.Tables("Product Log")) Is Nothing) Then
                MyBase.Tables.Add(New Product_LogDataTable(ds.Tables("Product Log")))
            End If
            If (Not (ds.Tables("Safety Dance")) Is Nothing) Then
                MyBase.Tables.Add(New Safety_DanceDataTable(ds.Tables("Safety Dance")))
            End If
            If (Not (ds.Tables("Safety Lexicon")) Is Nothing) Then
                MyBase.Tables.Add(New Safety_LexiconDataTable(ds.Tables("Safety Lexicon")))
            End If
            Me.DataSetName = ds.DataSetName
            Me.Prefix = ds.Prefix
            Me.Namespace = ds.Namespace
            Me.Locale = ds.Locale
            Me.CaseSensitive = ds.CaseSensitive
            Me.EnforceConstraints = ds.EnforceConstraints
            Me.Merge(ds, false, Global.System.Data.MissingSchemaAction.Add)
            Me.InitVars
        Else
            Me.ReadXmlSchema(New Global.System.Xml.XmlTextReader(New Global.System.IO.StringReader(strSchema)))
        End If
        Me.GetSerializationData(info, context)
        Dim schemaChangedHandler As Global.System.ComponentModel.CollectionChangeEventHandler = AddressOf Me.SchemaChanged
        AddHandler MyBase.Tables.CollectionChanged, schemaChangedHandler
        AddHandler Me.Relations.CollectionChanged, schemaChangedHandler
    End Sub
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
     Global.System.ComponentModel.Browsable(false),  _
     Global.System.ComponentModel.DesignerSerializationVisibility(Global.System.ComponentModel.DesignerSerializationVisibility.Content)>  _
    Public ReadOnly Property Acute_Toxicity() As Acute_ToxicityDataTable
        Get
            Return Me.tableAcute_Toxicity
        End Get
    End Property
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
     Global.System.ComponentModel.Browsable(false),  _
     Global.System.ComponentModel.DesignerSerializationVisibility(Global.System.ComponentModel.DesignerSerializationVisibility.Content)>  _
    Public ReadOnly Property Aquatic_Toxicity() As Aquatic_ToxicityDataTable
        Get
            Return Me.tableAquatic_Toxicity
        End Get
    End Property
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
     Global.System.ComponentModel.Browsable(false),  _
     Global.System.ComponentModel.DesignerSerializationVisibility(Global.System.ComponentModel.DesignerSerializationVisibility.Content)>  _
    Public ReadOnly Property Branding() As BrandingDataTable
        Get
            Return Me.tableBranding
        End Get
    End Property
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
     Global.System.ComponentModel.Browsable(false),  _
     Global.System.ComponentModel.DesignerSerializationVisibility(Global.System.ComponentModel.DesignerSerializationVisibility.Content)>  _
    Public ReadOnly Property Classifications() As ClassificationsDataTable
        Get
            Return Me.tableClassifications
        End Get
    End Property
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
     Global.System.ComponentModel.Browsable(false),  _
     Global.System.ComponentModel.DesignerSerializationVisibility(Global.System.ComponentModel.DesignerSerializationVisibility.Content)>  _
    Public ReadOnly Property Components() As ComponentsDataTable
        Get
            Return Me.tableComponents
        End Get
    End Property
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
     Global.System.ComponentModel.Browsable(false),  _
     Global.System.ComponentModel.DesignerSerializationVisibility(Global.System.ComponentModel.DesignerSerializationVisibility.Content)>  _
    Public ReadOnly Property Defaults() As DefaultsDataTable
        Get
            Return Me.tableDefaults
        End Get
    End Property
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
     Global.System.ComponentModel.Browsable(false),  _
     Global.System.ComponentModel.DesignerSerializationVisibility(Global.System.ComponentModel.DesignerSerializationVisibility.Content)>  _
    Public ReadOnly Property Hazard_Lexicon() As Hazard_LexiconDataTable
        Get
            Return Me.tableHazard_Lexicon
        End Get
    End Property
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
     Global.System.ComponentModel.Browsable(false),  _
     Global.System.ComponentModel.DesignerSerializationVisibility(Global.System.ComponentModel.DesignerSerializationVisibility.Content)>  _
    Public ReadOnly Property Precautionary_Lexicon() As Precautionary_LexiconDataTable
        Get
            Return Me.tablePrecautionary_Lexicon
        End Get
    End Property
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
     Global.System.ComponentModel.Browsable(false),  _
     Global.System.ComponentModel.DesignerSerializationVisibility(Global.System.ComponentModel.DesignerSerializationVisibility.Content)>  _
    Public ReadOnly Property Product_Log() As Product_LogDataTable
        Get
            Return Me.tableProduct_Log
        End Get
    End Property
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
     Global.System.ComponentModel.Browsable(false),  _
     Global.System.ComponentModel.DesignerSerializationVisibility(Global.System.ComponentModel.DesignerSerializationVisibility.Content)>  _
    Public ReadOnly Property Safety_Dance() As Safety_DanceDataTable
        Get
            Return Me.tableSafety_Dance
        End Get
    End Property
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
     Global.System.ComponentModel.Browsable(false),  _
     Global.System.ComponentModel.DesignerSerializationVisibility(Global.System.ComponentModel.DesignerSerializationVisibility.Content)>  _
    Public ReadOnly Property Safety_Lexicon() As Safety_LexiconDataTable
        Get
            Return Me.tableSafety_Lexicon
        End Get
    End Property
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
     Global.System.ComponentModel.BrowsableAttribute(true),  _
     Global.System.ComponentModel.DesignerSerializationVisibilityAttribute(Global.System.ComponentModel.DesignerSerializationVisibility.Visible)>  _
    Public Overrides Property SchemaSerializationMode() As Global.System.Data.SchemaSerializationMode
        Get
            Return Me._schemaSerializationMode
        End Get
        Set
            Me._schemaSerializationMode = value
        End Set
    End Property
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
     Global.System.ComponentModel.DesignerSerializationVisibilityAttribute(Global.System.ComponentModel.DesignerSerializationVisibility.Hidden)>  _
    Public Shadows ReadOnly Property Tables() As Global.System.Data.DataTableCollection
        Get
            Return MyBase.Tables
        End Get
    End Property
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
     Global.System.ComponentModel.DesignerSerializationVisibilityAttribute(Global.System.ComponentModel.DesignerSerializationVisibility.Hidden)>  _
    Public Shadows ReadOnly Property Relations() As Global.System.Data.DataRelationCollection
        Get
            Return MyBase.Relations
        End Get
    End Property
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Protected Overrides Sub InitializeDerivedDataSet()
        Me.BeginInit
        Me.InitClass
        Me.EndInit
    End Sub
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Public Overrides Function Clone() As Global.System.Data.DataSet
        Dim cln As Dossier = CType(MyBase.Clone,Dossier)
        cln.InitVars
        cln.SchemaSerializationMode = Me.SchemaSerializationMode
        Return cln
    End Function
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Protected Overrides Function ShouldSerializeTables() As Boolean
        Return false
    End Function
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Protected Overrides Function ShouldSerializeRelations() As Boolean
        Return false
    End Function
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Protected Overrides Sub ReadXmlSerializable(ByVal reader As Global.System.Xml.XmlReader)
        If (Me.DetermineSchemaSerializationMode(reader) = Global.System.Data.SchemaSerializationMode.IncludeSchema) Then
            Me.Reset
            Dim ds As Global.System.Data.DataSet = New Global.System.Data.DataSet()
            ds.ReadXml(reader)
            If (Not (ds.Tables("Acute Toxicity")) Is Nothing) Then
                MyBase.Tables.Add(New Acute_ToxicityDataTable(ds.Tables("Acute Toxicity")))
            End If
            If (Not (ds.Tables("Aquatic Toxicity")) Is Nothing) Then
                MyBase.Tables.Add(New Aquatic_ToxicityDataTable(ds.Tables("Aquatic Toxicity")))
            End If
            If (Not (ds.Tables("Branding")) Is Nothing) Then
                MyBase.Tables.Add(New BrandingDataTable(ds.Tables("Branding")))
            End If
            If (Not (ds.Tables("Classifications")) Is Nothing) Then
                MyBase.Tables.Add(New ClassificationsDataTable(ds.Tables("Classifications")))
            End If
            If (Not (ds.Tables("Components")) Is Nothing) Then
                MyBase.Tables.Add(New ComponentsDataTable(ds.Tables("Components")))
            End If
            If (Not (ds.Tables("Defaults")) Is Nothing) Then
                MyBase.Tables.Add(New DefaultsDataTable(ds.Tables("Defaults")))
            End If
            If (Not (ds.Tables("Hazard Lexicon")) Is Nothing) Then
                MyBase.Tables.Add(New Hazard_LexiconDataTable(ds.Tables("Hazard Lexicon")))
            End If
            If (Not (ds.Tables("Precautionary Lexicon")) Is Nothing) Then
                MyBase.Tables.Add(New Precautionary_LexiconDataTable(ds.Tables("Precautionary Lexicon")))
            End If
            If (Not (ds.Tables("Product Log")) Is Nothing) Then
                MyBase.Tables.Add(New Product_LogDataTable(ds.Tables("Product Log")))
            End If
            If (Not (ds.Tables("Safety Dance")) Is Nothing) Then
                MyBase.Tables.Add(New Safety_DanceDataTable(ds.Tables("Safety Dance")))
            End If
            If (Not (ds.Tables("Safety Lexicon")) Is Nothing) Then
                MyBase.Tables.Add(New Safety_LexiconDataTable(ds.Tables("Safety Lexicon")))
            End If
            Me.DataSetName = ds.DataSetName
            Me.Prefix = ds.Prefix
            Me.Namespace = ds.Namespace
            Me.Locale = ds.Locale
            Me.CaseSensitive = ds.CaseSensitive
            Me.EnforceConstraints = ds.EnforceConstraints
            Me.Merge(ds, false, Global.System.Data.MissingSchemaAction.Add)
            Me.InitVars
        Else
            Me.ReadXml(reader)
            Me.InitVars
        End If
    End Sub
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Protected Overrides Function GetSchemaSerializable() As Global.System.Xml.Schema.XmlSchema
        Dim stream As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
        Me.WriteXmlSchema(New Global.System.Xml.XmlTextWriter(stream, Nothing))
        stream.Position = 0
        Return Global.System.Xml.Schema.XmlSchema.Read(New Global.System.Xml.XmlTextReader(stream), Nothing)
    End Function
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Friend Overloads Sub InitVars()
        Me.InitVars(true)
    End Sub
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Friend Overloads Sub InitVars(ByVal initTable As Boolean)
        Me.tableAcute_Toxicity = CType(MyBase.Tables("Acute Toxicity"),Acute_ToxicityDataTable)
        If (initTable = true) Then
            If (Not (Me.tableAcute_Toxicity) Is Nothing) Then
                Me.tableAcute_Toxicity.InitVars
            End If
        End If
        Me.tableAquatic_Toxicity = CType(MyBase.Tables("Aquatic Toxicity"),Aquatic_ToxicityDataTable)
        If (initTable = true) Then
            If (Not (Me.tableAquatic_Toxicity) Is Nothing) Then
                Me.tableAquatic_Toxicity.InitVars
            End If
        End If
        Me.tableBranding = CType(MyBase.Tables("Branding"),BrandingDataTable)
        If (initTable = true) Then
            If (Not (Me.tableBranding) Is Nothing) Then
                Me.tableBranding.InitVars
            End If
        End If
        Me.tableClassifications = CType(MyBase.Tables("Classifications"),ClassificationsDataTable)
        If (initTable = true) Then
            If (Not (Me.tableClassifications) Is Nothing) Then
                Me.tableClassifications.InitVars
            End If
        End If
        Me.tableComponents = CType(MyBase.Tables("Components"),ComponentsDataTable)
        If (initTable = true) Then
            If (Not (Me.tableComponents) Is Nothing) Then
                Me.tableComponents.InitVars
            End If
        End If
        Me.tableDefaults = CType(MyBase.Tables("Defaults"),DefaultsDataTable)
        If (initTable = true) Then
            If (Not (Me.tableDefaults) Is Nothing) Then
                Me.tableDefaults.InitVars
            End If
        End If
        Me.tableHazard_Lexicon = CType(MyBase.Tables("Hazard Lexicon"),Hazard_LexiconDataTable)
        If (initTable = true) Then
            If (Not (Me.tableHazard_Lexicon) Is Nothing) Then
                Me.tableHazard_Lexicon.InitVars
            End If
        End If
        Me.tablePrecautionary_Lexicon = CType(MyBase.Tables("Precautionary Lexicon"),Precautionary_LexiconDataTable)
        If (initTable = true) Then
            If (Not (Me.tablePrecautionary_Lexicon) Is Nothing) Then
                Me.tablePrecautionary_Lexicon.InitVars
            End If
        End If
        Me.tableProduct_Log = CType(MyBase.Tables("Product Log"),Product_LogDataTable)
        If (initTable = true) Then
            If (Not (Me.tableProduct_Log) Is Nothing) Then
                Me.tableProduct_Log.InitVars
            End If
        End If
        Me.tableSafety_Dance = CType(MyBase.Tables("Safety Dance"),Safety_DanceDataTable)
        If (initTable = true) Then
            If (Not (Me.tableSafety_Dance) Is Nothing) Then
                Me.tableSafety_Dance.InitVars
            End If
        End If
        Me.tableSafety_Lexicon = CType(MyBase.Tables("Safety Lexicon"),Safety_LexiconDataTable)
        If (initTable = true) Then
            If (Not (Me.tableSafety_Lexicon) Is Nothing) Then
                Me.tableSafety_Lexicon.InitVars
            End If
        End If
    End Sub
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Private Sub InitClass()
        Me.DataSetName = "Dossier"
        Me.Prefix = ""
        Me.Namespace = "http://tempuri.org/Dossier.xsd"
        Me.EnforceConstraints = true
        Me.SchemaSerializationMode = Global.System.Data.SchemaSerializationMode.IncludeSchema
        Me.tableAcute_Toxicity = New Acute_ToxicityDataTable()
        MyBase.Tables.Add(Me.tableAcute_Toxicity)
        Me.tableAquatic_Toxicity = New Aquatic_ToxicityDataTable()
        MyBase.Tables.Add(Me.tableAquatic_Toxicity)
        Me.tableBranding = New BrandingDataTable()
        MyBase.Tables.Add(Me.tableBranding)
        Me.tableClassifications = New ClassificationsDataTable()
        MyBase.Tables.Add(Me.tableClassifications)
        Me.tableComponents = New ComponentsDataTable()
        MyBase.Tables.Add(Me.tableComponents)
        Me.tableDefaults = New DefaultsDataTable()
        MyBase.Tables.Add(Me.tableDefaults)
        Me.tableHazard_Lexicon = New Hazard_LexiconDataTable()
        MyBase.Tables.Add(Me.tableHazard_Lexicon)
        Me.tablePrecautionary_Lexicon = New Precautionary_LexiconDataTable()
        MyBase.Tables.Add(Me.tablePrecautionary_Lexicon)
        Me.tableProduct_Log = New Product_LogDataTable()
        MyBase.Tables.Add(Me.tableProduct_Log)
        Me.tableSafety_Dance = New Safety_DanceDataTable()
        MyBase.Tables.Add(Me.tableSafety_Dance)
        Me.tableSafety_Lexicon = New Safety_LexiconDataTable()
        MyBase.Tables.Add(Me.tableSafety_Lexicon)
    End Sub
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Private Function ShouldSerializeAcute_Toxicity() As Boolean
        Return false
    End Function
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Private Function ShouldSerializeAquatic_Toxicity() As Boolean
        Return false
    End Function
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Private Function ShouldSerializeBranding() As Boolean
        Return false
    End Function
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Private Function ShouldSerializeClassifications() As Boolean
        Return false
    End Function
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Private Function ShouldSerializeComponents() As Boolean
        Return false
    End Function
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Private Function ShouldSerializeDefaults() As Boolean
        Return false
    End Function
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Private Function ShouldSerializeHazard_Lexicon() As Boolean
        Return false
    End Function
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Private Function ShouldSerializePrecautionary_Lexicon() As Boolean
        Return false
    End Function
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Private Function ShouldSerializeProduct_Log() As Boolean
        Return false
    End Function
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Private Function ShouldSerializeSafety_Dance() As Boolean
        Return false
    End Function
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Private Function ShouldSerializeSafety_Lexicon() As Boolean
        Return false
    End Function
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Private Sub SchemaChanged(ByVal sender As Object, ByVal e As Global.System.ComponentModel.CollectionChangeEventArgs)
        If (e.Action = Global.System.ComponentModel.CollectionChangeAction.Remove) Then
            Me.InitVars
        End If
    End Sub
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Public Shared Function GetTypedDataSetSchema(ByVal xs As Global.System.Xml.Schema.XmlSchemaSet) As Global.System.Xml.Schema.XmlSchemaComplexType
        Dim ds As Dossier = New Dossier()
        Dim type As Global.System.Xml.Schema.XmlSchemaComplexType = New Global.System.Xml.Schema.XmlSchemaComplexType()
        Dim sequence As Global.System.Xml.Schema.XmlSchemaSequence = New Global.System.Xml.Schema.XmlSchemaSequence()
        Dim any As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
        any.Namespace = ds.Namespace
        sequence.Items.Add(any)
        type.Particle = sequence
        Dim dsSchema As Global.System.Xml.Schema.XmlSchema = ds.GetSchemaSerializable
        If xs.Contains(dsSchema.TargetNamespace) Then
            Dim s1 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
            Dim s2 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
            Try 
                Dim schema As Global.System.Xml.Schema.XmlSchema = Nothing
                dsSchema.Write(s1)
                Dim schemas As Global.System.Collections.IEnumerator = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator
                Do While schemas.MoveNext
                    schema = CType(schemas.Current,Global.System.Xml.Schema.XmlSchema)
                    s2.SetLength(0)
                    schema.Write(s2)
                    If (s1.Length = s2.Length) Then
                        s1.Position = 0
                        s2.Position = 0
                        
                        Do While ((s1.Position <> s1.Length)  _
                                    AndAlso (s1.ReadByte = s2.ReadByte))
                            
                            
                        Loop
                        If (s1.Position = s1.Length) Then
                            Return type
                        End If
                    End If
                    
                Loop
            Finally
                If (Not (s1) Is Nothing) Then
                    s1.Close
                End If
                If (Not (s2) Is Nothing) Then
                    s2.Close
                End If
            End Try
        End If
        xs.Add(dsSchema)
        Return type
    End Function
    
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Public Delegate Sub Acute_ToxicityRowChangeEventHandler(ByVal sender As Object, ByVal e As Acute_ToxicityRowChangeEvent)
    
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Public Delegate Sub Aquatic_ToxicityRowChangeEventHandler(ByVal sender As Object, ByVal e As Aquatic_ToxicityRowChangeEvent)
    
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Public Delegate Sub BrandingRowChangeEventHandler(ByVal sender As Object, ByVal e As BrandingRowChangeEvent)
    
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Public Delegate Sub ClassificationsRowChangeEventHandler(ByVal sender As Object, ByVal e As ClassificationsRowChangeEvent)
    
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Public Delegate Sub ComponentsRowChangeEventHandler(ByVal sender As Object, ByVal e As ComponentsRowChangeEvent)
    
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Public Delegate Sub DefaultsRowChangeEventHandler(ByVal sender As Object, ByVal e As DefaultsRowChangeEvent)
    
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Public Delegate Sub Hazard_LexiconRowChangeEventHandler(ByVal sender As Object, ByVal e As Hazard_LexiconRowChangeEvent)
    
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Public Delegate Sub Precautionary_LexiconRowChangeEventHandler(ByVal sender As Object, ByVal e As Precautionary_LexiconRowChangeEvent)
    
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Public Delegate Sub Product_LogRowChangeEventHandler(ByVal sender As Object, ByVal e As Product_LogRowChangeEvent)
    
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Public Delegate Sub Safety_DanceRowChangeEventHandler(ByVal sender As Object, ByVal e As Safety_DanceRowChangeEvent)
    
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Public Delegate Sub Safety_LexiconRowChangeEventHandler(ByVal sender As Object, ByVal e As Safety_LexiconRowChangeEvent)
    
    '''<summary>
    '''Represents the strongly named DataTable class.
    '''</summary>
    <Global.System.Serializable(),  _
     Global.System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")>  _
    Partial Public Class Acute_ToxicityDataTable
        Inherits Global.System.Data.TypedTableBase(Of Acute_ToxicityRow)
        
        Private columnACTID As Global.System.Data.DataColumn
        
        Private columnSubsort As Global.System.Data.DataColumn
        
        Private columnSubstance As Global.System.Data.DataColumn
        
        Private columnConcentration As Global.System.Data.DataColumn
        
        Private columnCAS As Global.System.Data.DataColumn
        
        Private columnTest As Global.System.Data.DataColumn
        
        Private columnResult As Global.System.Data.DataColumn
        
        Private columnNotes As Global.System.Data.DataColumn
        
        Private columnSource As Global.System.Data.DataColumn
        
        Private columnSource_embed As Global.System.Data.DataColumn
        
        Private columnType As Global.System.Data.DataColumn
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub New()
            MyBase.New
            Me.TableName = "Acute Toxicity"
            Me.BeginInit
            Me.InitClass
            Me.EndInit
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Sub New(ByVal table As Global.System.Data.DataTable)
            MyBase.New
            Me.TableName = table.TableName
            If (table.CaseSensitive <> table.DataSet.CaseSensitive) Then
                Me.CaseSensitive = table.CaseSensitive
            End If
            If (table.Locale.ToString <> table.DataSet.Locale.ToString) Then
                Me.Locale = table.Locale
            End If
            If (table.Namespace <> table.DataSet.Namespace) Then
                Me.Namespace = table.Namespace
            End If
            Me.Prefix = table.Prefix
            Me.MinimumCapacity = table.MinimumCapacity
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Sub New(ByVal info As Global.System.Runtime.Serialization.SerializationInfo, ByVal context As Global.System.Runtime.Serialization.StreamingContext)
            MyBase.New(info, context)
            Me.InitVars
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property ACTIDColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnACTID
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property SubsortColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnSubsort
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property SubstanceColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnSubstance
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property ConcentrationColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnConcentration
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property CASColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnCAS
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property TestColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnTest
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property ResultColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnResult
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property NotesColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnNotes
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property SourceColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnSource
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property Source_embedColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnSource_embed
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property TypeColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnType
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Browsable(false)>  _
        Public ReadOnly Property Count() As Integer
            Get
                Return Me.Rows.Count
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Default ReadOnly Property Item(ByVal index As Integer) As Acute_ToxicityRow
            Get
                Return CType(Me.Rows(index),Acute_ToxicityRow)
            End Get
        End Property
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event Acute_ToxicityRowChanging As Acute_ToxicityRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event Acute_ToxicityRowChanged As Acute_ToxicityRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event Acute_ToxicityRowDeleting As Acute_ToxicityRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event Acute_ToxicityRowDeleted As Acute_ToxicityRowChangeEventHandler
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Overloads Sub AddAcute_ToxicityRow(ByVal row As Acute_ToxicityRow)
            Me.Rows.Add(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Overloads Function AddAcute_ToxicityRow(ByVal Subsort As Integer, ByVal Substance As String, ByVal Concentration As String, ByVal CAS As String, ByVal Test As String, ByVal Result As String, ByVal Notes As String, ByVal Source As String, ByVal Source_embed As String, ByVal Type As String) As Acute_ToxicityRow
            Dim rowAcute_ToxicityRow As Acute_ToxicityRow = CType(Me.NewRow,Acute_ToxicityRow)
            Dim columnValuesArray() As Object = New Object() {Nothing, Subsort, Substance, Concentration, CAS, Test, Result, Notes, Source, Source_embed, Type}
            rowAcute_ToxicityRow.ItemArray = columnValuesArray
            Me.Rows.Add(rowAcute_ToxicityRow)
            Return rowAcute_ToxicityRow
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Overrides Function Clone() As Global.System.Data.DataTable
            Dim cln As Acute_ToxicityDataTable = CType(MyBase.Clone,Acute_ToxicityDataTable)
            cln.InitVars
            Return cln
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Function CreateInstance() As Global.System.Data.DataTable
            Return New Acute_ToxicityDataTable()
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Sub InitVars()
            Me.columnACTID = MyBase.Columns("ACTID")
            Me.columnSubsort = MyBase.Columns("Subsort")
            Me.columnSubstance = MyBase.Columns("Substance")
            Me.columnConcentration = MyBase.Columns("Concentration")
            Me.columnCAS = MyBase.Columns("CAS")
            Me.columnTest = MyBase.Columns("Test")
            Me.columnResult = MyBase.Columns("Result")
            Me.columnNotes = MyBase.Columns("Notes")
            Me.columnSource = MyBase.Columns("Source")
            Me.columnSource_embed = MyBase.Columns("Source embed")
            Me.columnType = MyBase.Columns("Type")
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Private Sub InitClass()
            Me.columnACTID = New Global.System.Data.DataColumn("ACTID", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnACTID)
            Me.columnSubsort = New Global.System.Data.DataColumn("Subsort", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnSubsort)
            Me.columnSubstance = New Global.System.Data.DataColumn("Substance", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnSubstance)
            Me.columnConcentration = New Global.System.Data.DataColumn("Concentration", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnConcentration)
            Me.columnCAS = New Global.System.Data.DataColumn("CAS", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCAS)
            Me.columnTest = New Global.System.Data.DataColumn("Test", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnTest)
            Me.columnResult = New Global.System.Data.DataColumn("Result", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnResult)
            Me.columnNotes = New Global.System.Data.DataColumn("Notes", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnNotes)
            Me.columnSource = New Global.System.Data.DataColumn("Source", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnSource)
            Me.columnSource_embed = New Global.System.Data.DataColumn("Source embed", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnSource_embed)
            Me.columnType = New Global.System.Data.DataColumn("Type", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnType)
            Me.columnACTID.AutoIncrement = true
            Me.columnACTID.AutoIncrementSeed = -1
            Me.columnACTID.AutoIncrementStep = -1
            Me.columnSubstance.MaxLength = 255
            Me.columnConcentration.MaxLength = 255
            Me.columnCAS.MaxLength = 255
            Me.columnTest.MaxLength = 255
            Me.columnResult.MaxLength = 255
            Me.columnNotes.MaxLength = 536870910
            Me.columnSource.MaxLength = 255
            Me.columnSource_embed.MaxLength = 536870910
            Me.columnType.MaxLength = 536870910
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function NewAcute_ToxicityRow() As Acute_ToxicityRow
            Return CType(Me.NewRow,Acute_ToxicityRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Function NewRowFromBuilder(ByVal builder As Global.System.Data.DataRowBuilder) As Global.System.Data.DataRow
            Return New Acute_ToxicityRow(builder)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Function GetRowType() As Global.System.Type
            Return GetType(Acute_ToxicityRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Sub OnRowChanged(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanged(e)
            If (Not (Me.Acute_ToxicityRowChangedEvent) Is Nothing) Then
                RaiseEvent Acute_ToxicityRowChanged(Me, New Acute_ToxicityRowChangeEvent(CType(e.Row,Acute_ToxicityRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Sub OnRowChanging(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanging(e)
            If (Not (Me.Acute_ToxicityRowChangingEvent) Is Nothing) Then
                RaiseEvent Acute_ToxicityRowChanging(Me, New Acute_ToxicityRowChangeEvent(CType(e.Row,Acute_ToxicityRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Sub OnRowDeleted(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleted(e)
            If (Not (Me.Acute_ToxicityRowDeletedEvent) Is Nothing) Then
                RaiseEvent Acute_ToxicityRowDeleted(Me, New Acute_ToxicityRowChangeEvent(CType(e.Row,Acute_ToxicityRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Sub OnRowDeleting(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleting(e)
            If (Not (Me.Acute_ToxicityRowDeletingEvent) Is Nothing) Then
                RaiseEvent Acute_ToxicityRowDeleting(Me, New Acute_ToxicityRowChangeEvent(CType(e.Row,Acute_ToxicityRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub RemoveAcute_ToxicityRow(ByVal row As Acute_ToxicityRow)
            Me.Rows.Remove(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Shared Function GetTypedTableSchema(ByVal xs As Global.System.Xml.Schema.XmlSchemaSet) As Global.System.Xml.Schema.XmlSchemaComplexType
            Dim type As Global.System.Xml.Schema.XmlSchemaComplexType = New Global.System.Xml.Schema.XmlSchemaComplexType()
            Dim sequence As Global.System.Xml.Schema.XmlSchemaSequence = New Global.System.Xml.Schema.XmlSchemaSequence()
            Dim ds As Dossier = New Dossier()
            Dim any1 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
            any1.Namespace = "http://www.w3.org/2001/XMLSchema"
            any1.MinOccurs = New Decimal(0)
            any1.MaxOccurs = Decimal.MaxValue
            any1.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any1)
            Dim any2 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
            any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1"
            any2.MinOccurs = New Decimal(1)
            any2.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any2)
            Dim attribute1 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute()
            attribute1.Name = "namespace"
            attribute1.FixedValue = ds.Namespace
            type.Attributes.Add(attribute1)
            Dim attribute2 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute()
            attribute2.Name = "tableTypeName"
            attribute2.FixedValue = "Acute_ToxicityDataTable"
            type.Attributes.Add(attribute2)
            type.Particle = sequence
            Dim dsSchema As Global.System.Xml.Schema.XmlSchema = ds.GetSchemaSerializable
            If xs.Contains(dsSchema.TargetNamespace) Then
                Dim s1 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
                Dim s2 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
                Try 
                    Dim schema As Global.System.Xml.Schema.XmlSchema = Nothing
                    dsSchema.Write(s1)
                    Dim schemas As Global.System.Collections.IEnumerator = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator
                    Do While schemas.MoveNext
                        schema = CType(schemas.Current,Global.System.Xml.Schema.XmlSchema)
                        s2.SetLength(0)
                        schema.Write(s2)
                        If (s1.Length = s2.Length) Then
                            s1.Position = 0
                            s2.Position = 0
                            
                            Do While ((s1.Position <> s1.Length)  _
                                        AndAlso (s1.ReadByte = s2.ReadByte))
                                
                                
                            Loop
                            If (s1.Position = s1.Length) Then
                                Return type
                            End If
                        End If
                        
                    Loop
                Finally
                    If (Not (s1) Is Nothing) Then
                        s1.Close
                    End If
                    If (Not (s2) Is Nothing) Then
                        s2.Close
                    End If
                End Try
            End If
            xs.Add(dsSchema)
            Return type
        End Function
    End Class
    
    '''<summary>
    '''Represents the strongly named DataTable class.
    '''</summary>
    <Global.System.Serializable(),  _
     Global.System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")>  _
    Partial Public Class Aquatic_ToxicityDataTable
        Inherits Global.System.Data.TypedTableBase(Of Aquatic_ToxicityRow)
        
        Private columnAQTIDID As Global.System.Data.DataColumn
        
        Private columnSubsort As Global.System.Data.DataColumn
        
        Private columnIsProduct As Global.System.Data.DataColumn
        
        Private columnSubstance As Global.System.Data.DataColumn
        
        Private columnConcentration As Global.System.Data.DataColumn
        
        Private columnTest As Global.System.Data.DataColumn
        
        Private columnResult As Global.System.Data.DataColumn
        
        Private columnNotes As Global.System.Data.DataColumn
        
        Private columnSource As Global.System.Data.DataColumn
        
        Private columnSource_embed As Global.System.Data.DataColumn
        
        Private columnType As Global.System.Data.DataColumn
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub New()
            MyBase.New
            Me.TableName = "Aquatic Toxicity"
            Me.BeginInit
            Me.InitClass
            Me.EndInit
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Sub New(ByVal table As Global.System.Data.DataTable)
            MyBase.New
            Me.TableName = table.TableName
            If (table.CaseSensitive <> table.DataSet.CaseSensitive) Then
                Me.CaseSensitive = table.CaseSensitive
            End If
            If (table.Locale.ToString <> table.DataSet.Locale.ToString) Then
                Me.Locale = table.Locale
            End If
            If (table.Namespace <> table.DataSet.Namespace) Then
                Me.Namespace = table.Namespace
            End If
            Me.Prefix = table.Prefix
            Me.MinimumCapacity = table.MinimumCapacity
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Sub New(ByVal info As Global.System.Runtime.Serialization.SerializationInfo, ByVal context As Global.System.Runtime.Serialization.StreamingContext)
            MyBase.New(info, context)
            Me.InitVars
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property AQTIDIDColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnAQTIDID
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property SubsortColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnSubsort
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property IsProductColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnIsProduct
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property SubstanceColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnSubstance
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property ConcentrationColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnConcentration
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property TestColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnTest
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property ResultColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnResult
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property NotesColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnNotes
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property SourceColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnSource
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property Source_embedColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnSource_embed
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property TypeColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnType
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Browsable(false)>  _
        Public ReadOnly Property Count() As Integer
            Get
                Return Me.Rows.Count
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Default ReadOnly Property Item(ByVal index As Integer) As Aquatic_ToxicityRow
            Get
                Return CType(Me.Rows(index),Aquatic_ToxicityRow)
            End Get
        End Property
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event Aquatic_ToxicityRowChanging As Aquatic_ToxicityRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event Aquatic_ToxicityRowChanged As Aquatic_ToxicityRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event Aquatic_ToxicityRowDeleting As Aquatic_ToxicityRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event Aquatic_ToxicityRowDeleted As Aquatic_ToxicityRowChangeEventHandler
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Overloads Sub AddAquatic_ToxicityRow(ByVal row As Aquatic_ToxicityRow)
            Me.Rows.Add(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Overloads Function AddAquatic_ToxicityRow(ByVal Subsort As Integer, ByVal IsProduct As Boolean, ByVal Substance As String, ByVal Concentration As String, ByVal Test As String, ByVal Result As String, ByVal Notes As String, ByVal Source As String, ByVal Source_embed As String, ByVal Type As String) As Aquatic_ToxicityRow
            Dim rowAquatic_ToxicityRow As Aquatic_ToxicityRow = CType(Me.NewRow,Aquatic_ToxicityRow)
            Dim columnValuesArray() As Object = New Object() {Nothing, Subsort, IsProduct, Substance, Concentration, Test, Result, Notes, Source, Source_embed, Type}
            rowAquatic_ToxicityRow.ItemArray = columnValuesArray
            Me.Rows.Add(rowAquatic_ToxicityRow)
            Return rowAquatic_ToxicityRow
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Overrides Function Clone() As Global.System.Data.DataTable
            Dim cln As Aquatic_ToxicityDataTable = CType(MyBase.Clone,Aquatic_ToxicityDataTable)
            cln.InitVars
            Return cln
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Function CreateInstance() As Global.System.Data.DataTable
            Return New Aquatic_ToxicityDataTable()
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Sub InitVars()
            Me.columnAQTIDID = MyBase.Columns("AQTIDID")
            Me.columnSubsort = MyBase.Columns("Subsort")
            Me.columnIsProduct = MyBase.Columns("IsProduct")
            Me.columnSubstance = MyBase.Columns("Substance")
            Me.columnConcentration = MyBase.Columns("Concentration")
            Me.columnTest = MyBase.Columns("Test")
            Me.columnResult = MyBase.Columns("Result")
            Me.columnNotes = MyBase.Columns("Notes")
            Me.columnSource = MyBase.Columns("Source")
            Me.columnSource_embed = MyBase.Columns("Source embed")
            Me.columnType = MyBase.Columns("Type")
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Private Sub InitClass()
            Me.columnAQTIDID = New Global.System.Data.DataColumn("AQTIDID", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnAQTIDID)
            Me.columnSubsort = New Global.System.Data.DataColumn("Subsort", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnSubsort)
            Me.columnIsProduct = New Global.System.Data.DataColumn("IsProduct", GetType(Boolean), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnIsProduct)
            Me.columnSubstance = New Global.System.Data.DataColumn("Substance", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnSubstance)
            Me.columnConcentration = New Global.System.Data.DataColumn("Concentration", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnConcentration)
            Me.columnTest = New Global.System.Data.DataColumn("Test", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnTest)
            Me.columnResult = New Global.System.Data.DataColumn("Result", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnResult)
            Me.columnNotes = New Global.System.Data.DataColumn("Notes", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnNotes)
            Me.columnSource = New Global.System.Data.DataColumn("Source", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnSource)
            Me.columnSource_embed = New Global.System.Data.DataColumn("Source embed", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnSource_embed)
            Me.columnType = New Global.System.Data.DataColumn("Type", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnType)
            Me.columnAQTIDID.AutoIncrement = true
            Me.columnAQTIDID.AutoIncrementSeed = -1
            Me.columnAQTIDID.AutoIncrementStep = -1
            Me.columnSubstance.MaxLength = 255
            Me.columnConcentration.MaxLength = 255
            Me.columnTest.MaxLength = 255
            Me.columnResult.MaxLength = 255
            Me.columnNotes.MaxLength = 536870910
            Me.columnSource.MaxLength = 536870910
            Me.columnSource_embed.MaxLength = 255
            Me.columnType.MaxLength = 536870910
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function NewAquatic_ToxicityRow() As Aquatic_ToxicityRow
            Return CType(Me.NewRow,Aquatic_ToxicityRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Function NewRowFromBuilder(ByVal builder As Global.System.Data.DataRowBuilder) As Global.System.Data.DataRow
            Return New Aquatic_ToxicityRow(builder)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Function GetRowType() As Global.System.Type
            Return GetType(Aquatic_ToxicityRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Sub OnRowChanged(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanged(e)
            If (Not (Me.Aquatic_ToxicityRowChangedEvent) Is Nothing) Then
                RaiseEvent Aquatic_ToxicityRowChanged(Me, New Aquatic_ToxicityRowChangeEvent(CType(e.Row,Aquatic_ToxicityRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Sub OnRowChanging(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanging(e)
            If (Not (Me.Aquatic_ToxicityRowChangingEvent) Is Nothing) Then
                RaiseEvent Aquatic_ToxicityRowChanging(Me, New Aquatic_ToxicityRowChangeEvent(CType(e.Row,Aquatic_ToxicityRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Sub OnRowDeleted(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleted(e)
            If (Not (Me.Aquatic_ToxicityRowDeletedEvent) Is Nothing) Then
                RaiseEvent Aquatic_ToxicityRowDeleted(Me, New Aquatic_ToxicityRowChangeEvent(CType(e.Row,Aquatic_ToxicityRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Sub OnRowDeleting(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleting(e)
            If (Not (Me.Aquatic_ToxicityRowDeletingEvent) Is Nothing) Then
                RaiseEvent Aquatic_ToxicityRowDeleting(Me, New Aquatic_ToxicityRowChangeEvent(CType(e.Row,Aquatic_ToxicityRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub RemoveAquatic_ToxicityRow(ByVal row As Aquatic_ToxicityRow)
            Me.Rows.Remove(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Shared Function GetTypedTableSchema(ByVal xs As Global.System.Xml.Schema.XmlSchemaSet) As Global.System.Xml.Schema.XmlSchemaComplexType
            Dim type As Global.System.Xml.Schema.XmlSchemaComplexType = New Global.System.Xml.Schema.XmlSchemaComplexType()
            Dim sequence As Global.System.Xml.Schema.XmlSchemaSequence = New Global.System.Xml.Schema.XmlSchemaSequence()
            Dim ds As Dossier = New Dossier()
            Dim any1 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
            any1.Namespace = "http://www.w3.org/2001/XMLSchema"
            any1.MinOccurs = New Decimal(0)
            any1.MaxOccurs = Decimal.MaxValue
            any1.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any1)
            Dim any2 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
            any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1"
            any2.MinOccurs = New Decimal(1)
            any2.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any2)
            Dim attribute1 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute()
            attribute1.Name = "namespace"
            attribute1.FixedValue = ds.Namespace
            type.Attributes.Add(attribute1)
            Dim attribute2 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute()
            attribute2.Name = "tableTypeName"
            attribute2.FixedValue = "Aquatic_ToxicityDataTable"
            type.Attributes.Add(attribute2)
            type.Particle = sequence
            Dim dsSchema As Global.System.Xml.Schema.XmlSchema = ds.GetSchemaSerializable
            If xs.Contains(dsSchema.TargetNamespace) Then
                Dim s1 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
                Dim s2 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
                Try 
                    Dim schema As Global.System.Xml.Schema.XmlSchema = Nothing
                    dsSchema.Write(s1)
                    Dim schemas As Global.System.Collections.IEnumerator = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator
                    Do While schemas.MoveNext
                        schema = CType(schemas.Current,Global.System.Xml.Schema.XmlSchema)
                        s2.SetLength(0)
                        schema.Write(s2)
                        If (s1.Length = s2.Length) Then
                            s1.Position = 0
                            s2.Position = 0
                            
                            Do While ((s1.Position <> s1.Length)  _
                                        AndAlso (s1.ReadByte = s2.ReadByte))
                                
                                
                            Loop
                            If (s1.Position = s1.Length) Then
                                Return type
                            End If
                        End If
                        
                    Loop
                Finally
                    If (Not (s1) Is Nothing) Then
                        s1.Close
                    End If
                    If (Not (s2) Is Nothing) Then
                        s2.Close
                    End If
                End Try
            End If
            xs.Add(dsSchema)
            Return type
        End Function
    End Class
    
    '''<summary>
    '''Represents the strongly named DataTable class.
    '''</summary>
    <Global.System.Serializable(),  _
     Global.System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")>  _
    Partial Public Class BrandingDataTable
        Inherits Global.System.Data.TypedTableBase(Of BrandingRow)
        
        Private columnCID As Global.System.Data.DataColumn
        
        Private columnSupplier_fullname As Global.System.Data.DataColumn
        
        Private columnSupplier As Global.System.Data.DataColumn
        
        Private columnSupplier_address_1 As Global.System.Data.DataColumn
        
        Private columnSupplier_address_2 As Global.System.Data.DataColumn
        
        Private columnSupplier_address_3 As Global.System.Data.DataColumn
        
        Private columnSupplier_city As Global.System.Data.DataColumn
        
        Private columnSupplier_state As Global.System.Data.DataColumn
        
        Private columnSupplier_zip As Global.System.Data.DataColumn
        
        Private columnSupplier_phone As Global.System.Data.DataColumn
        
        Private columnSupplier_ec As Global.System.Data.DataColumn
        
        Private columnWebsite As Global.System.Data.DataColumn
        
        Private columnSupplier_address As Global.System.Data.DataColumn
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub New()
            MyBase.New
            Me.TableName = "Branding"
            Me.BeginInit
            Me.InitClass
            Me.EndInit
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Sub New(ByVal table As Global.System.Data.DataTable)
            MyBase.New
            Me.TableName = table.TableName
            If (table.CaseSensitive <> table.DataSet.CaseSensitive) Then
                Me.CaseSensitive = table.CaseSensitive
            End If
            If (table.Locale.ToString <> table.DataSet.Locale.ToString) Then
                Me.Locale = table.Locale
            End If
            If (table.Namespace <> table.DataSet.Namespace) Then
                Me.Namespace = table.Namespace
            End If
            Me.Prefix = table.Prefix
            Me.MinimumCapacity = table.MinimumCapacity
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Sub New(ByVal info As Global.System.Runtime.Serialization.SerializationInfo, ByVal context As Global.System.Runtime.Serialization.StreamingContext)
            MyBase.New(info, context)
            Me.InitVars
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property CIDColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnCID
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property Supplier_fullnameColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnSupplier_fullname
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property SupplierColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnSupplier
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property Supplier_address_1Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnSupplier_address_1
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property Supplier_address_2Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnSupplier_address_2
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property Supplier_address_3Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnSupplier_address_3
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property Supplier_cityColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnSupplier_city
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property Supplier_stateColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnSupplier_state
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property Supplier_zipColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnSupplier_zip
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property Supplier_phoneColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnSupplier_phone
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property Supplier_ecColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnSupplier_ec
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property WebsiteColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnWebsite
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property Supplier_addressColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnSupplier_address
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Browsable(false)>  _
        Public ReadOnly Property Count() As Integer
            Get
                Return Me.Rows.Count
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Default ReadOnly Property Item(ByVal index As Integer) As BrandingRow
            Get
                Return CType(Me.Rows(index),BrandingRow)
            End Get
        End Property
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event BrandingRowChanging As BrandingRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event BrandingRowChanged As BrandingRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event BrandingRowDeleting As BrandingRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event BrandingRowDeleted As BrandingRowChangeEventHandler
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Overloads Sub AddBrandingRow(ByVal row As BrandingRow)
            Me.Rows.Add(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Overloads Function AddBrandingRow(ByVal Supplier_fullname As String, ByVal Supplier As String, ByVal Supplier_address_1 As String, ByVal Supplier_address_2 As String, ByVal Supplier_address_3 As String, ByVal Supplier_city As String, ByVal Supplier_state As String, ByVal Supplier_zip As String, ByVal Supplier_phone As String, ByVal Supplier_ec As String, ByVal Website As String, ByVal Supplier_address As String) As BrandingRow
            Dim rowBrandingRow As BrandingRow = CType(Me.NewRow,BrandingRow)
            Dim columnValuesArray() As Object = New Object() {Nothing, Supplier_fullname, Supplier, Supplier_address_1, Supplier_address_2, Supplier_address_3, Supplier_city, Supplier_state, Supplier_zip, Supplier_phone, Supplier_ec, Website, Supplier_address}
            rowBrandingRow.ItemArray = columnValuesArray
            Me.Rows.Add(rowBrandingRow)
            Return rowBrandingRow
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function FindByCID(ByVal CID As Integer) As BrandingRow
            Return CType(Me.Rows.Find(New Object() {CID}),BrandingRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Overrides Function Clone() As Global.System.Data.DataTable
            Dim cln As BrandingDataTable = CType(MyBase.Clone,BrandingDataTable)
            cln.InitVars
            Return cln
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Function CreateInstance() As Global.System.Data.DataTable
            Return New BrandingDataTable()
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Sub InitVars()
            Me.columnCID = MyBase.Columns("CID")
            Me.columnSupplier_fullname = MyBase.Columns("Supplier_fullname")
            Me.columnSupplier = MyBase.Columns("Supplier")
            Me.columnSupplier_address_1 = MyBase.Columns("Supplier_address_1")
            Me.columnSupplier_address_2 = MyBase.Columns("Supplier_address_2")
            Me.columnSupplier_address_3 = MyBase.Columns("Supplier_address_3")
            Me.columnSupplier_city = MyBase.Columns("Supplier_city")
            Me.columnSupplier_state = MyBase.Columns("Supplier_state")
            Me.columnSupplier_zip = MyBase.Columns("Supplier_zip")
            Me.columnSupplier_phone = MyBase.Columns("Supplier_phone")
            Me.columnSupplier_ec = MyBase.Columns("Supplier_ec")
            Me.columnWebsite = MyBase.Columns("Website")
            Me.columnSupplier_address = MyBase.Columns("Supplier_address")
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Private Sub InitClass()
            Me.columnCID = New Global.System.Data.DataColumn("CID", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCID)
            Me.columnSupplier_fullname = New Global.System.Data.DataColumn("Supplier_fullname", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnSupplier_fullname)
            Me.columnSupplier = New Global.System.Data.DataColumn("Supplier", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnSupplier)
            Me.columnSupplier_address_1 = New Global.System.Data.DataColumn("Supplier_address_1", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnSupplier_address_1)
            Me.columnSupplier_address_2 = New Global.System.Data.DataColumn("Supplier_address_2", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnSupplier_address_2)
            Me.columnSupplier_address_3 = New Global.System.Data.DataColumn("Supplier_address_3", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnSupplier_address_3)
            Me.columnSupplier_city = New Global.System.Data.DataColumn("Supplier_city", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnSupplier_city)
            Me.columnSupplier_state = New Global.System.Data.DataColumn("Supplier_state", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnSupplier_state)
            Me.columnSupplier_zip = New Global.System.Data.DataColumn("Supplier_zip", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnSupplier_zip)
            Me.columnSupplier_phone = New Global.System.Data.DataColumn("Supplier_phone", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnSupplier_phone)
            Me.columnSupplier_ec = New Global.System.Data.DataColumn("Supplier_ec", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnSupplier_ec)
            Me.columnWebsite = New Global.System.Data.DataColumn("Website", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnWebsite)
            Me.columnSupplier_address = New Global.System.Data.DataColumn("Supplier_address", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnSupplier_address)
            Me.Constraints.Add(New Global.System.Data.UniqueConstraint("Constraint1", New Global.System.Data.DataColumn() {Me.columnCID}, true))
            Me.columnCID.AutoIncrement = true
            Me.columnCID.AutoIncrementSeed = -1
            Me.columnCID.AutoIncrementStep = -1
            Me.columnCID.AllowDBNull = false
            Me.columnCID.Unique = true
            Me.columnSupplier_fullname.MaxLength = 255
            Me.columnSupplier.MaxLength = 255
            Me.columnSupplier_address_1.MaxLength = 255
            Me.columnSupplier_address_2.MaxLength = 255
            Me.columnSupplier_address_3.MaxLength = 255
            Me.columnSupplier_city.MaxLength = 255
            Me.columnSupplier_state.MaxLength = 2
            Me.columnSupplier_zip.MaxLength = 10
            Me.columnSupplier_phone.MaxLength = 255
            Me.columnSupplier_ec.MaxLength = 255
            Me.columnWebsite.MaxLength = 255
            Me.columnSupplier_address.MaxLength = 536870910
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function NewBrandingRow() As BrandingRow
            Return CType(Me.NewRow,BrandingRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Function NewRowFromBuilder(ByVal builder As Global.System.Data.DataRowBuilder) As Global.System.Data.DataRow
            Return New BrandingRow(builder)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Function GetRowType() As Global.System.Type
            Return GetType(BrandingRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Sub OnRowChanged(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanged(e)
            If (Not (Me.BrandingRowChangedEvent) Is Nothing) Then
                RaiseEvent BrandingRowChanged(Me, New BrandingRowChangeEvent(CType(e.Row,BrandingRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Sub OnRowChanging(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanging(e)
            If (Not (Me.BrandingRowChangingEvent) Is Nothing) Then
                RaiseEvent BrandingRowChanging(Me, New BrandingRowChangeEvent(CType(e.Row,BrandingRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Sub OnRowDeleted(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleted(e)
            If (Not (Me.BrandingRowDeletedEvent) Is Nothing) Then
                RaiseEvent BrandingRowDeleted(Me, New BrandingRowChangeEvent(CType(e.Row,BrandingRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Sub OnRowDeleting(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleting(e)
            If (Not (Me.BrandingRowDeletingEvent) Is Nothing) Then
                RaiseEvent BrandingRowDeleting(Me, New BrandingRowChangeEvent(CType(e.Row,BrandingRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub RemoveBrandingRow(ByVal row As BrandingRow)
            Me.Rows.Remove(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Shared Function GetTypedTableSchema(ByVal xs As Global.System.Xml.Schema.XmlSchemaSet) As Global.System.Xml.Schema.XmlSchemaComplexType
            Dim type As Global.System.Xml.Schema.XmlSchemaComplexType = New Global.System.Xml.Schema.XmlSchemaComplexType()
            Dim sequence As Global.System.Xml.Schema.XmlSchemaSequence = New Global.System.Xml.Schema.XmlSchemaSequence()
            Dim ds As Dossier = New Dossier()
            Dim any1 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
            any1.Namespace = "http://www.w3.org/2001/XMLSchema"
            any1.MinOccurs = New Decimal(0)
            any1.MaxOccurs = Decimal.MaxValue
            any1.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any1)
            Dim any2 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
            any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1"
            any2.MinOccurs = New Decimal(1)
            any2.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any2)
            Dim attribute1 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute()
            attribute1.Name = "namespace"
            attribute1.FixedValue = ds.Namespace
            type.Attributes.Add(attribute1)
            Dim attribute2 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute()
            attribute2.Name = "tableTypeName"
            attribute2.FixedValue = "BrandingDataTable"
            type.Attributes.Add(attribute2)
            type.Particle = sequence
            Dim dsSchema As Global.System.Xml.Schema.XmlSchema = ds.GetSchemaSerializable
            If xs.Contains(dsSchema.TargetNamespace) Then
                Dim s1 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
                Dim s2 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
                Try 
                    Dim schema As Global.System.Xml.Schema.XmlSchema = Nothing
                    dsSchema.Write(s1)
                    Dim schemas As Global.System.Collections.IEnumerator = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator
                    Do While schemas.MoveNext
                        schema = CType(schemas.Current,Global.System.Xml.Schema.XmlSchema)
                        s2.SetLength(0)
                        schema.Write(s2)
                        If (s1.Length = s2.Length) Then
                            s1.Position = 0
                            s2.Position = 0
                            
                            Do While ((s1.Position <> s1.Length)  _
                                        AndAlso (s1.ReadByte = s2.ReadByte))
                                
                                
                            Loop
                            If (s1.Position = s1.Length) Then
                                Return type
                            End If
                        End If
                        
                    Loop
                Finally
                    If (Not (s1) Is Nothing) Then
                        s1.Close
                    End If
                    If (Not (s2) Is Nothing) Then
                        s2.Close
                    End If
                End Try
            End If
            xs.Add(dsSchema)
            Return type
        End Function
    End Class
    
    '''<summary>
    '''Represents the strongly named DataTable class.
    '''</summary>
    <Global.System.Serializable(),  _
     Global.System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")>  _
    Partial Public Class ClassificationsDataTable
        Inherits Global.System.Data.TypedTableBase(Of ClassificationsRow)
        
        Private columnProduct_name As Global.System.Data.DataColumn
        
        Private columnKey As Global.System.Data.DataColumn
        
        Private columnKeyy As Global.System.Data.DataColumn
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub New()
            MyBase.New
            Me.TableName = "Classifications"
            Me.BeginInit
            Me.InitClass
            Me.EndInit
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Sub New(ByVal table As Global.System.Data.DataTable)
            MyBase.New
            Me.TableName = table.TableName
            If (table.CaseSensitive <> table.DataSet.CaseSensitive) Then
                Me.CaseSensitive = table.CaseSensitive
            End If
            If (table.Locale.ToString <> table.DataSet.Locale.ToString) Then
                Me.Locale = table.Locale
            End If
            If (table.Namespace <> table.DataSet.Namespace) Then
                Me.Namespace = table.Namespace
            End If
            Me.Prefix = table.Prefix
            Me.MinimumCapacity = table.MinimumCapacity
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Sub New(ByVal info As Global.System.Runtime.Serialization.SerializationInfo, ByVal context As Global.System.Runtime.Serialization.StreamingContext)
            MyBase.New(info, context)
            Me.InitVars
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property Product_nameColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnProduct_name
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property KeyColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnKey
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property KeyyColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnKeyy
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Browsable(false)>  _
        Public ReadOnly Property Count() As Integer
            Get
                Return Me.Rows.Count
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Default ReadOnly Property Item(ByVal index As Integer) As ClassificationsRow
            Get
                Return CType(Me.Rows(index),ClassificationsRow)
            End Get
        End Property
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event ClassificationsRowChanging As ClassificationsRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event ClassificationsRowChanged As ClassificationsRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event ClassificationsRowDeleting As ClassificationsRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event ClassificationsRowDeleted As ClassificationsRowChangeEventHandler
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Overloads Sub AddClassificationsRow(ByVal row As ClassificationsRow)
            Me.Rows.Add(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Overloads Function AddClassificationsRow(ByVal Product_name As String, ByVal Key As Integer, ByVal Keyy As Integer) As ClassificationsRow
            Dim rowClassificationsRow As ClassificationsRow = CType(Me.NewRow,ClassificationsRow)
            Dim columnValuesArray() As Object = New Object() {Product_name, Key, Keyy}
            rowClassificationsRow.ItemArray = columnValuesArray
            Me.Rows.Add(rowClassificationsRow)
            Return rowClassificationsRow
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Overrides Function Clone() As Global.System.Data.DataTable
            Dim cln As ClassificationsDataTable = CType(MyBase.Clone,ClassificationsDataTable)
            cln.InitVars
            Return cln
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Function CreateInstance() As Global.System.Data.DataTable
            Return New ClassificationsDataTable()
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Sub InitVars()
            Me.columnProduct_name = MyBase.Columns("Product_name")
            Me.columnKey = MyBase.Columns("Key")
            Me.columnKeyy = MyBase.Columns("Keyy")
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Private Sub InitClass()
            Me.columnProduct_name = New Global.System.Data.DataColumn("Product_name", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnProduct_name)
            Me.columnKey = New Global.System.Data.DataColumn("Key", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnKey)
            Me.columnKeyy = New Global.System.Data.DataColumn("Keyy", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnKeyy)
            Me.columnProduct_name.MaxLength = 255
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function NewClassificationsRow() As ClassificationsRow
            Return CType(Me.NewRow,ClassificationsRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Function NewRowFromBuilder(ByVal builder As Global.System.Data.DataRowBuilder) As Global.System.Data.DataRow
            Return New ClassificationsRow(builder)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Function GetRowType() As Global.System.Type
            Return GetType(ClassificationsRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Sub OnRowChanged(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanged(e)
            If (Not (Me.ClassificationsRowChangedEvent) Is Nothing) Then
                RaiseEvent ClassificationsRowChanged(Me, New ClassificationsRowChangeEvent(CType(e.Row,ClassificationsRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Sub OnRowChanging(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanging(e)
            If (Not (Me.ClassificationsRowChangingEvent) Is Nothing) Then
                RaiseEvent ClassificationsRowChanging(Me, New ClassificationsRowChangeEvent(CType(e.Row,ClassificationsRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Sub OnRowDeleted(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleted(e)
            If (Not (Me.ClassificationsRowDeletedEvent) Is Nothing) Then
                RaiseEvent ClassificationsRowDeleted(Me, New ClassificationsRowChangeEvent(CType(e.Row,ClassificationsRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Sub OnRowDeleting(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleting(e)
            If (Not (Me.ClassificationsRowDeletingEvent) Is Nothing) Then
                RaiseEvent ClassificationsRowDeleting(Me, New ClassificationsRowChangeEvent(CType(e.Row,ClassificationsRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub RemoveClassificationsRow(ByVal row As ClassificationsRow)
            Me.Rows.Remove(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Shared Function GetTypedTableSchema(ByVal xs As Global.System.Xml.Schema.XmlSchemaSet) As Global.System.Xml.Schema.XmlSchemaComplexType
            Dim type As Global.System.Xml.Schema.XmlSchemaComplexType = New Global.System.Xml.Schema.XmlSchemaComplexType()
            Dim sequence As Global.System.Xml.Schema.XmlSchemaSequence = New Global.System.Xml.Schema.XmlSchemaSequence()
            Dim ds As Dossier = New Dossier()
            Dim any1 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
            any1.Namespace = "http://www.w3.org/2001/XMLSchema"
            any1.MinOccurs = New Decimal(0)
            any1.MaxOccurs = Decimal.MaxValue
            any1.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any1)
            Dim any2 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
            any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1"
            any2.MinOccurs = New Decimal(1)
            any2.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any2)
            Dim attribute1 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute()
            attribute1.Name = "namespace"
            attribute1.FixedValue = ds.Namespace
            type.Attributes.Add(attribute1)
            Dim attribute2 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute()
            attribute2.Name = "tableTypeName"
            attribute2.FixedValue = "ClassificationsDataTable"
            type.Attributes.Add(attribute2)
            type.Particle = sequence
            Dim dsSchema As Global.System.Xml.Schema.XmlSchema = ds.GetSchemaSerializable
            If xs.Contains(dsSchema.TargetNamespace) Then
                Dim s1 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
                Dim s2 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
                Try 
                    Dim schema As Global.System.Xml.Schema.XmlSchema = Nothing
                    dsSchema.Write(s1)
                    Dim schemas As Global.System.Collections.IEnumerator = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator
                    Do While schemas.MoveNext
                        schema = CType(schemas.Current,Global.System.Xml.Schema.XmlSchema)
                        s2.SetLength(0)
                        schema.Write(s2)
                        If (s1.Length = s2.Length) Then
                            s1.Position = 0
                            s2.Position = 0
                            
                            Do While ((s1.Position <> s1.Length)  _
                                        AndAlso (s1.ReadByte = s2.ReadByte))
                                
                                
                            Loop
                            If (s1.Position = s1.Length) Then
                                Return type
                            End If
                        End If
                        
                    Loop
                Finally
                    If (Not (s1) Is Nothing) Then
                        s1.Close
                    End If
                    If (Not (s2) Is Nothing) Then
                        s2.Close
                    End If
                End Try
            End If
            xs.Add(dsSchema)
            Return type
        End Function
    End Class
    
    '''<summary>
    '''Represents the strongly named DataTable class.
    '''</summary>
    <Global.System.Serializable(),  _
     Global.System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")>  _
    Partial Public Class ComponentsDataTable
        Inherits Global.System.Data.TypedTableBase(Of ComponentsRow)
        
        Private columnCMPID As Global.System.Data.DataColumn
        
        Private columnSubstance As Global.System.Data.DataColumn
        
        Private columnSDS_Name As Global.System.Data.DataColumn
        
        Private columnListOfListsName As Global.System.Data.DataColumn
        
        Private columnAliases As Global.System.Data.DataColumn
        
        Private columnProprietary As Global.System.Data.DataColumn
        
        Private columnCAS As Global.System.Data.DataColumn
        
        Private columnPEL As Global.System.Data.DataColumn
        
        Private columnACGIH As Global.System.Data.DataColumn
        
        Private columnCERCLA_RQ As Global.System.Data.DataColumn
        
        Private columnSARA313 As Global.System.Data.DataColumn
        
        Private columnSARA302TPQ As Global.System.Data.DataColumn
        
        Private columnSARA302RQ As Global.System.Data.DataColumn
        
        Private columnRCRACODE As Global.System.Data.DataColumn
        
        Private columnIsProduct As Global.System.Data.DataColumn
        
        Private columnIARC As Global.System.Data.DataColumn
        
        Private columnNTP As Global.System.Data.DataColumn
        
        Private columnNote As Global.System.Data.DataColumn
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub New()
            MyBase.New
            Me.TableName = "Components"
            Me.BeginInit
            Me.InitClass
            Me.EndInit
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Sub New(ByVal table As Global.System.Data.DataTable)
            MyBase.New
            Me.TableName = table.TableName
            If (table.CaseSensitive <> table.DataSet.CaseSensitive) Then
                Me.CaseSensitive = table.CaseSensitive
            End If
            If (table.Locale.ToString <> table.DataSet.Locale.ToString) Then
                Me.Locale = table.Locale
            End If
            If (table.Namespace <> table.DataSet.Namespace) Then
                Me.Namespace = table.Namespace
            End If
            Me.Prefix = table.Prefix
            Me.MinimumCapacity = table.MinimumCapacity
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Sub New(ByVal info As Global.System.Runtime.Serialization.SerializationInfo, ByVal context As Global.System.Runtime.Serialization.StreamingContext)
            MyBase.New(info, context)
            Me.InitVars
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property CMPIDColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnCMPID
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property SubstanceColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnSubstance
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property SDS_NameColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnSDS_Name
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property ListOfListsNameColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnListOfListsName
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property AliasesColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnAliases
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property ProprietaryColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnProprietary
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property CASColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnCAS
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property PELColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnPEL
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property ACGIHColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnACGIH
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property CERCLA_RQColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnCERCLA_RQ
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property SARA313Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnSARA313
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property SARA302TPQColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnSARA302TPQ
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property SARA302RQColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnSARA302RQ
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property RCRACODEColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnRCRACODE
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property IsProductColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnIsProduct
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property IARCColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnIARC
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property NTPColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnNTP
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property NoteColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnNote
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Browsable(false)>  _
        Public ReadOnly Property Count() As Integer
            Get
                Return Me.Rows.Count
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Default ReadOnly Property Item(ByVal index As Integer) As ComponentsRow
            Get
                Return CType(Me.Rows(index),ComponentsRow)
            End Get
        End Property
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event ComponentsRowChanging As ComponentsRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event ComponentsRowChanged As ComponentsRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event ComponentsRowDeleting As ComponentsRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event ComponentsRowDeleted As ComponentsRowChangeEventHandler
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Overloads Sub AddComponentsRow(ByVal row As ComponentsRow)
            Me.Rows.Add(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Overloads Function AddComponentsRow( _
                    ByVal Substance As String,  _
                    ByVal SDS_Name As String,  _
                    ByVal ListOfListsName As String,  _
                    ByVal Aliases As String,  _
                    ByVal Proprietary As Boolean,  _
                    ByVal CAS As String,  _
                    ByVal PEL As String,  _
                    ByVal ACGIH As String,  _
                    ByVal CERCLA_RQ As String,  _
                    ByVal SARA313 As String,  _
                    ByVal SARA302TPQ As String,  _
                    ByVal SARA302RQ As String,  _
                    ByVal RCRACODE As String,  _
                    ByVal IsProduct As Boolean,  _
                    ByVal IARC As String,  _
                    ByVal NTP As String,  _
                    ByVal Note As String) As ComponentsRow
            Dim rowComponentsRow As ComponentsRow = CType(Me.NewRow,ComponentsRow)
            Dim columnValuesArray() As Object = New Object() {Nothing, Substance, SDS_Name, ListOfListsName, Aliases, Proprietary, CAS, PEL, ACGIH, CERCLA_RQ, SARA313, SARA302TPQ, SARA302RQ, RCRACODE, IsProduct, IARC, NTP, Note}
            rowComponentsRow.ItemArray = columnValuesArray
            Me.Rows.Add(rowComponentsRow)
            Return rowComponentsRow
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function FindBySubstance(ByVal Substance As String) As ComponentsRow
            Return CType(Me.Rows.Find(New Object() {Substance}),ComponentsRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Overrides Function Clone() As Global.System.Data.DataTable
            Dim cln As ComponentsDataTable = CType(MyBase.Clone,ComponentsDataTable)
            cln.InitVars
            Return cln
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Function CreateInstance() As Global.System.Data.DataTable
            Return New ComponentsDataTable()
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Sub InitVars()
            Me.columnCMPID = MyBase.Columns("CMPID")
            Me.columnSubstance = MyBase.Columns("Substance")
            Me.columnSDS_Name = MyBase.Columns("SDS_Name")
            Me.columnListOfListsName = MyBase.Columns("ListOfListsName")
            Me.columnAliases = MyBase.Columns("Aliases")
            Me.columnProprietary = MyBase.Columns("Proprietary")
            Me.columnCAS = MyBase.Columns("CAS")
            Me.columnPEL = MyBase.Columns("PEL")
            Me.columnACGIH = MyBase.Columns("ACGIH")
            Me.columnCERCLA_RQ = MyBase.Columns("CERCLA_RQ")
            Me.columnSARA313 = MyBase.Columns("SARA313")
            Me.columnSARA302TPQ = MyBase.Columns("SARA302TPQ")
            Me.columnSARA302RQ = MyBase.Columns("SARA302RQ")
            Me.columnRCRACODE = MyBase.Columns("RCRACODE")
            Me.columnIsProduct = MyBase.Columns("IsProduct")
            Me.columnIARC = MyBase.Columns("IARC")
            Me.columnNTP = MyBase.Columns("NTP")
            Me.columnNote = MyBase.Columns("Note")
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Private Sub InitClass()
            Me.columnCMPID = New Global.System.Data.DataColumn("CMPID", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCMPID)
            Me.columnSubstance = New Global.System.Data.DataColumn("Substance", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnSubstance)
            Me.columnSDS_Name = New Global.System.Data.DataColumn("SDS_Name", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnSDS_Name)
            Me.columnListOfListsName = New Global.System.Data.DataColumn("ListOfListsName", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnListOfListsName)
            Me.columnAliases = New Global.System.Data.DataColumn("Aliases", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnAliases)
            Me.columnProprietary = New Global.System.Data.DataColumn("Proprietary", GetType(Boolean), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnProprietary)
            Me.columnCAS = New Global.System.Data.DataColumn("CAS", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCAS)
            Me.columnPEL = New Global.System.Data.DataColumn("PEL", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnPEL)
            Me.columnACGIH = New Global.System.Data.DataColumn("ACGIH", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnACGIH)
            Me.columnCERCLA_RQ = New Global.System.Data.DataColumn("CERCLA_RQ", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCERCLA_RQ)
            Me.columnSARA313 = New Global.System.Data.DataColumn("SARA313", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnSARA313)
            Me.columnSARA302TPQ = New Global.System.Data.DataColumn("SARA302TPQ", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnSARA302TPQ)
            Me.columnSARA302RQ = New Global.System.Data.DataColumn("SARA302RQ", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnSARA302RQ)
            Me.columnRCRACODE = New Global.System.Data.DataColumn("RCRACODE", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnRCRACODE)
            Me.columnIsProduct = New Global.System.Data.DataColumn("IsProduct", GetType(Boolean), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnIsProduct)
            Me.columnIARC = New Global.System.Data.DataColumn("IARC", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnIARC)
            Me.columnNTP = New Global.System.Data.DataColumn("NTP", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnNTP)
            Me.columnNote = New Global.System.Data.DataColumn("Note", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnNote)
            Me.Constraints.Add(New Global.System.Data.UniqueConstraint("Constraint1", New Global.System.Data.DataColumn() {Me.columnSubstance}, true))
            Me.columnCMPID.AutoIncrement = true
            Me.columnCMPID.AutoIncrementSeed = -1
            Me.columnCMPID.AutoIncrementStep = -1
            Me.columnSubstance.AllowDBNull = false
            Me.columnSubstance.Unique = true
            Me.columnSubstance.MaxLength = 255
            Me.columnSDS_Name.MaxLength = 255
            Me.columnListOfListsName.MaxLength = 255
            Me.columnAliases.MaxLength = 255
            Me.columnCAS.MaxLength = 255
            Me.columnPEL.MaxLength = 255
            Me.columnACGIH.MaxLength = 255
            Me.columnCERCLA_RQ.MaxLength = 255
            Me.columnSARA313.MaxLength = 255
            Me.columnSARA302TPQ.MaxLength = 255
            Me.columnSARA302RQ.MaxLength = 255
            Me.columnRCRACODE.MaxLength = 255
            Me.columnIARC.MaxLength = 255
            Me.columnNTP.MaxLength = 255
            Me.columnNote.MaxLength = 536870910
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function NewComponentsRow() As ComponentsRow
            Return CType(Me.NewRow,ComponentsRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Function NewRowFromBuilder(ByVal builder As Global.System.Data.DataRowBuilder) As Global.System.Data.DataRow
            Return New ComponentsRow(builder)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Function GetRowType() As Global.System.Type
            Return GetType(ComponentsRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Sub OnRowChanged(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanged(e)
            If (Not (Me.ComponentsRowChangedEvent) Is Nothing) Then
                RaiseEvent ComponentsRowChanged(Me, New ComponentsRowChangeEvent(CType(e.Row,ComponentsRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Sub OnRowChanging(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanging(e)
            If (Not (Me.ComponentsRowChangingEvent) Is Nothing) Then
                RaiseEvent ComponentsRowChanging(Me, New ComponentsRowChangeEvent(CType(e.Row,ComponentsRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Sub OnRowDeleted(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleted(e)
            If (Not (Me.ComponentsRowDeletedEvent) Is Nothing) Then
                RaiseEvent ComponentsRowDeleted(Me, New ComponentsRowChangeEvent(CType(e.Row,ComponentsRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Sub OnRowDeleting(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleting(e)
            If (Not (Me.ComponentsRowDeletingEvent) Is Nothing) Then
                RaiseEvent ComponentsRowDeleting(Me, New ComponentsRowChangeEvent(CType(e.Row,ComponentsRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub RemoveComponentsRow(ByVal row As ComponentsRow)
            Me.Rows.Remove(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Shared Function GetTypedTableSchema(ByVal xs As Global.System.Xml.Schema.XmlSchemaSet) As Global.System.Xml.Schema.XmlSchemaComplexType
            Dim type As Global.System.Xml.Schema.XmlSchemaComplexType = New Global.System.Xml.Schema.XmlSchemaComplexType()
            Dim sequence As Global.System.Xml.Schema.XmlSchemaSequence = New Global.System.Xml.Schema.XmlSchemaSequence()
            Dim ds As Dossier = New Dossier()
            Dim any1 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
            any1.Namespace = "http://www.w3.org/2001/XMLSchema"
            any1.MinOccurs = New Decimal(0)
            any1.MaxOccurs = Decimal.MaxValue
            any1.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any1)
            Dim any2 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
            any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1"
            any2.MinOccurs = New Decimal(1)
            any2.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any2)
            Dim attribute1 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute()
            attribute1.Name = "namespace"
            attribute1.FixedValue = ds.Namespace
            type.Attributes.Add(attribute1)
            Dim attribute2 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute()
            attribute2.Name = "tableTypeName"
            attribute2.FixedValue = "ComponentsDataTable"
            type.Attributes.Add(attribute2)
            type.Particle = sequence
            Dim dsSchema As Global.System.Xml.Schema.XmlSchema = ds.GetSchemaSerializable
            If xs.Contains(dsSchema.TargetNamespace) Then
                Dim s1 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
                Dim s2 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
                Try 
                    Dim schema As Global.System.Xml.Schema.XmlSchema = Nothing
                    dsSchema.Write(s1)
                    Dim schemas As Global.System.Collections.IEnumerator = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator
                    Do While schemas.MoveNext
                        schema = CType(schemas.Current,Global.System.Xml.Schema.XmlSchema)
                        s2.SetLength(0)
                        schema.Write(s2)
                        If (s1.Length = s2.Length) Then
                            s1.Position = 0
                            s2.Position = 0
                            
                            Do While ((s1.Position <> s1.Length)  _
                                        AndAlso (s1.ReadByte = s2.ReadByte))
                                
                                
                            Loop
                            If (s1.Position = s1.Length) Then
                                Return type
                            End If
                        End If
                        
                    Loop
                Finally
                    If (Not (s1) Is Nothing) Then
                        s1.Close
                    End If
                    If (Not (s2) Is Nothing) Then
                        s2.Close
                    End If
                End Try
            End If
            xs.Add(dsSchema)
            Return type
        End Function
    End Class
    
    '''<summary>
    '''Represents the strongly named DataTable class.
    '''</summary>
    <Global.System.Serializable(),  _
     Global.System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")>  _
    Partial Public Class DefaultsDataTable
        Inherits Global.System.Data.TypedTableBase(Of DefaultsRow)
        
        Private columnPreset As Global.System.Data.DataColumn
        
        Private columnHazard_classification As Global.System.Data.DataColumn
        
        Private columnSignal_word As Global.System.Data.DataColumn
        
        Private columnHazard_statement As Global.System.Data.DataColumn
        
        Private columnPict1 As Global.System.Data.DataColumn
        
        Private columnPict2 As Global.System.Data.DataColumn
        
        Private columnPict3 As Global.System.Data.DataColumn
        
        Private columnPict4 As Global.System.Data.DataColumn
        
        Private columnPre_prevention As Global.System.Data.DataColumn
        
        Private columnPre_response As Global.System.Data.DataColumn
        
        Private columnPre_storage As Global.System.Data.DataColumn
        
        Private columnPre_disposal As Global.System.Data.DataColumn
        
        Private columnComponent As Global.System.Data.DataColumn
        
        Private columnFA_eye_contact As Global.System.Data.DataColumn
        
        Private columnFA_skin_contact As Global.System.Data.DataColumn
        
        Private columnFA_ingestion As Global.System.Data.DataColumn
        
        Private columnFA_inhalation As Global.System.Data.DataColumn
        
        Private columnNote_to_HCP As Global.System.Data.DataColumn
        
        Private columnSuitable_extinguishing_media As Global.System.Data.DataColumn
        
        Private columnUnsuitable_extinguishing_media As Global.System.Data.DataColumn
        
        Private columnPrecautions_for_firefighters As Global.System.Data.DataColumn
        
        Private columnSpecific_hazards As Global.System.Data.DataColumn
        
        Private columnHazardous_combustion_products As Global.System.Data.DataColumn
        
        Private columnPersonal_precautions As Global.System.Data.DataColumn
        
        Private columnSmall_spills As Global.System.Data.DataColumn
        
        Private columnLarge_spills As Global.System.Data.DataColumn
        
        Private columnAdvice_on_safe_handling As Global.System.Data.DataColumn
        
        Private columnStorage_conditions As Global.System.Data.DataColumn
        
        Private columnSuitable_materials_of_construction As Global.System.Data.DataColumn
        
        Private columnUnsuitable_materials_of_construction As Global.System.Data.DataColumn
        
        Private columnEye_face_protection As Global.System.Data.DataColumn
        
        Private columnSkin_protection As Global.System.Data.DataColumn
        
        Private columnRespiratory_protection As Global.System.Data.DataColumn
        
        Private columnEngineering_controls As Global.System.Data.DataColumn
        
        Private columnGeneral_hygiene_considerations As Global.System.Data.DataColumn
        
        Private columnChemical_stability As Global.System.Data.DataColumn
        
        Private columnHazardous_polymerization As Global.System.Data.DataColumn
        
        Private columnConditions_to_avoid As Global.System.Data.DataColumn
        
        Private columnIncompatibilities As Global.System.Data.DataColumn
        
        Private columnHazardous_decomposition_products As Global.System.Data.DataColumn
        
        Private columnLikely_routes_of_exposure As Global.System.Data.DataColumn
        
        Private columnEye_contact As Global.System.Data.DataColumn
        
        Private columnOdor_threshold As Global.System.Data.DataColumn
        
        Private columnSkin_contact As Global.System.Data.DataColumn
        
        Private columnIngestion As Global.System.Data.DataColumn
        
        Private columnInhalation As Global.System.Data.DataColumn
        
        Private columnReproductive_effects As Global.System.Data.DataColumn
        
        Private columnTeratogenicity As Global.System.Data.DataColumn
        
        Private columnExplosive_limits As Global.System.Data.DataColumn
        
        Private columnMutagenicity As Global.System.Data.DataColumn
        
        Private columnEmbryotoxicity As Global.System.Data.DataColumn
        
        Private columnSensitization_to_product As Global.System.Data.DataColumn
        
        Private columnSynergistic_products As Global.System.Data.DataColumn
        
        Private columnCarcinogenicity As Global.System.Data.DataColumn
        
        Private columnSpecific_gravity As Global.System.Data.DataColumn
        
        Private columnChronic As Global.System.Data.DataColumn
        
        Private columnPersistence As Global.System.Data.DataColumn
        
        Private columnBioaccumulative_potential As Global.System.Data.DataColumn
        
        Private columnMobility As Global.System.Data.DataColumn
        
        Private columnDisposal As Global.System.Data.DataColumn
        
        Private columnViscosity As Global.System.Data.DataColumn
        
        Private columnRCRA_status As Global.System.Data.DataColumn
        
        Private columnFA_Eye_Contact_code As Global.System.Data.DataColumn
        
        Private columnFA_skin_contact_code As Global.System.Data.DataColumn
        
        Private columnFA_inhalation_code As Global.System.Data.DataColumn
        
        Private columnFA_ingestion_code As Global.System.Data.DataColumn
        
        Private columnNote_to_hcp_code As Global.System.Data.DataColumn
        
        Private columnSuitable_extinguishing_media_code As Global.System.Data.DataColumn
        
        Private columnUnsuitable_extinguishing_media_code As Global.System.Data.DataColumn
        
        Private columnPrecautions_for_firefighters_code As Global.System.Data.DataColumn
        
        Private columnSpecific_hazards_code As Global.System.Data.DataColumn
        
        Private columnHazardous_combustion_products_code As Global.System.Data.DataColumn
        
        Private columnPersonal_precautions_code As Global.System.Data.DataColumn
        
        Private columnSmall_spills_code As Global.System.Data.DataColumn
        
        Private columnLarge_spills_code As Global.System.Data.DataColumn
        
        Private columnAdvice_on_safe_handling_code As Global.System.Data.DataColumn
        
        Private columnStorage_conditions_code As Global.System.Data.DataColumn
        
        Private columnSuitable_materials_of_construction_code As Global.System.Data.DataColumn
        
        Private columnUnsuitable_materials_of_construction_code As Global.System.Data.DataColumn
        
        Private columnEye_face_protection_code As Global.System.Data.DataColumn
        
        Private columnSkin_protection_code As Global.System.Data.DataColumn
        
        Private columnRespiratory_protection_code As Global.System.Data.DataColumn
        
        Private columnEngineering_controls_code As Global.System.Data.DataColumn
        
        Private columnGeneral_hygiene_considerations_code As Global.System.Data.DataColumn
        
        Private columnChemical_stability_code As Global.System.Data.DataColumn
        
        Private columnHazardous_polymerization_code As Global.System.Data.DataColumn
        
        Private columnConditions_to_avoid_code As Global.System.Data.DataColumn
        
        Private columnIncompatibilities_code As Global.System.Data.DataColumn
        
        Private columnHazardous_decomposition_products_code As Global.System.Data.DataColumn
        
        Private columnLikely_routes_of_exposure_code As Global.System.Data.DataColumn
        
        Private columnSkin_contact_code As Global.System.Data.DataColumn
        
        Private columnIngestion_code As Global.System.Data.DataColumn
        
        Private columnInhalation_code As Global.System.Data.DataColumn
        
        Private columnReproductive_effects_code As Global.System.Data.DataColumn
        
        Private columnTeratogenicity_code As Global.System.Data.DataColumn
        
        Private columnMutagenicity_code As Global.System.Data.DataColumn
        
        Private columnEmbryotoxicity_code As Global.System.Data.DataColumn
        
        Private columnSensitization_to_product_code As Global.System.Data.DataColumn
        
        Private columnSynergistic_products_code As Global.System.Data.DataColumn
        
        Private columnCarcinogenicity_code As Global.System.Data.DataColumn
        
        Private columnChronic_code As Global.System.Data.DataColumn
        
        Private columnPersistence_code As Global.System.Data.DataColumn
        
        Private columnBioaccumulative_potential_code As Global.System.Data.DataColumn
        
        Private columnMobility_code As Global.System.Data.DataColumn
        
        Private columnDisposal_code As Global.System.Data.DataColumn
        
        Private columnRCRA_status_code As Global.System.Data.DataColumn
        
        Private columnEye_contact_code As Global.System.Data.DataColumn
        
        Private columnTSCA_code As Global.System.Data.DataColumn
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub New()
            MyBase.New
            Me.TableName = "Defaults"
            Me.BeginInit
            Me.InitClass
            Me.EndInit
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Sub New(ByVal table As Global.System.Data.DataTable)
            MyBase.New
            Me.TableName = table.TableName
            If (table.CaseSensitive <> table.DataSet.CaseSensitive) Then
                Me.CaseSensitive = table.CaseSensitive
            End If
            If (table.Locale.ToString <> table.DataSet.Locale.ToString) Then
                Me.Locale = table.Locale
            End If
            If (table.Namespace <> table.DataSet.Namespace) Then
                Me.Namespace = table.Namespace
            End If
            Me.Prefix = table.Prefix
            Me.MinimumCapacity = table.MinimumCapacity
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Sub New(ByVal info As Global.System.Runtime.Serialization.SerializationInfo, ByVal context As Global.System.Runtime.Serialization.StreamingContext)
            MyBase.New(info, context)
            Me.InitVars
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property PresetColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnPreset
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property Hazard_classificationColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnHazard_classification
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property Signal_wordColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnSignal_word
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property Hazard_statementColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnHazard_statement
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property Pict1Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnPict1
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property Pict2Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnPict2
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property Pict3Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnPict3
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property Pict4Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnPict4
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property Pre_preventionColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnPre_prevention
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property Pre_responseColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnPre_response
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property Pre_storageColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnPre_storage
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property Pre_disposalColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnPre_disposal
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property ComponentColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnComponent
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property FA_eye_contactColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnFA_eye_contact
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property FA_skin_contactColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnFA_skin_contact
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property FA_ingestionColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnFA_ingestion
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property FA_inhalationColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnFA_inhalation
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property Note_to_HCPColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnNote_to_HCP
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property Suitable_extinguishing_mediaColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnSuitable_extinguishing_media
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property Unsuitable_extinguishing_mediaColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnUnsuitable_extinguishing_media
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property Precautions_for_firefightersColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnPrecautions_for_firefighters
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property Specific_hazardsColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnSpecific_hazards
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property Hazardous_combustion_productsColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnHazardous_combustion_products
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property Personal_precautionsColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnPersonal_precautions
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property Small_spillsColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnSmall_spills
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property Large_spillsColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnLarge_spills
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property Advice_on_safe_handlingColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnAdvice_on_safe_handling
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property Storage_conditionsColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnStorage_conditions
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property Suitable_materials_of_constructionColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnSuitable_materials_of_construction
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property Unsuitable_materials_of_constructionColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnUnsuitable_materials_of_construction
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property Eye_face_protectionColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnEye_face_protection
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property Skin_protectionColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnSkin_protection
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property Respiratory_protectionColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnRespiratory_protection
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property Engineering_controlsColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnEngineering_controls
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property General_hygiene_considerationsColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnGeneral_hygiene_considerations
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property Chemical_stabilityColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnChemical_stability
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property Hazardous_polymerizationColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnHazardous_polymerization
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property Conditions_to_avoidColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnConditions_to_avoid
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property IncompatibilitiesColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnIncompatibilities
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property Hazardous_decomposition_productsColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnHazardous_decomposition_products
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property Likely_routes_of_exposureColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnLikely_routes_of_exposure
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property Eye_contactColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnEye_contact
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property Odor_thresholdColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnOdor_threshold
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property Skin_contactColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnSkin_contact
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property IngestionColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnIngestion
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property InhalationColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnInhalation
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property Reproductive_effectsColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnReproductive_effects
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property TeratogenicityColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnTeratogenicity
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property Explosive_limitsColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnExplosive_limits
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property MutagenicityColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnMutagenicity
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property EmbryotoxicityColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnEmbryotoxicity
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property Sensitization_to_productColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnSensitization_to_product
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property Synergistic_productsColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnSynergistic_products
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property CarcinogenicityColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnCarcinogenicity
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property Specific_gravityColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnSpecific_gravity
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property ChronicColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnChronic
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property PersistenceColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnPersistence
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property Bioaccumulative_potentialColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnBioaccumulative_potential
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property MobilityColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnMobility
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property DisposalColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnDisposal
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property ViscosityColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnViscosity
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property RCRA_statusColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnRCRA_status
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property FA_Eye_Contact_codeColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnFA_Eye_Contact_code
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property FA_skin_contact_codeColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnFA_skin_contact_code
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property FA_inhalation_codeColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnFA_inhalation_code
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property FA_ingestion_codeColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnFA_ingestion_code
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property Note_to_hcp_codeColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnNote_to_hcp_code
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property Suitable_extinguishing_media_codeColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnSuitable_extinguishing_media_code
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property Unsuitable_extinguishing_media_codeColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnUnsuitable_extinguishing_media_code
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property Precautions_for_firefighters_codeColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnPrecautions_for_firefighters_code
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property Specific_hazards_codeColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnSpecific_hazards_code
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property Hazardous_combustion_products_codeColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnHazardous_combustion_products_code
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property Personal_precautions_codeColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnPersonal_precautions_code
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property Small_spills_codeColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnSmall_spills_code
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property Large_spills_codeColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnLarge_spills_code
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property Advice_on_safe_handling_codeColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnAdvice_on_safe_handling_code
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property Storage_conditions_codeColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnStorage_conditions_code
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property Suitable_materials_of_construction_codeColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnSuitable_materials_of_construction_code
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property Unsuitable_materials_of_construction_codeColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnUnsuitable_materials_of_construction_code
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property Eye_face_protection_codeColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnEye_face_protection_code
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property Skin_protection_codeColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnSkin_protection_code
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property Respiratory_protection_codeColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnRespiratory_protection_code
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property Engineering_controls_codeColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnEngineering_controls_code
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property General_hygiene_considerations_codeColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnGeneral_hygiene_considerations_code
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property Chemical_stability_codeColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnChemical_stability_code
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property Hazardous_polymerization_codeColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnHazardous_polymerization_code
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property Conditions_to_avoid_codeColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnConditions_to_avoid_code
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property Incompatibilities_codeColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnIncompatibilities_code
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property Hazardous_decomposition_products_codeColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnHazardous_decomposition_products_code
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property Likely_routes_of_exposure_codeColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnLikely_routes_of_exposure_code
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property Skin_contact_codeColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnSkin_contact_code
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property Ingestion_codeColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnIngestion_code
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property Inhalation_codeColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnInhalation_code
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property Reproductive_effects_codeColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnReproductive_effects_code
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property Teratogenicity_codeColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnTeratogenicity_code
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property Mutagenicity_codeColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnMutagenicity_code
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property Embryotoxicity_codeColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnEmbryotoxicity_code
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property Sensitization_to_product_codeColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnSensitization_to_product_code
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property Synergistic_products_codeColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnSynergistic_products_code
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property Carcinogenicity_codeColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnCarcinogenicity_code
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property Chronic_codeColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnChronic_code
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property Persistence_codeColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnPersistence_code
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property Bioaccumulative_potential_codeColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnBioaccumulative_potential_code
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property Mobility_codeColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnMobility_code
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property Disposal_codeColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnDisposal_code
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property RCRA_status_codeColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnRCRA_status_code
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property Eye_contact_codeColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnEye_contact_code
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property TSCA_codeColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnTSCA_code
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Browsable(false)>  _
        Public ReadOnly Property Count() As Integer
            Get
                Return Me.Rows.Count
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Default ReadOnly Property Item(ByVal index As Integer) As DefaultsRow
            Get
                Return CType(Me.Rows(index),DefaultsRow)
            End Get
        End Property
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event DefaultsRowChanging As DefaultsRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event DefaultsRowChanged As DefaultsRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event DefaultsRowDeleting As DefaultsRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event DefaultsRowDeleted As DefaultsRowChangeEventHandler
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Overloads Sub AddDefaultsRow(ByVal row As DefaultsRow)
            Me.Rows.Add(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Overloads Function AddDefaultsRow( _
                    ByVal Preset As String,  _
                    ByVal Hazard_classification As String,  _
                    ByVal Signal_word As String,  _
                    ByVal Hazard_statement As String,  _
                    ByVal Pict1 As String,  _
                    ByVal Pict2 As String,  _
                    ByVal Pict3 As String,  _
                    ByVal Pict4 As String,  _
                    ByVal Pre_prevention As String,  _
                    ByVal Pre_response As String,  _
                    ByVal Pre_storage As String,  _
                    ByVal Pre_disposal As String,  _
                    ByVal Component As String,  _
                    ByVal FA_eye_contact As String,  _
                    ByVal FA_skin_contact As String,  _
                    ByVal FA_ingestion As String,  _
                    ByVal FA_inhalation As String,  _
                    ByVal Note_to_HCP As String,  _
                    ByVal Suitable_extinguishing_media As String,  _
                    ByVal Unsuitable_extinguishing_media As String,  _
                    ByVal Precautions_for_firefighters As String,  _
                    ByVal Specific_hazards As String,  _
                    ByVal Hazardous_combustion_products As String,  _
                    ByVal Personal_precautions As String,  _
                    ByVal Small_spills As String,  _
                    ByVal Large_spills As String,  _
                    ByVal Advice_on_safe_handling As String,  _
                    ByVal Storage_conditions As String,  _
                    ByVal Suitable_materials_of_construction As String,  _
                    ByVal Unsuitable_materials_of_construction As String,  _
                    ByVal Eye_face_protection As String,  _
                    ByVal Skin_protection As String,  _
                    ByVal Respiratory_protection As String,  _
                    ByVal Engineering_controls As String,  _
                    ByVal General_hygiene_considerations As String,  _
                    ByVal Chemical_stability As String,  _
                    ByVal Hazardous_polymerization As String,  _
                    ByVal Conditions_to_avoid As String,  _
                    ByVal Incompatibilities As String,  _
                    ByVal Hazardous_decomposition_products As String,  _
                    ByVal Likely_routes_of_exposure As String,  _
                    ByVal Eye_contact As String,  _
                    ByVal Odor_threshold As String,  _
                    ByVal Skin_contact As String,  _
                    ByVal Ingestion As String,  _
                    ByVal Inhalation As String,  _
                    ByVal Reproductive_effects As String,  _
                    ByVal Teratogenicity As String,  _
                    ByVal Explosive_limits As String,  _
                    ByVal Mutagenicity As String,  _
                    ByVal Embryotoxicity As String,  _
                    ByVal Sensitization_to_product As String,  _
                    ByVal Synergistic_products As String,  _
                    ByVal Carcinogenicity As String,  _
                    ByVal Specific_gravity As String,  _
                    ByVal Chronic As String,  _
                    ByVal Persistence As String,  _
                    ByVal Bioaccumulative_potential As String,  _
                    ByVal Mobility As String,  _
                    ByVal Disposal As String,  _
                    ByVal Viscosity As String,  _
                    ByVal RCRA_status As String,  _
                    ByVal FA_Eye_Contact_code As Integer,  _
                    ByVal FA_skin_contact_code As Integer,  _
                    ByVal FA_inhalation_code As Integer,  _
                    ByVal FA_ingestion_code As Integer,  _
                    ByVal Note_to_hcp_code As Integer,  _
                    ByVal Suitable_extinguishing_media_code As Integer,  _
                    ByVal Unsuitable_extinguishing_media_code As Integer,  _
                    ByVal Precautions_for_firefighters_code As Integer,  _
                    ByVal Specific_hazards_code As Integer,  _
                    ByVal Hazardous_combustion_products_code As Integer,  _
                    ByVal Personal_precautions_code As Integer,  _
                    ByVal Small_spills_code As Integer,  _
                    ByVal Large_spills_code As Integer,  _
                    ByVal Advice_on_safe_handling_code As Integer,  _
                    ByVal Storage_conditions_code As Integer,  _
                    ByVal Suitable_materials_of_construction_code As Integer,  _
                    ByVal Unsuitable_materials_of_construction_code As Integer,  _
                    ByVal Eye_face_protection_code As Integer,  _
                    ByVal Skin_protection_code As Integer,  _
                    ByVal Respiratory_protection_code As Integer,  _
                    ByVal Engineering_controls_code As Integer,  _
                    ByVal General_hygiene_considerations_code As Integer,  _
                    ByVal Chemical_stability_code As Integer,  _
                    ByVal Hazardous_polymerization_code As Integer,  _
                    ByVal Conditions_to_avoid_code As Integer,  _
                    ByVal Incompatibilities_code As Integer,  _
                    ByVal Hazardous_decomposition_products_code As Integer,  _
                    ByVal Likely_routes_of_exposure_code As Integer,  _
                    ByVal Skin_contact_code As Integer,  _
                    ByVal Ingestion_code As Integer,  _
                    ByVal Inhalation_code As Integer,  _
                    ByVal Reproductive_effects_code As Integer,  _
                    ByVal Teratogenicity_code As Integer,  _
                    ByVal Mutagenicity_code As Integer,  _
                    ByVal Embryotoxicity_code As Integer,  _
                    ByVal Sensitization_to_product_code As Integer,  _
                    ByVal Synergistic_products_code As Integer,  _
                    ByVal Carcinogenicity_code As Integer,  _
                    ByVal Chronic_code As Integer,  _
                    ByVal Persistence_code As Integer,  _
                    ByVal Bioaccumulative_potential_code As Integer,  _
                    ByVal Mobility_code As Integer,  _
                    ByVal Disposal_code As Integer,  _
                    ByVal RCRA_status_code As Integer,  _
                    ByVal Eye_contact_code As Integer,  _
                    ByVal TSCA_code As Integer) As DefaultsRow
            Dim rowDefaultsRow As DefaultsRow = CType(Me.NewRow,DefaultsRow)
            Dim columnValuesArray() As Object = New Object() {Preset, Hazard_classification, Signal_word, Hazard_statement, Pict1, Pict2, Pict3, Pict4, Pre_prevention, Pre_response, Pre_storage, Pre_disposal, Component, FA_eye_contact, FA_skin_contact, FA_ingestion, FA_inhalation, Note_to_HCP, Suitable_extinguishing_media, Unsuitable_extinguishing_media, Precautions_for_firefighters, Specific_hazards, Hazardous_combustion_products, Personal_precautions, Small_spills, Large_spills, Advice_on_safe_handling, Storage_conditions, Suitable_materials_of_construction, Unsuitable_materials_of_construction, Eye_face_protection, Skin_protection, Respiratory_protection, Engineering_controls, General_hygiene_considerations, Chemical_stability, Hazardous_polymerization, Conditions_to_avoid, Incompatibilities, Hazardous_decomposition_products, Likely_routes_of_exposure, Eye_contact, Odor_threshold, Skin_contact, Ingestion, Inhalation, Reproductive_effects, Teratogenicity, Explosive_limits, Mutagenicity, Embryotoxicity, Sensitization_to_product, Synergistic_products, Carcinogenicity, Specific_gravity, Chronic, Persistence, Bioaccumulative_potential, Mobility, Disposal, Viscosity, RCRA_status, FA_Eye_Contact_code, FA_skin_contact_code, FA_inhalation_code, FA_ingestion_code, Note_to_hcp_code, Suitable_extinguishing_media_code, Unsuitable_extinguishing_media_code, Precautions_for_firefighters_code, Specific_hazards_code, Hazardous_combustion_products_code, Personal_precautions_code, Small_spills_code, Large_spills_code, Advice_on_safe_handling_code, Storage_conditions_code, Suitable_materials_of_construction_code, Unsuitable_materials_of_construction_code, Eye_face_protection_code, Skin_protection_code, Respiratory_protection_code, Engineering_controls_code, General_hygiene_considerations_code, Chemical_stability_code, Hazardous_polymerization_code, Conditions_to_avoid_code, Incompatibilities_code, Hazardous_decomposition_products_code, Likely_routes_of_exposure_code, Skin_contact_code, Ingestion_code, Inhalation_code, Reproductive_effects_code, Teratogenicity_code, Mutagenicity_code, Embryotoxicity_code, Sensitization_to_product_code, Synergistic_products_code, Carcinogenicity_code, Chronic_code, Persistence_code, Bioaccumulative_potential_code, Mobility_code, Disposal_code, RCRA_status_code, Eye_contact_code, TSCA_code}
            rowDefaultsRow.ItemArray = columnValuesArray
            Me.Rows.Add(rowDefaultsRow)
            Return rowDefaultsRow
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Overrides Function Clone() As Global.System.Data.DataTable
            Dim cln As DefaultsDataTable = CType(MyBase.Clone,DefaultsDataTable)
            cln.InitVars
            Return cln
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Function CreateInstance() As Global.System.Data.DataTable
            Return New DefaultsDataTable()
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Sub InitVars()
            Me.columnPreset = MyBase.Columns("Preset")
            Me.columnHazard_classification = MyBase.Columns("Hazard_classification")
            Me.columnSignal_word = MyBase.Columns("Signal_word")
            Me.columnHazard_statement = MyBase.Columns("Hazard_statement")
            Me.columnPict1 = MyBase.Columns("Pict1")
            Me.columnPict2 = MyBase.Columns("Pict2")
            Me.columnPict3 = MyBase.Columns("Pict3")
            Me.columnPict4 = MyBase.Columns("Pict4")
            Me.columnPre_prevention = MyBase.Columns("Pre_prevention")
            Me.columnPre_response = MyBase.Columns("Pre_response")
            Me.columnPre_storage = MyBase.Columns("Pre_storage")
            Me.columnPre_disposal = MyBase.Columns("Pre_disposal")
            Me.columnComponent = MyBase.Columns("Component")
            Me.columnFA_eye_contact = MyBase.Columns("FA_eye_contact")
            Me.columnFA_skin_contact = MyBase.Columns("FA_skin_contact")
            Me.columnFA_ingestion = MyBase.Columns("FA_ingestion")
            Me.columnFA_inhalation = MyBase.Columns("FA_inhalation")
            Me.columnNote_to_HCP = MyBase.Columns("Note_to_HCP")
            Me.columnSuitable_extinguishing_media = MyBase.Columns("Suitable_extinguishing_media")
            Me.columnUnsuitable_extinguishing_media = MyBase.Columns("Unsuitable_extinguishing_media")
            Me.columnPrecautions_for_firefighters = MyBase.Columns("Precautions_for_firefighters")
            Me.columnSpecific_hazards = MyBase.Columns("Specific_hazards")
            Me.columnHazardous_combustion_products = MyBase.Columns("Hazardous_combustion_products")
            Me.columnPersonal_precautions = MyBase.Columns("Personal_precautions")
            Me.columnSmall_spills = MyBase.Columns("Small_spills")
            Me.columnLarge_spills = MyBase.Columns("Large_spills")
            Me.columnAdvice_on_safe_handling = MyBase.Columns("Advice_on_safe_handling")
            Me.columnStorage_conditions = MyBase.Columns("Storage_conditions")
            Me.columnSuitable_materials_of_construction = MyBase.Columns("Suitable_materials_of_construction")
            Me.columnUnsuitable_materials_of_construction = MyBase.Columns("Unsuitable_materials_of_construction")
            Me.columnEye_face_protection = MyBase.Columns("Eye_face_protection")
            Me.columnSkin_protection = MyBase.Columns("Skin_protection")
            Me.columnRespiratory_protection = MyBase.Columns("Respiratory_protection")
            Me.columnEngineering_controls = MyBase.Columns("Engineering_controls")
            Me.columnGeneral_hygiene_considerations = MyBase.Columns("General_hygiene_considerations")
            Me.columnChemical_stability = MyBase.Columns("Chemical_stability")
            Me.columnHazardous_polymerization = MyBase.Columns("Hazardous_polymerization")
            Me.columnConditions_to_avoid = MyBase.Columns("Conditions_to_avoid")
            Me.columnIncompatibilities = MyBase.Columns("Incompatibilities")
            Me.columnHazardous_decomposition_products = MyBase.Columns("Hazardous_decomposition_products")
            Me.columnLikely_routes_of_exposure = MyBase.Columns("Likely_routes_of_exposure")
            Me.columnEye_contact = MyBase.Columns("Eye_contact")
            Me.columnOdor_threshold = MyBase.Columns("Odor_threshold")
            Me.columnSkin_contact = MyBase.Columns("Skin_contact")
            Me.columnIngestion = MyBase.Columns("Ingestion")
            Me.columnInhalation = MyBase.Columns("Inhalation")
            Me.columnReproductive_effects = MyBase.Columns("Reproductive_effects")
            Me.columnTeratogenicity = MyBase.Columns("Teratogenicity")
            Me.columnExplosive_limits = MyBase.Columns("Explosive_limits")
            Me.columnMutagenicity = MyBase.Columns("Mutagenicity")
            Me.columnEmbryotoxicity = MyBase.Columns("Embryotoxicity")
            Me.columnSensitization_to_product = MyBase.Columns("Sensitization_to_product")
            Me.columnSynergistic_products = MyBase.Columns("Synergistic_products")
            Me.columnCarcinogenicity = MyBase.Columns("Carcinogenicity")
            Me.columnSpecific_gravity = MyBase.Columns("Specific_gravity")
            Me.columnChronic = MyBase.Columns("Chronic")
            Me.columnPersistence = MyBase.Columns("Persistence")
            Me.columnBioaccumulative_potential = MyBase.Columns("Bioaccumulative_potential")
            Me.columnMobility = MyBase.Columns("Mobility")
            Me.columnDisposal = MyBase.Columns("Disposal")
            Me.columnViscosity = MyBase.Columns("Viscosity")
            Me.columnRCRA_status = MyBase.Columns("RCRA_status")
            Me.columnFA_Eye_Contact_code = MyBase.Columns("FA_Eye_Contact_code")
            Me.columnFA_skin_contact_code = MyBase.Columns("FA_skin_contact_code")
            Me.columnFA_inhalation_code = MyBase.Columns("FA_inhalation_code")
            Me.columnFA_ingestion_code = MyBase.Columns("FA_ingestion_code")
            Me.columnNote_to_hcp_code = MyBase.Columns("Note_to_hcp_code")
            Me.columnSuitable_extinguishing_media_code = MyBase.Columns("Suitable_extinguishing_media_code")
            Me.columnUnsuitable_extinguishing_media_code = MyBase.Columns("Unsuitable_extinguishing_media_code")
            Me.columnPrecautions_for_firefighters_code = MyBase.Columns("Precautions_for_firefighters_code")
            Me.columnSpecific_hazards_code = MyBase.Columns("Specific_hazards_code")
            Me.columnHazardous_combustion_products_code = MyBase.Columns("Hazardous_combustion_products_code")
            Me.columnPersonal_precautions_code = MyBase.Columns("Personal_precautions_code")
            Me.columnSmall_spills_code = MyBase.Columns("Small_spills_code")
            Me.columnLarge_spills_code = MyBase.Columns("Large_spills_code")
            Me.columnAdvice_on_safe_handling_code = MyBase.Columns("Advice_on_safe_handling_code")
            Me.columnStorage_conditions_code = MyBase.Columns("Storage_conditions_code")
            Me.columnSuitable_materials_of_construction_code = MyBase.Columns("Suitable_materials_of_construction_code")
            Me.columnUnsuitable_materials_of_construction_code = MyBase.Columns("Unsuitable_materials_of_construction_code")
            Me.columnEye_face_protection_code = MyBase.Columns("Eye_face_protection_code")
            Me.columnSkin_protection_code = MyBase.Columns("Skin_protection_code")
            Me.columnRespiratory_protection_code = MyBase.Columns("Respiratory_protection_code")
            Me.columnEngineering_controls_code = MyBase.Columns("Engineering_controls_code")
            Me.columnGeneral_hygiene_considerations_code = MyBase.Columns("General_hygiene_considerations_code")
            Me.columnChemical_stability_code = MyBase.Columns("Chemical_stability_code")
            Me.columnHazardous_polymerization_code = MyBase.Columns("Hazardous_polymerization_code")
            Me.columnConditions_to_avoid_code = MyBase.Columns("Conditions_to_avoid_code")
            Me.columnIncompatibilities_code = MyBase.Columns("Incompatibilities_code")
            Me.columnHazardous_decomposition_products_code = MyBase.Columns("Hazardous_decomposition_products_code")
            Me.columnLikely_routes_of_exposure_code = MyBase.Columns("Likely_routes_of_exposure_code")
            Me.columnSkin_contact_code = MyBase.Columns("Skin_contact_code")
            Me.columnIngestion_code = MyBase.Columns("Ingestion_code")
            Me.columnInhalation_code = MyBase.Columns("Inhalation_code")
            Me.columnReproductive_effects_code = MyBase.Columns("Reproductive_effects_code")
            Me.columnTeratogenicity_code = MyBase.Columns("Teratogenicity_code")
            Me.columnMutagenicity_code = MyBase.Columns("Mutagenicity_code")
            Me.columnEmbryotoxicity_code = MyBase.Columns("Embryotoxicity_code")
            Me.columnSensitization_to_product_code = MyBase.Columns("Sensitization_to_product_code")
            Me.columnSynergistic_products_code = MyBase.Columns("Synergistic_products_code")
            Me.columnCarcinogenicity_code = MyBase.Columns("Carcinogenicity_code")
            Me.columnChronic_code = MyBase.Columns("Chronic_code")
            Me.columnPersistence_code = MyBase.Columns("Persistence_code")
            Me.columnBioaccumulative_potential_code = MyBase.Columns("Bioaccumulative_potential_code")
            Me.columnMobility_code = MyBase.Columns("Mobility_code")
            Me.columnDisposal_code = MyBase.Columns("Disposal_code")
            Me.columnRCRA_status_code = MyBase.Columns("RCRA_status_code")
            Me.columnEye_contact_code = MyBase.Columns("Eye_contact_code")
            Me.columnTSCA_code = MyBase.Columns("TSCA_code")
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Private Sub InitClass()
            Me.columnPreset = New Global.System.Data.DataColumn("Preset", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnPreset)
            Me.columnHazard_classification = New Global.System.Data.DataColumn("Hazard_classification", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnHazard_classification)
            Me.columnSignal_word = New Global.System.Data.DataColumn("Signal_word", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnSignal_word)
            Me.columnHazard_statement = New Global.System.Data.DataColumn("Hazard_statement", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnHazard_statement)
            Me.columnPict1 = New Global.System.Data.DataColumn("Pict1", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnPict1)
            Me.columnPict2 = New Global.System.Data.DataColumn("Pict2", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnPict2)
            Me.columnPict3 = New Global.System.Data.DataColumn("Pict3", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnPict3)
            Me.columnPict4 = New Global.System.Data.DataColumn("Pict4", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnPict4)
            Me.columnPre_prevention = New Global.System.Data.DataColumn("Pre_prevention", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnPre_prevention)
            Me.columnPre_response = New Global.System.Data.DataColumn("Pre_response", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnPre_response)
            Me.columnPre_storage = New Global.System.Data.DataColumn("Pre_storage", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnPre_storage)
            Me.columnPre_disposal = New Global.System.Data.DataColumn("Pre_disposal", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnPre_disposal)
            Me.columnComponent = New Global.System.Data.DataColumn("Component", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnComponent)
            Me.columnFA_eye_contact = New Global.System.Data.DataColumn("FA_eye_contact", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnFA_eye_contact)
            Me.columnFA_skin_contact = New Global.System.Data.DataColumn("FA_skin_contact", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnFA_skin_contact)
            Me.columnFA_ingestion = New Global.System.Data.DataColumn("FA_ingestion", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnFA_ingestion)
            Me.columnFA_inhalation = New Global.System.Data.DataColumn("FA_inhalation", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnFA_inhalation)
            Me.columnNote_to_HCP = New Global.System.Data.DataColumn("Note_to_HCP", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnNote_to_HCP)
            Me.columnSuitable_extinguishing_media = New Global.System.Data.DataColumn("Suitable_extinguishing_media", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnSuitable_extinguishing_media)
            Me.columnUnsuitable_extinguishing_media = New Global.System.Data.DataColumn("Unsuitable_extinguishing_media", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnUnsuitable_extinguishing_media)
            Me.columnPrecautions_for_firefighters = New Global.System.Data.DataColumn("Precautions_for_firefighters", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnPrecautions_for_firefighters)
            Me.columnSpecific_hazards = New Global.System.Data.DataColumn("Specific_hazards", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnSpecific_hazards)
            Me.columnHazardous_combustion_products = New Global.System.Data.DataColumn("Hazardous_combustion_products", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnHazardous_combustion_products)
            Me.columnPersonal_precautions = New Global.System.Data.DataColumn("Personal_precautions", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnPersonal_precautions)
            Me.columnSmall_spills = New Global.System.Data.DataColumn("Small_spills", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnSmall_spills)
            Me.columnLarge_spills = New Global.System.Data.DataColumn("Large_spills", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnLarge_spills)
            Me.columnAdvice_on_safe_handling = New Global.System.Data.DataColumn("Advice_on_safe_handling", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnAdvice_on_safe_handling)
            Me.columnStorage_conditions = New Global.System.Data.DataColumn("Storage_conditions", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnStorage_conditions)
            Me.columnSuitable_materials_of_construction = New Global.System.Data.DataColumn("Suitable_materials_of_construction", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnSuitable_materials_of_construction)
            Me.columnUnsuitable_materials_of_construction = New Global.System.Data.DataColumn("Unsuitable_materials_of_construction", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnUnsuitable_materials_of_construction)
            Me.columnEye_face_protection = New Global.System.Data.DataColumn("Eye_face_protection", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnEye_face_protection)
            Me.columnSkin_protection = New Global.System.Data.DataColumn("Skin_protection", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnSkin_protection)
            Me.columnRespiratory_protection = New Global.System.Data.DataColumn("Respiratory_protection", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnRespiratory_protection)
            Me.columnEngineering_controls = New Global.System.Data.DataColumn("Engineering_controls", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnEngineering_controls)
            Me.columnGeneral_hygiene_considerations = New Global.System.Data.DataColumn("General_hygiene_considerations", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnGeneral_hygiene_considerations)
            Me.columnChemical_stability = New Global.System.Data.DataColumn("Chemical_stability", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnChemical_stability)
            Me.columnHazardous_polymerization = New Global.System.Data.DataColumn("Hazardous_polymerization", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnHazardous_polymerization)
            Me.columnConditions_to_avoid = New Global.System.Data.DataColumn("Conditions_to_avoid", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnConditions_to_avoid)
            Me.columnIncompatibilities = New Global.System.Data.DataColumn("Incompatibilities", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnIncompatibilities)
            Me.columnHazardous_decomposition_products = New Global.System.Data.DataColumn("Hazardous_decomposition_products", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnHazardous_decomposition_products)
            Me.columnLikely_routes_of_exposure = New Global.System.Data.DataColumn("Likely_routes_of_exposure", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnLikely_routes_of_exposure)
            Me.columnEye_contact = New Global.System.Data.DataColumn("Eye_contact", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnEye_contact)
            Me.columnOdor_threshold = New Global.System.Data.DataColumn("Odor_threshold", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnOdor_threshold)
            Me.columnSkin_contact = New Global.System.Data.DataColumn("Skin_contact", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnSkin_contact)
            Me.columnIngestion = New Global.System.Data.DataColumn("Ingestion", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnIngestion)
            Me.columnInhalation = New Global.System.Data.DataColumn("Inhalation", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnInhalation)
            Me.columnReproductive_effects = New Global.System.Data.DataColumn("Reproductive_effects", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnReproductive_effects)
            Me.columnTeratogenicity = New Global.System.Data.DataColumn("Teratogenicity", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnTeratogenicity)
            Me.columnExplosive_limits = New Global.System.Data.DataColumn("Explosive_limits", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnExplosive_limits)
            Me.columnMutagenicity = New Global.System.Data.DataColumn("Mutagenicity", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnMutagenicity)
            Me.columnEmbryotoxicity = New Global.System.Data.DataColumn("Embryotoxicity", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnEmbryotoxicity)
            Me.columnSensitization_to_product = New Global.System.Data.DataColumn("Sensitization_to_product", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnSensitization_to_product)
            Me.columnSynergistic_products = New Global.System.Data.DataColumn("Synergistic_products", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnSynergistic_products)
            Me.columnCarcinogenicity = New Global.System.Data.DataColumn("Carcinogenicity", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCarcinogenicity)
            Me.columnSpecific_gravity = New Global.System.Data.DataColumn("Specific_gravity", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnSpecific_gravity)
            Me.columnChronic = New Global.System.Data.DataColumn("Chronic", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnChronic)
            Me.columnPersistence = New Global.System.Data.DataColumn("Persistence", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnPersistence)
            Me.columnBioaccumulative_potential = New Global.System.Data.DataColumn("Bioaccumulative_potential", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnBioaccumulative_potential)
            Me.columnMobility = New Global.System.Data.DataColumn("Mobility", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnMobility)
            Me.columnDisposal = New Global.System.Data.DataColumn("Disposal", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnDisposal)
            Me.columnViscosity = New Global.System.Data.DataColumn("Viscosity", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnViscosity)
            Me.columnRCRA_status = New Global.System.Data.DataColumn("RCRA_status", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnRCRA_status)
            Me.columnFA_Eye_Contact_code = New Global.System.Data.DataColumn("FA_Eye_Contact_code", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnFA_Eye_Contact_code)
            Me.columnFA_skin_contact_code = New Global.System.Data.DataColumn("FA_skin_contact_code", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnFA_skin_contact_code)
            Me.columnFA_inhalation_code = New Global.System.Data.DataColumn("FA_inhalation_code", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnFA_inhalation_code)
            Me.columnFA_ingestion_code = New Global.System.Data.DataColumn("FA_ingestion_code", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnFA_ingestion_code)
            Me.columnNote_to_hcp_code = New Global.System.Data.DataColumn("Note_to_hcp_code", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnNote_to_hcp_code)
            Me.columnSuitable_extinguishing_media_code = New Global.System.Data.DataColumn("Suitable_extinguishing_media_code", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnSuitable_extinguishing_media_code)
            Me.columnUnsuitable_extinguishing_media_code = New Global.System.Data.DataColumn("Unsuitable_extinguishing_media_code", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnUnsuitable_extinguishing_media_code)
            Me.columnPrecautions_for_firefighters_code = New Global.System.Data.DataColumn("Precautions_for_firefighters_code", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnPrecautions_for_firefighters_code)
            Me.columnSpecific_hazards_code = New Global.System.Data.DataColumn("Specific_hazards_code", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnSpecific_hazards_code)
            Me.columnHazardous_combustion_products_code = New Global.System.Data.DataColumn("Hazardous_combustion_products_code", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnHazardous_combustion_products_code)
            Me.columnPersonal_precautions_code = New Global.System.Data.DataColumn("Personal_precautions_code", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnPersonal_precautions_code)
            Me.columnSmall_spills_code = New Global.System.Data.DataColumn("Small_spills_code", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnSmall_spills_code)
            Me.columnLarge_spills_code = New Global.System.Data.DataColumn("Large_spills_code", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnLarge_spills_code)
            Me.columnAdvice_on_safe_handling_code = New Global.System.Data.DataColumn("Advice_on_safe_handling_code", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnAdvice_on_safe_handling_code)
            Me.columnStorage_conditions_code = New Global.System.Data.DataColumn("Storage_conditions_code", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnStorage_conditions_code)
            Me.columnSuitable_materials_of_construction_code = New Global.System.Data.DataColumn("Suitable_materials_of_construction_code", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnSuitable_materials_of_construction_code)
            Me.columnUnsuitable_materials_of_construction_code = New Global.System.Data.DataColumn("Unsuitable_materials_of_construction_code", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnUnsuitable_materials_of_construction_code)
            Me.columnEye_face_protection_code = New Global.System.Data.DataColumn("Eye_face_protection_code", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnEye_face_protection_code)
            Me.columnSkin_protection_code = New Global.System.Data.DataColumn("Skin_protection_code", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnSkin_protection_code)
            Me.columnRespiratory_protection_code = New Global.System.Data.DataColumn("Respiratory_protection_code", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnRespiratory_protection_code)
            Me.columnEngineering_controls_code = New Global.System.Data.DataColumn("Engineering_controls_code", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnEngineering_controls_code)
            Me.columnGeneral_hygiene_considerations_code = New Global.System.Data.DataColumn("General_hygiene_considerations_code", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnGeneral_hygiene_considerations_code)
            Me.columnChemical_stability_code = New Global.System.Data.DataColumn("Chemical_stability_code", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnChemical_stability_code)
            Me.columnHazardous_polymerization_code = New Global.System.Data.DataColumn("Hazardous_polymerization_code", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnHazardous_polymerization_code)
            Me.columnConditions_to_avoid_code = New Global.System.Data.DataColumn("Conditions_to_avoid_code", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnConditions_to_avoid_code)
            Me.columnIncompatibilities_code = New Global.System.Data.DataColumn("Incompatibilities_code", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnIncompatibilities_code)
            Me.columnHazardous_decomposition_products_code = New Global.System.Data.DataColumn("Hazardous_decomposition_products_code", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnHazardous_decomposition_products_code)
            Me.columnLikely_routes_of_exposure_code = New Global.System.Data.DataColumn("Likely_routes_of_exposure_code", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnLikely_routes_of_exposure_code)
            Me.columnSkin_contact_code = New Global.System.Data.DataColumn("Skin_contact_code", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnSkin_contact_code)
            Me.columnIngestion_code = New Global.System.Data.DataColumn("Ingestion_code", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnIngestion_code)
            Me.columnInhalation_code = New Global.System.Data.DataColumn("Inhalation_code", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnInhalation_code)
            Me.columnReproductive_effects_code = New Global.System.Data.DataColumn("Reproductive_effects_code", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnReproductive_effects_code)
            Me.columnTeratogenicity_code = New Global.System.Data.DataColumn("Teratogenicity_code", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnTeratogenicity_code)
            Me.columnMutagenicity_code = New Global.System.Data.DataColumn("Mutagenicity_code", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnMutagenicity_code)
            Me.columnEmbryotoxicity_code = New Global.System.Data.DataColumn("Embryotoxicity_code", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnEmbryotoxicity_code)
            Me.columnSensitization_to_product_code = New Global.System.Data.DataColumn("Sensitization_to_product_code", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnSensitization_to_product_code)
            Me.columnSynergistic_products_code = New Global.System.Data.DataColumn("Synergistic_products_code", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnSynergistic_products_code)
            Me.columnCarcinogenicity_code = New Global.System.Data.DataColumn("Carcinogenicity_code", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCarcinogenicity_code)
            Me.columnChronic_code = New Global.System.Data.DataColumn("Chronic_code", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnChronic_code)
            Me.columnPersistence_code = New Global.System.Data.DataColumn("Persistence_code", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnPersistence_code)
            Me.columnBioaccumulative_potential_code = New Global.System.Data.DataColumn("Bioaccumulative_potential_code", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnBioaccumulative_potential_code)
            Me.columnMobility_code = New Global.System.Data.DataColumn("Mobility_code", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnMobility_code)
            Me.columnDisposal_code = New Global.System.Data.DataColumn("Disposal_code", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnDisposal_code)
            Me.columnRCRA_status_code = New Global.System.Data.DataColumn("RCRA_status_code", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnRCRA_status_code)
            Me.columnEye_contact_code = New Global.System.Data.DataColumn("Eye_contact_code", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnEye_contact_code)
            Me.columnTSCA_code = New Global.System.Data.DataColumn("TSCA_code", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnTSCA_code)
            Me.columnPreset.MaxLength = 255
            Me.columnHazard_classification.MaxLength = 536870910
            Me.columnSignal_word.MaxLength = 255
            Me.columnHazard_statement.MaxLength = 536870910
            Me.columnPict1.MaxLength = 255
            Me.columnPict2.MaxLength = 255
            Me.columnPict3.MaxLength = 255
            Me.columnPict4.MaxLength = 255
            Me.columnPre_prevention.MaxLength = 536870910
            Me.columnPre_response.MaxLength = 536870910
            Me.columnPre_storage.MaxLength = 536870910
            Me.columnPre_disposal.MaxLength = 536870910
            Me.columnComponent.MaxLength = 255
            Me.columnFA_eye_contact.MaxLength = 536870910
            Me.columnFA_skin_contact.MaxLength = 536870910
            Me.columnFA_ingestion.MaxLength = 536870910
            Me.columnFA_inhalation.MaxLength = 536870910
            Me.columnNote_to_HCP.MaxLength = 536870910
            Me.columnSuitable_extinguishing_media.MaxLength = 536870910
            Me.columnUnsuitable_extinguishing_media.MaxLength = 536870910
            Me.columnPrecautions_for_firefighters.MaxLength = 536870910
            Me.columnSpecific_hazards.MaxLength = 536870910
            Me.columnHazardous_combustion_products.MaxLength = 536870910
            Me.columnPersonal_precautions.MaxLength = 536870910
            Me.columnSmall_spills.MaxLength = 536870910
            Me.columnLarge_spills.MaxLength = 536870910
            Me.columnAdvice_on_safe_handling.MaxLength = 536870910
            Me.columnStorage_conditions.MaxLength = 536870910
            Me.columnSuitable_materials_of_construction.MaxLength = 536870910
            Me.columnUnsuitable_materials_of_construction.MaxLength = 536870910
            Me.columnEye_face_protection.MaxLength = 536870910
            Me.columnSkin_protection.MaxLength = 536870910
            Me.columnRespiratory_protection.MaxLength = 536870910
            Me.columnEngineering_controls.MaxLength = 536870910
            Me.columnGeneral_hygiene_considerations.MaxLength = 536870910
            Me.columnChemical_stability.MaxLength = 536870910
            Me.columnHazardous_polymerization.MaxLength = 536870910
            Me.columnConditions_to_avoid.MaxLength = 536870910
            Me.columnIncompatibilities.MaxLength = 536870910
            Me.columnHazardous_decomposition_products.MaxLength = 536870910
            Me.columnLikely_routes_of_exposure.MaxLength = 536870910
            Me.columnEye_contact.MaxLength = 536870910
            Me.columnOdor_threshold.MaxLength = 255
            Me.columnSkin_contact.MaxLength = 536870910
            Me.columnIngestion.MaxLength = 536870910
            Me.columnInhalation.MaxLength = 536870910
            Me.columnReproductive_effects.MaxLength = 536870910
            Me.columnTeratogenicity.MaxLength = 536870910
            Me.columnExplosive_limits.MaxLength = 255
            Me.columnMutagenicity.MaxLength = 536870910
            Me.columnEmbryotoxicity.MaxLength = 536870910
            Me.columnSensitization_to_product.MaxLength = 536870910
            Me.columnSynergistic_products.MaxLength = 536870910
            Me.columnCarcinogenicity.MaxLength = 536870910
            Me.columnSpecific_gravity.MaxLength = 255
            Me.columnChronic.MaxLength = 536870910
            Me.columnPersistence.MaxLength = 536870910
            Me.columnBioaccumulative_potential.MaxLength = 536870910
            Me.columnMobility.MaxLength = 536870910
            Me.columnDisposal.MaxLength = 536870910
            Me.columnViscosity.MaxLength = 255
            Me.columnRCRA_status.MaxLength = 536870910
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function NewDefaultsRow() As DefaultsRow
            Return CType(Me.NewRow,DefaultsRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Function NewRowFromBuilder(ByVal builder As Global.System.Data.DataRowBuilder) As Global.System.Data.DataRow
            Return New DefaultsRow(builder)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Function GetRowType() As Global.System.Type
            Return GetType(DefaultsRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Sub OnRowChanged(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanged(e)
            If (Not (Me.DefaultsRowChangedEvent) Is Nothing) Then
                RaiseEvent DefaultsRowChanged(Me, New DefaultsRowChangeEvent(CType(e.Row,DefaultsRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Sub OnRowChanging(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanging(e)
            If (Not (Me.DefaultsRowChangingEvent) Is Nothing) Then
                RaiseEvent DefaultsRowChanging(Me, New DefaultsRowChangeEvent(CType(e.Row,DefaultsRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Sub OnRowDeleted(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleted(e)
            If (Not (Me.DefaultsRowDeletedEvent) Is Nothing) Then
                RaiseEvent DefaultsRowDeleted(Me, New DefaultsRowChangeEvent(CType(e.Row,DefaultsRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Sub OnRowDeleting(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleting(e)
            If (Not (Me.DefaultsRowDeletingEvent) Is Nothing) Then
                RaiseEvent DefaultsRowDeleting(Me, New DefaultsRowChangeEvent(CType(e.Row,DefaultsRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub RemoveDefaultsRow(ByVal row As DefaultsRow)
            Me.Rows.Remove(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Shared Function GetTypedTableSchema(ByVal xs As Global.System.Xml.Schema.XmlSchemaSet) As Global.System.Xml.Schema.XmlSchemaComplexType
            Dim type As Global.System.Xml.Schema.XmlSchemaComplexType = New Global.System.Xml.Schema.XmlSchemaComplexType()
            Dim sequence As Global.System.Xml.Schema.XmlSchemaSequence = New Global.System.Xml.Schema.XmlSchemaSequence()
            Dim ds As Dossier = New Dossier()
            Dim any1 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
            any1.Namespace = "http://www.w3.org/2001/XMLSchema"
            any1.MinOccurs = New Decimal(0)
            any1.MaxOccurs = Decimal.MaxValue
            any1.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any1)
            Dim any2 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
            any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1"
            any2.MinOccurs = New Decimal(1)
            any2.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any2)
            Dim attribute1 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute()
            attribute1.Name = "namespace"
            attribute1.FixedValue = ds.Namespace
            type.Attributes.Add(attribute1)
            Dim attribute2 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute()
            attribute2.Name = "tableTypeName"
            attribute2.FixedValue = "DefaultsDataTable"
            type.Attributes.Add(attribute2)
            type.Particle = sequence
            Dim dsSchema As Global.System.Xml.Schema.XmlSchema = ds.GetSchemaSerializable
            If xs.Contains(dsSchema.TargetNamespace) Then
                Dim s1 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
                Dim s2 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
                Try 
                    Dim schema As Global.System.Xml.Schema.XmlSchema = Nothing
                    dsSchema.Write(s1)
                    Dim schemas As Global.System.Collections.IEnumerator = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator
                    Do While schemas.MoveNext
                        schema = CType(schemas.Current,Global.System.Xml.Schema.XmlSchema)
                        s2.SetLength(0)
                        schema.Write(s2)
                        If (s1.Length = s2.Length) Then
                            s1.Position = 0
                            s2.Position = 0
                            
                            Do While ((s1.Position <> s1.Length)  _
                                        AndAlso (s1.ReadByte = s2.ReadByte))
                                
                                
                            Loop
                            If (s1.Position = s1.Length) Then
                                Return type
                            End If
                        End If
                        
                    Loop
                Finally
                    If (Not (s1) Is Nothing) Then
                        s1.Close
                    End If
                    If (Not (s2) Is Nothing) Then
                        s2.Close
                    End If
                End Try
            End If
            xs.Add(dsSchema)
            Return type
        End Function
    End Class
    
    '''<summary>
    '''Represents the strongly named DataTable class.
    '''</summary>
    <Global.System.Serializable(),  _
     Global.System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")>  _
    Partial Public Class Hazard_LexiconDataTable
        Inherits Global.System.Data.TypedTableBase(Of Hazard_LexiconRow)
        
        Private columnID As Global.System.Data.DataColumn
        
        Private columnHazard_class As Global.System.Data.DataColumn
        
        Private columnTypeCrypt As Global.System.Data.DataColumn
        
        Private columnClassCrypt As Global.System.Data.DataColumn
        
        Private columnCategoryCrypt As Global.System.Data.DataColumn
        
        Private columnHazard_category As Global.System.Data.DataColumn
        
        Private columnSort As Global.System.Data.DataColumn
        
        Private columnHazard_code As Global.System.Data.DataColumn
        
        Private columnHazard_statement As Global.System.Data.DataColumn
        
        Private columnHazard_type As Global.System.Data.DataColumn
        
        Private columnSignal_word As Global.System.Data.DataColumn
        
        Private columnSymbol As Global.System.Data.DataColumn
        
        Private columnPCodes As Global.System.Data.DataColumn
        
        Private _columnHaz_Cat As Global.System.Data.DataColumn
        
        Private columnPstat As Global.System.Data.DataColumn
        
        Private columnHazard_classification As Global.System.Data.DataColumn
        
        Private columnHaz_listbox As Global.System.Data.DataColumn
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub New()
            MyBase.New
            Me.TableName = "Hazard Lexicon"
            Me.BeginInit
            Me.InitClass
            Me.EndInit
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Sub New(ByVal table As Global.System.Data.DataTable)
            MyBase.New
            Me.TableName = table.TableName
            If (table.CaseSensitive <> table.DataSet.CaseSensitive) Then
                Me.CaseSensitive = table.CaseSensitive
            End If
            If (table.Locale.ToString <> table.DataSet.Locale.ToString) Then
                Me.Locale = table.Locale
            End If
            If (table.Namespace <> table.DataSet.Namespace) Then
                Me.Namespace = table.Namespace
            End If
            Me.Prefix = table.Prefix
            Me.MinimumCapacity = table.MinimumCapacity
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Sub New(ByVal info As Global.System.Runtime.Serialization.SerializationInfo, ByVal context As Global.System.Runtime.Serialization.StreamingContext)
            MyBase.New(info, context)
            Me.InitVars
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property IDColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnID
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property Hazard_classColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnHazard_class
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property TypeCryptColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnTypeCrypt
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property ClassCryptColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnClassCrypt
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property CategoryCryptColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnCategoryCrypt
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property Hazard_categoryColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnHazard_category
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property SortColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnSort
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property Hazard_codeColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnHazard_code
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property Hazard_statementColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnHazard_statement
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property Hazard_typeColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnHazard_type
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property Signal_wordColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnSignal_word
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property SymbolColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnSymbol
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property PCodesColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnPCodes
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property _Haz_CatColumn() As Global.System.Data.DataColumn
            Get
                Return Me._columnHaz_Cat
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property PstatColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnPstat
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property Hazard_classificationColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnHazard_classification
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property Haz_listboxColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnHaz_listbox
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Browsable(false)>  _
        Public ReadOnly Property Count() As Integer
            Get
                Return Me.Rows.Count
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Default ReadOnly Property Item(ByVal index As Integer) As Hazard_LexiconRow
            Get
                Return CType(Me.Rows(index),Hazard_LexiconRow)
            End Get
        End Property
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event Hazard_LexiconRowChanging As Hazard_LexiconRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event Hazard_LexiconRowChanged As Hazard_LexiconRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event Hazard_LexiconRowDeleting As Hazard_LexiconRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event Hazard_LexiconRowDeleted As Hazard_LexiconRowChangeEventHandler
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Overloads Sub AddHazard_LexiconRow(ByVal row As Hazard_LexiconRow)
            Me.Rows.Add(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Overloads Function AddHazard_LexiconRow( _
                    ByVal ID As Integer,  _
                    ByVal Hazard_class As String,  _
                    ByVal TypeCrypt As Integer,  _
                    ByVal ClassCrypt As Integer,  _
                    ByVal CategoryCrypt As Integer,  _
                    ByVal Hazard_category As String,  _
                    ByVal Sort As Integer,  _
                    ByVal Hazard_code As String,  _
                    ByVal Hazard_statement As String,  _
                    ByVal Hazard_type As String,  _
                    ByVal Signal_word As String,  _
                    ByVal Symbol As String,  _
                    ByVal PCodes As String,  _
                    ByVal _Haz_Cat As String,  _
                    ByVal Pstat As String,  _
                    ByVal Hazard_classification As String,  _
                    ByVal Haz_listbox As String) As Hazard_LexiconRow
            Dim rowHazard_LexiconRow As Hazard_LexiconRow = CType(Me.NewRow,Hazard_LexiconRow)
            Dim columnValuesArray() As Object = New Object() {ID, Hazard_class, TypeCrypt, ClassCrypt, CategoryCrypt, Hazard_category, Sort, Hazard_code, Hazard_statement, Hazard_type, Signal_word, Symbol, PCodes, _Haz_Cat, Pstat, Hazard_classification, Haz_listbox}
            rowHazard_LexiconRow.ItemArray = columnValuesArray
            Me.Rows.Add(rowHazard_LexiconRow)
            Return rowHazard_LexiconRow
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function FindByID(ByVal ID As Integer) As Hazard_LexiconRow
            Return CType(Me.Rows.Find(New Object() {ID}),Hazard_LexiconRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Overrides Function Clone() As Global.System.Data.DataTable
            Dim cln As Hazard_LexiconDataTable = CType(MyBase.Clone,Hazard_LexiconDataTable)
            cln.InitVars
            Return cln
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Function CreateInstance() As Global.System.Data.DataTable
            Return New Hazard_LexiconDataTable()
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Sub InitVars()
            Me.columnID = MyBase.Columns("ID")
            Me.columnHazard_class = MyBase.Columns("Hazard_class")
            Me.columnTypeCrypt = MyBase.Columns("TypeCrypt")
            Me.columnClassCrypt = MyBase.Columns("ClassCrypt")
            Me.columnCategoryCrypt = MyBase.Columns("CategoryCrypt")
            Me.columnHazard_category = MyBase.Columns("Hazard_category")
            Me.columnSort = MyBase.Columns("Sort")
            Me.columnHazard_code = MyBase.Columns("Hazard_code")
            Me.columnHazard_statement = MyBase.Columns("Hazard_statement")
            Me.columnHazard_type = MyBase.Columns("Hazard_type")
            Me.columnSignal_word = MyBase.Columns("Signal_word")
            Me.columnSymbol = MyBase.Columns("Symbol")
            Me.columnPCodes = MyBase.Columns("PCodes")
            Me._columnHaz_Cat = MyBase.Columns("Haz—Cat")
            Me.columnPstat = MyBase.Columns("Pstat")
            Me.columnHazard_classification = MyBase.Columns("Hazard_classification")
            Me.columnHaz_listbox = MyBase.Columns("Haz_listbox")
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Private Sub InitClass()
            Me.columnID = New Global.System.Data.DataColumn("ID", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnID)
            Me.columnHazard_class = New Global.System.Data.DataColumn("Hazard_class", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnHazard_class)
            Me.columnTypeCrypt = New Global.System.Data.DataColumn("TypeCrypt", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnTypeCrypt)
            Me.columnClassCrypt = New Global.System.Data.DataColumn("ClassCrypt", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnClassCrypt)
            Me.columnCategoryCrypt = New Global.System.Data.DataColumn("CategoryCrypt", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCategoryCrypt)
            Me.columnHazard_category = New Global.System.Data.DataColumn("Hazard_category", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnHazard_category)
            Me.columnSort = New Global.System.Data.DataColumn("Sort", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnSort)
            Me.columnHazard_code = New Global.System.Data.DataColumn("Hazard_code", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnHazard_code)
            Me.columnHazard_statement = New Global.System.Data.DataColumn("Hazard_statement", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnHazard_statement)
            Me.columnHazard_type = New Global.System.Data.DataColumn("Hazard_type", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnHazard_type)
            Me.columnSignal_word = New Global.System.Data.DataColumn("Signal_word", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnSignal_word)
            Me.columnSymbol = New Global.System.Data.DataColumn("Symbol", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnSymbol)
            Me.columnPCodes = New Global.System.Data.DataColumn("PCodes", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnPCodes)
            Me._columnHaz_Cat = New Global.System.Data.DataColumn("Haz—Cat", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            Me._columnHaz_Cat.ExtendedProperties.Add("Generator_ColumnVarNameInTable", "_columnHaz_Cat")
            Me._columnHaz_Cat.ExtendedProperties.Add("Generator_UserColumnName", "Haz—Cat")
            MyBase.Columns.Add(Me._columnHaz_Cat)
            Me.columnPstat = New Global.System.Data.DataColumn("Pstat", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnPstat)
            Me.columnHazard_classification = New Global.System.Data.DataColumn("Hazard_classification", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnHazard_classification)
            Me.columnHaz_listbox = New Global.System.Data.DataColumn("Haz_listbox", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnHaz_listbox)
            Me.Constraints.Add(New Global.System.Data.UniqueConstraint("Constraint1", New Global.System.Data.DataColumn() {Me.columnID}, true))
            Me.columnID.AllowDBNull = false
            Me.columnID.Unique = true
            Me.columnHazard_class.MaxLength = 255
            Me.columnHazard_category.MaxLength = 255
            Me.columnHazard_code.MaxLength = 255
            Me.columnHazard_statement.MaxLength = 255
            Me.columnHazard_type.MaxLength = 255
            Me.columnSignal_word.MaxLength = 255
            Me.columnSymbol.MaxLength = 255
            Me.columnPCodes.MaxLength = 536870910
            Me._columnHaz_Cat.MaxLength = 243
            Me.columnPstat.MaxLength = 536870910
            Me.columnHazard_classification.MaxLength = 243
            Me.columnHaz_listbox.MaxLength = 255
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function NewHazard_LexiconRow() As Hazard_LexiconRow
            Return CType(Me.NewRow,Hazard_LexiconRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Function NewRowFromBuilder(ByVal builder As Global.System.Data.DataRowBuilder) As Global.System.Data.DataRow
            Return New Hazard_LexiconRow(builder)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Function GetRowType() As Global.System.Type
            Return GetType(Hazard_LexiconRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Sub OnRowChanged(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanged(e)
            If (Not (Me.Hazard_LexiconRowChangedEvent) Is Nothing) Then
                RaiseEvent Hazard_LexiconRowChanged(Me, New Hazard_LexiconRowChangeEvent(CType(e.Row,Hazard_LexiconRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Sub OnRowChanging(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanging(e)
            If (Not (Me.Hazard_LexiconRowChangingEvent) Is Nothing) Then
                RaiseEvent Hazard_LexiconRowChanging(Me, New Hazard_LexiconRowChangeEvent(CType(e.Row,Hazard_LexiconRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Sub OnRowDeleted(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleted(e)
            If (Not (Me.Hazard_LexiconRowDeletedEvent) Is Nothing) Then
                RaiseEvent Hazard_LexiconRowDeleted(Me, New Hazard_LexiconRowChangeEvent(CType(e.Row,Hazard_LexiconRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Sub OnRowDeleting(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleting(e)
            If (Not (Me.Hazard_LexiconRowDeletingEvent) Is Nothing) Then
                RaiseEvent Hazard_LexiconRowDeleting(Me, New Hazard_LexiconRowChangeEvent(CType(e.Row,Hazard_LexiconRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub RemoveHazard_LexiconRow(ByVal row As Hazard_LexiconRow)
            Me.Rows.Remove(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Shared Function GetTypedTableSchema(ByVal xs As Global.System.Xml.Schema.XmlSchemaSet) As Global.System.Xml.Schema.XmlSchemaComplexType
            Dim type As Global.System.Xml.Schema.XmlSchemaComplexType = New Global.System.Xml.Schema.XmlSchemaComplexType()
            Dim sequence As Global.System.Xml.Schema.XmlSchemaSequence = New Global.System.Xml.Schema.XmlSchemaSequence()
            Dim ds As Dossier = New Dossier()
            Dim any1 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
            any1.Namespace = "http://www.w3.org/2001/XMLSchema"
            any1.MinOccurs = New Decimal(0)
            any1.MaxOccurs = Decimal.MaxValue
            any1.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any1)
            Dim any2 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
            any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1"
            any2.MinOccurs = New Decimal(1)
            any2.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any2)
            Dim attribute1 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute()
            attribute1.Name = "namespace"
            attribute1.FixedValue = ds.Namespace
            type.Attributes.Add(attribute1)
            Dim attribute2 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute()
            attribute2.Name = "tableTypeName"
            attribute2.FixedValue = "Hazard_LexiconDataTable"
            type.Attributes.Add(attribute2)
            type.Particle = sequence
            Dim dsSchema As Global.System.Xml.Schema.XmlSchema = ds.GetSchemaSerializable
            If xs.Contains(dsSchema.TargetNamespace) Then
                Dim s1 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
                Dim s2 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
                Try 
                    Dim schema As Global.System.Xml.Schema.XmlSchema = Nothing
                    dsSchema.Write(s1)
                    Dim schemas As Global.System.Collections.IEnumerator = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator
                    Do While schemas.MoveNext
                        schema = CType(schemas.Current,Global.System.Xml.Schema.XmlSchema)
                        s2.SetLength(0)
                        schema.Write(s2)
                        If (s1.Length = s2.Length) Then
                            s1.Position = 0
                            s2.Position = 0
                            
                            Do While ((s1.Position <> s1.Length)  _
                                        AndAlso (s1.ReadByte = s2.ReadByte))
                                
                                
                            Loop
                            If (s1.Position = s1.Length) Then
                                Return type
                            End If
                        End If
                        
                    Loop
                Finally
                    If (Not (s1) Is Nothing) Then
                        s1.Close
                    End If
                    If (Not (s2) Is Nothing) Then
                        s2.Close
                    End If
                End Try
            End If
            xs.Add(dsSchema)
            Return type
        End Function
    End Class
    
    '''<summary>
    '''Represents the strongly named DataTable class.
    '''</summary>
    <Global.System.Serializable(),  _
     Global.System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")>  _
    Partial Public Class Precautionary_LexiconDataTable
        Inherits Global.System.Data.TypedTableBase(Of Precautionary_LexiconRow)
        
        Private columnPrecautionary_code As Global.System.Data.DataColumn
        
        Private columnPrecautionary_statement As Global.System.Data.DataColumn
        
        Private columnPrecaution_type As Global.System.Data.DataColumn
        
        Private columnSorter As Global.System.Data.DataColumn
        
        Private columnOverrides As Global.System.Data.DataColumn
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub New()
            MyBase.New
            Me.TableName = "Precautionary Lexicon"
            Me.BeginInit
            Me.InitClass
            Me.EndInit
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Sub New(ByVal table As Global.System.Data.DataTable)
            MyBase.New
            Me.TableName = table.TableName
            If (table.CaseSensitive <> table.DataSet.CaseSensitive) Then
                Me.CaseSensitive = table.CaseSensitive
            End If
            If (table.Locale.ToString <> table.DataSet.Locale.ToString) Then
                Me.Locale = table.Locale
            End If
            If (table.Namespace <> table.DataSet.Namespace) Then
                Me.Namespace = table.Namespace
            End If
            Me.Prefix = table.Prefix
            Me.MinimumCapacity = table.MinimumCapacity
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Sub New(ByVal info As Global.System.Runtime.Serialization.SerializationInfo, ByVal context As Global.System.Runtime.Serialization.StreamingContext)
            MyBase.New(info, context)
            Me.InitVars
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property Precautionary_codeColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnPrecautionary_code
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property Precautionary_statementColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnPrecautionary_statement
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property Precaution_typeColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnPrecaution_type
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property SorterColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnSorter
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property OverridesColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnOverrides
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Browsable(false)>  _
        Public ReadOnly Property Count() As Integer
            Get
                Return Me.Rows.Count
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Default ReadOnly Property Item(ByVal index As Integer) As Precautionary_LexiconRow
            Get
                Return CType(Me.Rows(index),Precautionary_LexiconRow)
            End Get
        End Property
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event Precautionary_LexiconRowChanging As Precautionary_LexiconRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event Precautionary_LexiconRowChanged As Precautionary_LexiconRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event Precautionary_LexiconRowDeleting As Precautionary_LexiconRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event Precautionary_LexiconRowDeleted As Precautionary_LexiconRowChangeEventHandler
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Overloads Sub AddPrecautionary_LexiconRow(ByVal row As Precautionary_LexiconRow)
            Me.Rows.Add(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Overloads Function AddPrecautionary_LexiconRow(ByVal Precautionary_code As String, ByVal Precautionary_statement As String, ByVal Precaution_type As String, ByVal Sorter As Integer, ByVal _Overrides As String) As Precautionary_LexiconRow
            Dim rowPrecautionary_LexiconRow As Precautionary_LexiconRow = CType(Me.NewRow,Precautionary_LexiconRow)
            Dim columnValuesArray() As Object = New Object() {Precautionary_code, Precautionary_statement, Precaution_type, Sorter, _Overrides}
            rowPrecautionary_LexiconRow.ItemArray = columnValuesArray
            Me.Rows.Add(rowPrecautionary_LexiconRow)
            Return rowPrecautionary_LexiconRow
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function FindByPrecautionary_code(ByVal Precautionary_code As String) As Precautionary_LexiconRow
            Return CType(Me.Rows.Find(New Object() {Precautionary_code}),Precautionary_LexiconRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Overrides Function Clone() As Global.System.Data.DataTable
            Dim cln As Precautionary_LexiconDataTable = CType(MyBase.Clone,Precautionary_LexiconDataTable)
            cln.InitVars
            Return cln
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Function CreateInstance() As Global.System.Data.DataTable
            Return New Precautionary_LexiconDataTable()
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Sub InitVars()
            Me.columnPrecautionary_code = MyBase.Columns("Precautionary_code")
            Me.columnPrecautionary_statement = MyBase.Columns("Precautionary_statement")
            Me.columnPrecaution_type = MyBase.Columns("Precaution_type")
            Me.columnSorter = MyBase.Columns("Sorter")
            Me.columnOverrides = MyBase.Columns("Overrides")
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Private Sub InitClass()
            Me.columnPrecautionary_code = New Global.System.Data.DataColumn("Precautionary_code", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnPrecautionary_code)
            Me.columnPrecautionary_statement = New Global.System.Data.DataColumn("Precautionary_statement", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnPrecautionary_statement)
            Me.columnPrecaution_type = New Global.System.Data.DataColumn("Precaution_type", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnPrecaution_type)
            Me.columnSorter = New Global.System.Data.DataColumn("Sorter", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnSorter)
            Me.columnOverrides = New Global.System.Data.DataColumn("Overrides", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            Me.columnOverrides.ExtendedProperties.Add("Generator_ColumnPropNameInTable", "OverridesColumn")
            Me.columnOverrides.ExtendedProperties.Add("Generator_ColumnVarNameInTable", "columnOverrides")
            Me.columnOverrides.ExtendedProperties.Add("Generator_UserColumnName", "Overrides")
            MyBase.Columns.Add(Me.columnOverrides)
            Me.Constraints.Add(New Global.System.Data.UniqueConstraint("Constraint1", New Global.System.Data.DataColumn() {Me.columnPrecautionary_code}, true))
            Me.columnPrecautionary_code.AllowDBNull = false
            Me.columnPrecautionary_code.Unique = true
            Me.columnPrecautionary_code.MaxLength = 255
            Me.columnPrecautionary_statement.MaxLength = 255
            Me.columnPrecaution_type.MaxLength = 255
            Me.columnOverrides.MaxLength = 536870910
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function NewPrecautionary_LexiconRow() As Precautionary_LexiconRow
            Return CType(Me.NewRow,Precautionary_LexiconRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Function NewRowFromBuilder(ByVal builder As Global.System.Data.DataRowBuilder) As Global.System.Data.DataRow
            Return New Precautionary_LexiconRow(builder)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Function GetRowType() As Global.System.Type
            Return GetType(Precautionary_LexiconRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Sub OnRowChanged(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanged(e)
            If (Not (Me.Precautionary_LexiconRowChangedEvent) Is Nothing) Then
                RaiseEvent Precautionary_LexiconRowChanged(Me, New Precautionary_LexiconRowChangeEvent(CType(e.Row,Precautionary_LexiconRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Sub OnRowChanging(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanging(e)
            If (Not (Me.Precautionary_LexiconRowChangingEvent) Is Nothing) Then
                RaiseEvent Precautionary_LexiconRowChanging(Me, New Precautionary_LexiconRowChangeEvent(CType(e.Row,Precautionary_LexiconRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Sub OnRowDeleted(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleted(e)
            If (Not (Me.Precautionary_LexiconRowDeletedEvent) Is Nothing) Then
                RaiseEvent Precautionary_LexiconRowDeleted(Me, New Precautionary_LexiconRowChangeEvent(CType(e.Row,Precautionary_LexiconRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Sub OnRowDeleting(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleting(e)
            If (Not (Me.Precautionary_LexiconRowDeletingEvent) Is Nothing) Then
                RaiseEvent Precautionary_LexiconRowDeleting(Me, New Precautionary_LexiconRowChangeEvent(CType(e.Row,Precautionary_LexiconRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub RemovePrecautionary_LexiconRow(ByVal row As Precautionary_LexiconRow)
            Me.Rows.Remove(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Shared Function GetTypedTableSchema(ByVal xs As Global.System.Xml.Schema.XmlSchemaSet) As Global.System.Xml.Schema.XmlSchemaComplexType
            Dim type As Global.System.Xml.Schema.XmlSchemaComplexType = New Global.System.Xml.Schema.XmlSchemaComplexType()
            Dim sequence As Global.System.Xml.Schema.XmlSchemaSequence = New Global.System.Xml.Schema.XmlSchemaSequence()
            Dim ds As Dossier = New Dossier()
            Dim any1 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
            any1.Namespace = "http://www.w3.org/2001/XMLSchema"
            any1.MinOccurs = New Decimal(0)
            any1.MaxOccurs = Decimal.MaxValue
            any1.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any1)
            Dim any2 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
            any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1"
            any2.MinOccurs = New Decimal(1)
            any2.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any2)
            Dim attribute1 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute()
            attribute1.Name = "namespace"
            attribute1.FixedValue = ds.Namespace
            type.Attributes.Add(attribute1)
            Dim attribute2 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute()
            attribute2.Name = "tableTypeName"
            attribute2.FixedValue = "Precautionary_LexiconDataTable"
            type.Attributes.Add(attribute2)
            type.Particle = sequence
            Dim dsSchema As Global.System.Xml.Schema.XmlSchema = ds.GetSchemaSerializable
            If xs.Contains(dsSchema.TargetNamespace) Then
                Dim s1 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
                Dim s2 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
                Try 
                    Dim schema As Global.System.Xml.Schema.XmlSchema = Nothing
                    dsSchema.Write(s1)
                    Dim schemas As Global.System.Collections.IEnumerator = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator
                    Do While schemas.MoveNext
                        schema = CType(schemas.Current,Global.System.Xml.Schema.XmlSchema)
                        s2.SetLength(0)
                        schema.Write(s2)
                        If (s1.Length = s2.Length) Then
                            s1.Position = 0
                            s2.Position = 0
                            
                            Do While ((s1.Position <> s1.Length)  _
                                        AndAlso (s1.ReadByte = s2.ReadByte))
                                
                                
                            Loop
                            If (s1.Position = s1.Length) Then
                                Return type
                            End If
                        End If
                        
                    Loop
                Finally
                    If (Not (s1) Is Nothing) Then
                        s1.Close
                    End If
                    If (Not (s2) Is Nothing) Then
                        s2.Close
                    End If
                End Try
            End If
            xs.Add(dsSchema)
            Return type
        End Function
    End Class
    
    '''<summary>
    '''Represents the strongly named DataTable class.
    '''</summary>
    <Global.System.Serializable(),  _
     Global.System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")>  _
    Partial Public Class Product_LogDataTable
        Inherits Global.System.Data.TypedTableBase(Of Product_LogRow)
        
        Private columnPID As Global.System.Data.DataColumn
        
        Private columnProduct_name As Global.System.Data.DataColumn
        
        Private columnOldUN As Global.System.Data.DataColumn
        
        Private columnProduct_description As Global.System.Data.DataColumn
        
        Private columnProduct_class As Global.System.Data.DataColumn
        
        Private columnSupplier_code As Global.System.Data.DataColumn
        
        Private columnComp1 As Global.System.Data.DataColumn
        
        Private columnWeightRangeLow1 As Global.System.Data.DataColumn
        
        Private columnWeightRangeHigh1 As Global.System.Data.DataColumn
        
        Private columnWeightRange1 As Global.System.Data.DataColumn
        
        Private columnComp2 As Global.System.Data.DataColumn
        
        Private columnWeightRangeLow2 As Global.System.Data.DataColumn
        
        Private columnWeightRangeHigh2 As Global.System.Data.DataColumn
        
        Private columnWeightRange2 As Global.System.Data.DataColumn
        
        Private columnComp3 As Global.System.Data.DataColumn
        
        Private columnWeightRangeLow3 As Global.System.Data.DataColumn
        
        Private columnWeightRangeHigh3 As Global.System.Data.DataColumn
        
        Private columnWeightRange3 As Global.System.Data.DataColumn
        
        Private columnComp4 As Global.System.Data.DataColumn
        
        Private columnWeightRangeLow4 As Global.System.Data.DataColumn
        
        Private columnWeightRangeHigh4 As Global.System.Data.DataColumn
        
        Private columnWeightRange4 As Global.System.Data.DataColumn
        
        Private columnComp5 As Global.System.Data.DataColumn
        
        Private columnWeightRangeLow5 As Global.System.Data.DataColumn
        
        Private columnWeightRangeHigh5 As Global.System.Data.DataColumn
        
        Private columnWeightRange5 As Global.System.Data.DataColumn
        
        Private columnComp6 As Global.System.Data.DataColumn
        
        Private columnWeightRangeLow6 As Global.System.Data.DataColumn
        
        Private columnWeightRangeHigh6 As Global.System.Data.DataColumn
        
        Private columnWeightRange6 As Global.System.Data.DataColumn
        
        Private columnpH As Global.System.Data.DataColumn
        
        Private columnSpecific_gravity As Global.System.Data.DataColumn
        
        Private columnBoiling_point As Global.System.Data.DataColumn
        
        Private columnFreezing_point As Global.System.Data.DataColumn
        
        Private columnSolubility As Global.System.Data.DataColumn
        
        Private columnVapor_density As Global.System.Data.DataColumn
        
        Private columnVapor_pressure As Global.System.Data.DataColumn
        
        Private columnAppearance As Global.System.Data.DataColumn
        
        Private columnOdor As Global.System.Data.DataColumn
        
        Private columnFlash_point As Global.System.Data.DataColumn
        
        Private columnExplosive_limits As Global.System.Data.DataColumn
        
        Private columnAutoignition_temperature As Global.System.Data.DataColumn
        
        Private columnEPA_number As Global.System.Data.DataColumn
        
        Private columnDecomposition_temperature As Global.System.Data.DataColumn
        
        Private columnProduct_RQ As Global.System.Data.DataColumn
        
        Private columnOdor_threshold As Global.System.Data.DataColumn
        
        Private columnEvaporation_rate As Global.System.Data.DataColumn
        
        Private columnPartition_coefficient As Global.System.Data.DataColumn
        
        Private columnVOC_content As Global.System.Data.DataColumn
        
        Private columnViscosity As Global.System.Data.DataColumn
        
        Private columnHMIS As Global.System.Data.DataColumn
        
        Private columnNFPA As Global.System.Data.DataColumn
        
        Private columnCAS1 As Global.System.Data.DataColumn
        
        Private columnCAS2 As Global.System.Data.DataColumn
        
        Private columnCAS3 As Global.System.Data.DataColumn
        
        Private columnCAS4 As Global.System.Data.DataColumn
        
        Private columnCAS5 As Global.System.Data.DataColumn
        
        Private columnCAS6 As Global.System.Data.DataColumn
        
        Private columnOSHA_PEL1 As Global.System.Data.DataColumn
        
        Private columnOSHA_PEL2 As Global.System.Data.DataColumn
        
        Private columnOSHA_PEL3 As Global.System.Data.DataColumn
        
        Private columnOSHA_PEL4 As Global.System.Data.DataColumn
        
        Private columnOSHA_PEL5 As Global.System.Data.DataColumn
        
        Private columnOSHA_PEL6 As Global.System.Data.DataColumn
        
        Private columnACGIH_TLV1 As Global.System.Data.DataColumn
        
        Private columnACGIH_TLV2 As Global.System.Data.DataColumn
        
        Private columnACGIH_TLV3 As Global.System.Data.DataColumn
        
        Private columnACGIH_TLV4 As Global.System.Data.DataColumn
        
        Private columnACGIH_TLV5 As Global.System.Data.DataColumn
        
        Private columnACGIH_TLV6 As Global.System.Data.DataColumn
        
        Private columnHealth2 As Global.System.Data.DataColumn
        
        Private columnPhysical2 As Global.System.Data.DataColumn
        
        Private columnEnvironmental2 As Global.System.Data.DataColumn
        
        Private columngoTime As Global.System.Data.DataColumn
        
        Private columnClones As Global.System.Data.DataColumn
        
        Private columnIssue_date As Global.System.Data.DataColumn
        
        Private columnRevision_date As Global.System.Data.DataColumn
        
        Private columnVersion As Global.System.Data.DataColumn
        
        Private columnNote As Global.System.Data.DataColumn
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub New()
            MyBase.New
            Me.TableName = "Product Log"
            Me.BeginInit
            Me.InitClass
            Me.EndInit
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Sub New(ByVal table As Global.System.Data.DataTable)
            MyBase.New
            Me.TableName = table.TableName
            If (table.CaseSensitive <> table.DataSet.CaseSensitive) Then
                Me.CaseSensitive = table.CaseSensitive
            End If
            If (table.Locale.ToString <> table.DataSet.Locale.ToString) Then
                Me.Locale = table.Locale
            End If
            If (table.Namespace <> table.DataSet.Namespace) Then
                Me.Namespace = table.Namespace
            End If
            Me.Prefix = table.Prefix
            Me.MinimumCapacity = table.MinimumCapacity
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Sub New(ByVal info As Global.System.Runtime.Serialization.SerializationInfo, ByVal context As Global.System.Runtime.Serialization.StreamingContext)
            MyBase.New(info, context)
            Me.InitVars
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property PIDColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnPID
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property Product_nameColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnProduct_name
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property OldUNColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnOldUN
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property Product_descriptionColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnProduct_description
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property Product_classColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnProduct_class
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property Supplier_codeColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnSupplier_code
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property Comp1Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnComp1
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property WeightRangeLow1Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnWeightRangeLow1
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property WeightRangeHigh1Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnWeightRangeHigh1
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property WeightRange1Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnWeightRange1
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property Comp2Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnComp2
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property WeightRangeLow2Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnWeightRangeLow2
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property WeightRangeHigh2Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnWeightRangeHigh2
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property WeightRange2Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnWeightRange2
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property Comp3Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnComp3
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property WeightRangeLow3Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnWeightRangeLow3
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property WeightRangeHigh3Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnWeightRangeHigh3
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property WeightRange3Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnWeightRange3
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property Comp4Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnComp4
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property WeightRangeLow4Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnWeightRangeLow4
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property WeightRangeHigh4Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnWeightRangeHigh4
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property WeightRange4Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnWeightRange4
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property Comp5Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnComp5
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property WeightRangeLow5Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnWeightRangeLow5
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property WeightRangeHigh5Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnWeightRangeHigh5
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property WeightRange5Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnWeightRange5
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property Comp6Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnComp6
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property WeightRangeLow6Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnWeightRangeLow6
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property WeightRangeHigh6Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnWeightRangeHigh6
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property WeightRange6Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnWeightRange6
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property pHColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnpH
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property Specific_gravityColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnSpecific_gravity
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property Boiling_pointColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnBoiling_point
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property Freezing_pointColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnFreezing_point
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property SolubilityColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnSolubility
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property Vapor_densityColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnVapor_density
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property Vapor_pressureColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnVapor_pressure
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property AppearanceColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnAppearance
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property OdorColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnOdor
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property Flash_pointColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnFlash_point
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property Explosive_limitsColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnExplosive_limits
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property Autoignition_temperatureColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnAutoignition_temperature
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property EPA_numberColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnEPA_number
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property Decomposition_temperatureColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnDecomposition_temperature
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property Product_RQColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnProduct_RQ
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property Odor_thresholdColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnOdor_threshold
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property Evaporation_rateColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnEvaporation_rate
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property Partition_coefficientColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnPartition_coefficient
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property VOC_contentColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnVOC_content
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property ViscosityColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnViscosity
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property HMISColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnHMIS
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property NFPAColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnNFPA
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property CAS1Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnCAS1
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property CAS2Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnCAS2
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property CAS3Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnCAS3
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property CAS4Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnCAS4
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property CAS5Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnCAS5
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property CAS6Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnCAS6
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property OSHA_PEL1Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnOSHA_PEL1
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property OSHA_PEL2Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnOSHA_PEL2
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property OSHA_PEL3Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnOSHA_PEL3
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property OSHA_PEL4Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnOSHA_PEL4
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property OSHA_PEL5Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnOSHA_PEL5
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property OSHA_PEL6Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnOSHA_PEL6
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property ACGIH_TLV1Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnACGIH_TLV1
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property ACGIH_TLV2Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnACGIH_TLV2
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property ACGIH_TLV3Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnACGIH_TLV3
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property ACGIH_TLV4Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnACGIH_TLV4
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property ACGIH_TLV5Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnACGIH_TLV5
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property ACGIH_TLV6Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnACGIH_TLV6
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property Health2Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnHealth2
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property Physical2Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnPhysical2
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property Environmental2Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnEnvironmental2
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property goTimeColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columngoTime
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property ClonesColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnClones
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property Issue_dateColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnIssue_date
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property Revision_dateColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnRevision_date
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property VersionColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnVersion
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property NoteColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnNote
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Browsable(false)>  _
        Public ReadOnly Property Count() As Integer
            Get
                Return Me.Rows.Count
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Default ReadOnly Property Item(ByVal index As Integer) As Product_LogRow
            Get
                Return CType(Me.Rows(index),Product_LogRow)
            End Get
        End Property
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event Product_LogRowChanging As Product_LogRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event Product_LogRowChanged As Product_LogRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event Product_LogRowDeleting As Product_LogRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event Product_LogRowDeleted As Product_LogRowChangeEventHandler
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Overloads Sub AddProduct_LogRow(ByVal row As Product_LogRow)
            Me.Rows.Add(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Overloads Function AddProduct_LogRow( _
                    ByVal Product_name As String,  _
                    ByVal OldUN As String,  _
                    ByVal Product_description As String,  _
                    ByVal Product_class As String,  _
                    ByVal Supplier_code As Integer,  _
                    ByVal Comp1 As String,  _
                    ByVal WeightRangeLow1 As Single,  _
                    ByVal WeightRangeHigh1 As Single,  _
                    ByVal WeightRange1 As String,  _
                    ByVal Comp2 As String,  _
                    ByVal WeightRangeLow2 As Single,  _
                    ByVal WeightRangeHigh2 As Single,  _
                    ByVal WeightRange2 As String,  _
                    ByVal Comp3 As String,  _
                    ByVal WeightRangeLow3 As Single,  _
                    ByVal WeightRangeHigh3 As Single,  _
                    ByVal WeightRange3 As String,  _
                    ByVal Comp4 As String,  _
                    ByVal WeightRangeLow4 As Single,  _
                    ByVal WeightRangeHigh4 As Single,  _
                    ByVal WeightRange4 As String,  _
                    ByVal Comp5 As String,  _
                    ByVal WeightRangeLow5 As Single,  _
                    ByVal WeightRangeHigh5 As Single,  _
                    ByVal WeightRange5 As String,  _
                    ByVal Comp6 As String,  _
                    ByVal WeightRangeLow6 As Single,  _
                    ByVal WeightRangeHigh6 As Single,  _
                    ByVal WeightRange6 As String,  _
                    ByVal pH As String,  _
                    ByVal Specific_gravity As String,  _
                    ByVal Boiling_point As String,  _
                    ByVal Freezing_point As String,  _
                    ByVal Solubility As String,  _
                    ByVal Vapor_density As String,  _
                    ByVal Vapor_pressure As String,  _
                    ByVal Appearance As String,  _
                    ByVal Odor As String,  _
                    ByVal Flash_point As String,  _
                    ByVal Explosive_limits As String,  _
                    ByVal Autoignition_temperature As String,  _
                    ByVal EPA_number As String,  _
                    ByVal Decomposition_temperature As String,  _
                    ByVal Product_RQ As String,  _
                    ByVal Odor_threshold As String,  _
                    ByVal Evaporation_rate As String,  _
                    ByVal Partition_coefficient As String,  _
                    ByVal VOC_content As String,  _
                    ByVal Viscosity As String,  _
                    ByVal HMIS As String,  _
                    ByVal NFPA As String,  _
                    ByVal CAS1 As String,  _
                    ByVal CAS2 As String,  _
                    ByVal CAS3 As String,  _
                    ByVal CAS4 As String,  _
                    ByVal CAS5 As String,  _
                    ByVal CAS6 As String,  _
                    ByVal OSHA_PEL1 As String,  _
                    ByVal OSHA_PEL2 As String,  _
                    ByVal OSHA_PEL3 As String,  _
                    ByVal OSHA_PEL4 As String,  _
                    ByVal OSHA_PEL5 As String,  _
                    ByVal OSHA_PEL6 As String,  _
                    ByVal ACGIH_TLV1 As String,  _
                    ByVal ACGIH_TLV2 As String,  _
                    ByVal ACGIH_TLV3 As String,  _
                    ByVal ACGIH_TLV4 As String,  _
                    ByVal ACGIH_TLV5 As String,  _
                    ByVal ACGIH_TLV6 As String,  _
                    ByVal Health2 As String,  _
                    ByVal Physical2 As String,  _
                    ByVal Environmental2 As String,  _
                    ByVal goTime As Date,  _
                    ByVal Clones As String,  _
                    ByVal Issue_date As Date,  _
                    ByVal Revision_date As Date,  _
                    ByVal Version As Integer,  _
                    ByVal Note As String) As Product_LogRow
            Dim rowProduct_LogRow As Product_LogRow = CType(Me.NewRow,Product_LogRow)
            Dim columnValuesArray() As Object = New Object() {Nothing, Product_name, OldUN, Product_description, Product_class, Supplier_code, Comp1, WeightRangeLow1, WeightRangeHigh1, WeightRange1, Comp2, WeightRangeLow2, WeightRangeHigh2, WeightRange2, Comp3, WeightRangeLow3, WeightRangeHigh3, WeightRange3, Comp4, WeightRangeLow4, WeightRangeHigh4, WeightRange4, Comp5, WeightRangeLow5, WeightRangeHigh5, WeightRange5, Comp6, WeightRangeLow6, WeightRangeHigh6, WeightRange6, pH, Specific_gravity, Boiling_point, Freezing_point, Solubility, Vapor_density, Vapor_pressure, Appearance, Odor, Flash_point, Explosive_limits, Autoignition_temperature, EPA_number, Decomposition_temperature, Product_RQ, Odor_threshold, Evaporation_rate, Partition_coefficient, VOC_content, Viscosity, HMIS, NFPA, CAS1, CAS2, CAS3, CAS4, CAS5, CAS6, OSHA_PEL1, OSHA_PEL2, OSHA_PEL3, OSHA_PEL4, OSHA_PEL5, OSHA_PEL6, ACGIH_TLV1, ACGIH_TLV2, ACGIH_TLV3, ACGIH_TLV4, ACGIH_TLV5, ACGIH_TLV6, Health2, Physical2, Environmental2, goTime, Clones, Issue_date, Revision_date, Version, Note}
            rowProduct_LogRow.ItemArray = columnValuesArray
            Me.Rows.Add(rowProduct_LogRow)
            Return rowProduct_LogRow
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function FindByPID(ByVal PID As Integer) As Product_LogRow
            Return CType(Me.Rows.Find(New Object() {PID}),Product_LogRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Overrides Function Clone() As Global.System.Data.DataTable
            Dim cln As Product_LogDataTable = CType(MyBase.Clone,Product_LogDataTable)
            cln.InitVars
            Return cln
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Function CreateInstance() As Global.System.Data.DataTable
            Return New Product_LogDataTable()
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Sub InitVars()
            Me.columnPID = MyBase.Columns("PID")
            Me.columnProduct_name = MyBase.Columns("Product_name")
            Me.columnOldUN = MyBase.Columns("OldUN")
            Me.columnProduct_description = MyBase.Columns("Product_description")
            Me.columnProduct_class = MyBase.Columns("Product_class")
            Me.columnSupplier_code = MyBase.Columns("Supplier_code")
            Me.columnComp1 = MyBase.Columns("Comp1")
            Me.columnWeightRangeLow1 = MyBase.Columns("WeightRangeLow1")
            Me.columnWeightRangeHigh1 = MyBase.Columns("WeightRangeHigh1")
            Me.columnWeightRange1 = MyBase.Columns("WeightRange1")
            Me.columnComp2 = MyBase.Columns("Comp2")
            Me.columnWeightRangeLow2 = MyBase.Columns("WeightRangeLow2")
            Me.columnWeightRangeHigh2 = MyBase.Columns("WeightRangeHigh2")
            Me.columnWeightRange2 = MyBase.Columns("WeightRange2")
            Me.columnComp3 = MyBase.Columns("Comp3")
            Me.columnWeightRangeLow3 = MyBase.Columns("WeightRangeLow3")
            Me.columnWeightRangeHigh3 = MyBase.Columns("WeightRangeHigh3")
            Me.columnWeightRange3 = MyBase.Columns("WeightRange3")
            Me.columnComp4 = MyBase.Columns("Comp4")
            Me.columnWeightRangeLow4 = MyBase.Columns("WeightRangeLow4")
            Me.columnWeightRangeHigh4 = MyBase.Columns("WeightRangeHigh4")
            Me.columnWeightRange4 = MyBase.Columns("WeightRange4")
            Me.columnComp5 = MyBase.Columns("Comp5")
            Me.columnWeightRangeLow5 = MyBase.Columns("WeightRangeLow5")
            Me.columnWeightRangeHigh5 = MyBase.Columns("WeightRangeHigh5")
            Me.columnWeightRange5 = MyBase.Columns("WeightRange5")
            Me.columnComp6 = MyBase.Columns("Comp6")
            Me.columnWeightRangeLow6 = MyBase.Columns("WeightRangeLow6")
            Me.columnWeightRangeHigh6 = MyBase.Columns("WeightRangeHigh6")
            Me.columnWeightRange6 = MyBase.Columns("WeightRange6")
            Me.columnpH = MyBase.Columns("pH")
            Me.columnSpecific_gravity = MyBase.Columns("Specific_gravity")
            Me.columnBoiling_point = MyBase.Columns("Boiling_point")
            Me.columnFreezing_point = MyBase.Columns("Freezing_point")
            Me.columnSolubility = MyBase.Columns("Solubility")
            Me.columnVapor_density = MyBase.Columns("Vapor_density")
            Me.columnVapor_pressure = MyBase.Columns("Vapor_pressure")
            Me.columnAppearance = MyBase.Columns("Appearance")
            Me.columnOdor = MyBase.Columns("Odor")
            Me.columnFlash_point = MyBase.Columns("Flash_point")
            Me.columnExplosive_limits = MyBase.Columns("Explosive_limits")
            Me.columnAutoignition_temperature = MyBase.Columns("Autoignition_temperature")
            Me.columnEPA_number = MyBase.Columns("EPA_number")
            Me.columnDecomposition_temperature = MyBase.Columns("Decomposition_temperature")
            Me.columnProduct_RQ = MyBase.Columns("Product_RQ")
            Me.columnOdor_threshold = MyBase.Columns("Odor_threshold")
            Me.columnEvaporation_rate = MyBase.Columns("Evaporation_rate")
            Me.columnPartition_coefficient = MyBase.Columns("Partition_coefficient")
            Me.columnVOC_content = MyBase.Columns("VOC_content")
            Me.columnViscosity = MyBase.Columns("Viscosity")
            Me.columnHMIS = MyBase.Columns("HMIS")
            Me.columnNFPA = MyBase.Columns("NFPA")
            Me.columnCAS1 = MyBase.Columns("CAS1")
            Me.columnCAS2 = MyBase.Columns("CAS2")
            Me.columnCAS3 = MyBase.Columns("CAS3")
            Me.columnCAS4 = MyBase.Columns("CAS4")
            Me.columnCAS5 = MyBase.Columns("CAS5")
            Me.columnCAS6 = MyBase.Columns("CAS6")
            Me.columnOSHA_PEL1 = MyBase.Columns("OSHA_PEL1")
            Me.columnOSHA_PEL2 = MyBase.Columns("OSHA_PEL2")
            Me.columnOSHA_PEL3 = MyBase.Columns("OSHA_PEL3")
            Me.columnOSHA_PEL4 = MyBase.Columns("OSHA_PEL4")
            Me.columnOSHA_PEL5 = MyBase.Columns("OSHA_PEL5")
            Me.columnOSHA_PEL6 = MyBase.Columns("OSHA_PEL6")
            Me.columnACGIH_TLV1 = MyBase.Columns("ACGIH_TLV1")
            Me.columnACGIH_TLV2 = MyBase.Columns("ACGIH_TLV2")
            Me.columnACGIH_TLV3 = MyBase.Columns("ACGIH_TLV3")
            Me.columnACGIH_TLV4 = MyBase.Columns("ACGIH_TLV4")
            Me.columnACGIH_TLV5 = MyBase.Columns("ACGIH_TLV5")
            Me.columnACGIH_TLV6 = MyBase.Columns("ACGIH_TLV6")
            Me.columnHealth2 = MyBase.Columns("Health2")
            Me.columnPhysical2 = MyBase.Columns("Physical2")
            Me.columnEnvironmental2 = MyBase.Columns("Environmental2")
            Me.columngoTime = MyBase.Columns("goTime")
            Me.columnClones = MyBase.Columns("Clones")
            Me.columnIssue_date = MyBase.Columns("Issue_date")
            Me.columnRevision_date = MyBase.Columns("Revision_date")
            Me.columnVersion = MyBase.Columns("Version")
            Me.columnNote = MyBase.Columns("Note")
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Private Sub InitClass()
            Me.columnPID = New Global.System.Data.DataColumn("PID", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnPID)
            Me.columnProduct_name = New Global.System.Data.DataColumn("Product_name", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnProduct_name)
            Me.columnOldUN = New Global.System.Data.DataColumn("OldUN", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnOldUN)
            Me.columnProduct_description = New Global.System.Data.DataColumn("Product_description", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnProduct_description)
            Me.columnProduct_class = New Global.System.Data.DataColumn("Product_class", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnProduct_class)
            Me.columnSupplier_code = New Global.System.Data.DataColumn("Supplier_code", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnSupplier_code)
            Me.columnComp1 = New Global.System.Data.DataColumn("Comp1", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnComp1)
            Me.columnWeightRangeLow1 = New Global.System.Data.DataColumn("WeightRangeLow1", GetType(Single), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnWeightRangeLow1)
            Me.columnWeightRangeHigh1 = New Global.System.Data.DataColumn("WeightRangeHigh1", GetType(Single), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnWeightRangeHigh1)
            Me.columnWeightRange1 = New Global.System.Data.DataColumn("WeightRange1", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnWeightRange1)
            Me.columnComp2 = New Global.System.Data.DataColumn("Comp2", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnComp2)
            Me.columnWeightRangeLow2 = New Global.System.Data.DataColumn("WeightRangeLow2", GetType(Single), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnWeightRangeLow2)
            Me.columnWeightRangeHigh2 = New Global.System.Data.DataColumn("WeightRangeHigh2", GetType(Single), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnWeightRangeHigh2)
            Me.columnWeightRange2 = New Global.System.Data.DataColumn("WeightRange2", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnWeightRange2)
            Me.columnComp3 = New Global.System.Data.DataColumn("Comp3", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnComp3)
            Me.columnWeightRangeLow3 = New Global.System.Data.DataColumn("WeightRangeLow3", GetType(Single), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnWeightRangeLow3)
            Me.columnWeightRangeHigh3 = New Global.System.Data.DataColumn("WeightRangeHigh3", GetType(Single), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnWeightRangeHigh3)
            Me.columnWeightRange3 = New Global.System.Data.DataColumn("WeightRange3", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnWeightRange3)
            Me.columnComp4 = New Global.System.Data.DataColumn("Comp4", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnComp4)
            Me.columnWeightRangeLow4 = New Global.System.Data.DataColumn("WeightRangeLow4", GetType(Single), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnWeightRangeLow4)
            Me.columnWeightRangeHigh4 = New Global.System.Data.DataColumn("WeightRangeHigh4", GetType(Single), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnWeightRangeHigh4)
            Me.columnWeightRange4 = New Global.System.Data.DataColumn("WeightRange4", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnWeightRange4)
            Me.columnComp5 = New Global.System.Data.DataColumn("Comp5", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnComp5)
            Me.columnWeightRangeLow5 = New Global.System.Data.DataColumn("WeightRangeLow5", GetType(Single), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnWeightRangeLow5)
            Me.columnWeightRangeHigh5 = New Global.System.Data.DataColumn("WeightRangeHigh5", GetType(Single), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnWeightRangeHigh5)
            Me.columnWeightRange5 = New Global.System.Data.DataColumn("WeightRange5", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnWeightRange5)
            Me.columnComp6 = New Global.System.Data.DataColumn("Comp6", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnComp6)
            Me.columnWeightRangeLow6 = New Global.System.Data.DataColumn("WeightRangeLow6", GetType(Single), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnWeightRangeLow6)
            Me.columnWeightRangeHigh6 = New Global.System.Data.DataColumn("WeightRangeHigh6", GetType(Single), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnWeightRangeHigh6)
            Me.columnWeightRange6 = New Global.System.Data.DataColumn("WeightRange6", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnWeightRange6)
            Me.columnpH = New Global.System.Data.DataColumn("pH", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnpH)
            Me.columnSpecific_gravity = New Global.System.Data.DataColumn("Specific_gravity", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnSpecific_gravity)
            Me.columnBoiling_point = New Global.System.Data.DataColumn("Boiling_point", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnBoiling_point)
            Me.columnFreezing_point = New Global.System.Data.DataColumn("Freezing_point", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnFreezing_point)
            Me.columnSolubility = New Global.System.Data.DataColumn("Solubility", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnSolubility)
            Me.columnVapor_density = New Global.System.Data.DataColumn("Vapor_density", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnVapor_density)
            Me.columnVapor_pressure = New Global.System.Data.DataColumn("Vapor_pressure", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnVapor_pressure)
            Me.columnAppearance = New Global.System.Data.DataColumn("Appearance", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnAppearance)
            Me.columnOdor = New Global.System.Data.DataColumn("Odor", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnOdor)
            Me.columnFlash_point = New Global.System.Data.DataColumn("Flash_point", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnFlash_point)
            Me.columnExplosive_limits = New Global.System.Data.DataColumn("Explosive_limits", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnExplosive_limits)
            Me.columnAutoignition_temperature = New Global.System.Data.DataColumn("Autoignition_temperature", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnAutoignition_temperature)
            Me.columnEPA_number = New Global.System.Data.DataColumn("EPA_number", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnEPA_number)
            Me.columnDecomposition_temperature = New Global.System.Data.DataColumn("Decomposition_temperature", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnDecomposition_temperature)
            Me.columnProduct_RQ = New Global.System.Data.DataColumn("Product_RQ", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnProduct_RQ)
            Me.columnOdor_threshold = New Global.System.Data.DataColumn("Odor_threshold", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnOdor_threshold)
            Me.columnEvaporation_rate = New Global.System.Data.DataColumn("Evaporation_rate", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnEvaporation_rate)
            Me.columnPartition_coefficient = New Global.System.Data.DataColumn("Partition_coefficient", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnPartition_coefficient)
            Me.columnVOC_content = New Global.System.Data.DataColumn("VOC_content", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnVOC_content)
            Me.columnViscosity = New Global.System.Data.DataColumn("Viscosity", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnViscosity)
            Me.columnHMIS = New Global.System.Data.DataColumn("HMIS", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnHMIS)
            Me.columnNFPA = New Global.System.Data.DataColumn("NFPA", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnNFPA)
            Me.columnCAS1 = New Global.System.Data.DataColumn("CAS1", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCAS1)
            Me.columnCAS2 = New Global.System.Data.DataColumn("CAS2", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCAS2)
            Me.columnCAS3 = New Global.System.Data.DataColumn("CAS3", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCAS3)
            Me.columnCAS4 = New Global.System.Data.DataColumn("CAS4", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCAS4)
            Me.columnCAS5 = New Global.System.Data.DataColumn("CAS5", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCAS5)
            Me.columnCAS6 = New Global.System.Data.DataColumn("CAS6", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCAS6)
            Me.columnOSHA_PEL1 = New Global.System.Data.DataColumn("OSHA_PEL1", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnOSHA_PEL1)
            Me.columnOSHA_PEL2 = New Global.System.Data.DataColumn("OSHA_PEL2", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnOSHA_PEL2)
            Me.columnOSHA_PEL3 = New Global.System.Data.DataColumn("OSHA_PEL3", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnOSHA_PEL3)
            Me.columnOSHA_PEL4 = New Global.System.Data.DataColumn("OSHA_PEL4", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnOSHA_PEL4)
            Me.columnOSHA_PEL5 = New Global.System.Data.DataColumn("OSHA_PEL5", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnOSHA_PEL5)
            Me.columnOSHA_PEL6 = New Global.System.Data.DataColumn("OSHA_PEL6", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnOSHA_PEL6)
            Me.columnACGIH_TLV1 = New Global.System.Data.DataColumn("ACGIH_TLV1", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnACGIH_TLV1)
            Me.columnACGIH_TLV2 = New Global.System.Data.DataColumn("ACGIH_TLV2", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnACGIH_TLV2)
            Me.columnACGIH_TLV3 = New Global.System.Data.DataColumn("ACGIH_TLV3", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnACGIH_TLV3)
            Me.columnACGIH_TLV4 = New Global.System.Data.DataColumn("ACGIH_TLV4", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnACGIH_TLV4)
            Me.columnACGIH_TLV5 = New Global.System.Data.DataColumn("ACGIH_TLV5", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnACGIH_TLV5)
            Me.columnACGIH_TLV6 = New Global.System.Data.DataColumn("ACGIH_TLV6", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnACGIH_TLV6)
            Me.columnHealth2 = New Global.System.Data.DataColumn("Health2", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnHealth2)
            Me.columnPhysical2 = New Global.System.Data.DataColumn("Physical2", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnPhysical2)
            Me.columnEnvironmental2 = New Global.System.Data.DataColumn("Environmental2", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnEnvironmental2)
            Me.columngoTime = New Global.System.Data.DataColumn("goTime", GetType(Date), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columngoTime)
            Me.columnClones = New Global.System.Data.DataColumn("Clones", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnClones)
            Me.columnIssue_date = New Global.System.Data.DataColumn("Issue_date", GetType(Date), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnIssue_date)
            Me.columnRevision_date = New Global.System.Data.DataColumn("Revision_date", GetType(Date), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnRevision_date)
            Me.columnVersion = New Global.System.Data.DataColumn("Version", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnVersion)
            Me.columnNote = New Global.System.Data.DataColumn("Note", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnNote)
            Me.Constraints.Add(New Global.System.Data.UniqueConstraint("Constraint1", New Global.System.Data.DataColumn() {Me.columnPID}, true))
            Me.columnPID.AutoIncrement = true
            Me.columnPID.AutoIncrementSeed = -1
            Me.columnPID.AutoIncrementStep = -1
            Me.columnPID.AllowDBNull = false
            Me.columnPID.Unique = true
            Me.columnProduct_name.MaxLength = 255
            Me.columnOldUN.MaxLength = 255
            Me.columnProduct_description.MaxLength = 536870910
            Me.columnProduct_class.MaxLength = 50
            Me.columnComp1.MaxLength = 255
            Me.columnWeightRange1.MaxLength = 255
            Me.columnComp2.MaxLength = 255
            Me.columnWeightRange2.MaxLength = 255
            Me.columnComp3.MaxLength = 255
            Me.columnWeightRange3.MaxLength = 255
            Me.columnComp4.MaxLength = 255
            Me.columnWeightRange4.MaxLength = 255
            Me.columnComp5.MaxLength = 255
            Me.columnWeightRange5.MaxLength = 255
            Me.columnComp6.MaxLength = 255
            Me.columnWeightRange6.MaxLength = 255
            Me.columnpH.MaxLength = 255
            Me.columnSpecific_gravity.MaxLength = 255
            Me.columnBoiling_point.MaxLength = 255
            Me.columnFreezing_point.MaxLength = 255
            Me.columnSolubility.MaxLength = 255
            Me.columnVapor_density.MaxLength = 255
            Me.columnVapor_pressure.MaxLength = 255
            Me.columnAppearance.MaxLength = 255
            Me.columnOdor.MaxLength = 255
            Me.columnFlash_point.MaxLength = 255
            Me.columnExplosive_limits.MaxLength = 255
            Me.columnAutoignition_temperature.MaxLength = 255
            Me.columnEPA_number.MaxLength = 255
            Me.columnDecomposition_temperature.MaxLength = 255
            Me.columnProduct_RQ.MaxLength = 255
            Me.columnOdor_threshold.MaxLength = 255
            Me.columnEvaporation_rate.MaxLength = 255
            Me.columnPartition_coefficient.MaxLength = 255
            Me.columnVOC_content.MaxLength = 255
            Me.columnViscosity.MaxLength = 255
            Me.columnHMIS.MaxLength = 255
            Me.columnNFPA.MaxLength = 255
            Me.columnCAS1.MaxLength = 255
            Me.columnCAS2.MaxLength = 255
            Me.columnCAS3.MaxLength = 255
            Me.columnCAS4.MaxLength = 255
            Me.columnCAS5.MaxLength = 255
            Me.columnCAS6.MaxLength = 255
            Me.columnOSHA_PEL1.MaxLength = 255
            Me.columnOSHA_PEL2.MaxLength = 255
            Me.columnOSHA_PEL3.MaxLength = 255
            Me.columnOSHA_PEL4.MaxLength = 255
            Me.columnOSHA_PEL5.MaxLength = 255
            Me.columnOSHA_PEL6.MaxLength = 255
            Me.columnACGIH_TLV1.MaxLength = 255
            Me.columnACGIH_TLV2.MaxLength = 255
            Me.columnACGIH_TLV3.MaxLength = 255
            Me.columnACGIH_TLV4.MaxLength = 255
            Me.columnACGIH_TLV5.MaxLength = 255
            Me.columnACGIH_TLV6.MaxLength = 255
            Me.columnHealth2.MaxLength = 255
            Me.columnPhysical2.MaxLength = 255
            Me.columnEnvironmental2.MaxLength = 255
            Me.columnClones.MaxLength = 255
            Me.columnNote.MaxLength = 536870910
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function NewProduct_LogRow() As Product_LogRow
            Return CType(Me.NewRow,Product_LogRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Function NewRowFromBuilder(ByVal builder As Global.System.Data.DataRowBuilder) As Global.System.Data.DataRow
            Return New Product_LogRow(builder)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Function GetRowType() As Global.System.Type
            Return GetType(Product_LogRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Sub OnRowChanged(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanged(e)
            If (Not (Me.Product_LogRowChangedEvent) Is Nothing) Then
                RaiseEvent Product_LogRowChanged(Me, New Product_LogRowChangeEvent(CType(e.Row,Product_LogRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Sub OnRowChanging(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanging(e)
            If (Not (Me.Product_LogRowChangingEvent) Is Nothing) Then
                RaiseEvent Product_LogRowChanging(Me, New Product_LogRowChangeEvent(CType(e.Row,Product_LogRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Sub OnRowDeleted(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleted(e)
            If (Not (Me.Product_LogRowDeletedEvent) Is Nothing) Then
                RaiseEvent Product_LogRowDeleted(Me, New Product_LogRowChangeEvent(CType(e.Row,Product_LogRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Sub OnRowDeleting(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleting(e)
            If (Not (Me.Product_LogRowDeletingEvent) Is Nothing) Then
                RaiseEvent Product_LogRowDeleting(Me, New Product_LogRowChangeEvent(CType(e.Row,Product_LogRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub RemoveProduct_LogRow(ByVal row As Product_LogRow)
            Me.Rows.Remove(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Shared Function GetTypedTableSchema(ByVal xs As Global.System.Xml.Schema.XmlSchemaSet) As Global.System.Xml.Schema.XmlSchemaComplexType
            Dim type As Global.System.Xml.Schema.XmlSchemaComplexType = New Global.System.Xml.Schema.XmlSchemaComplexType()
            Dim sequence As Global.System.Xml.Schema.XmlSchemaSequence = New Global.System.Xml.Schema.XmlSchemaSequence()
            Dim ds As Dossier = New Dossier()
            Dim any1 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
            any1.Namespace = "http://www.w3.org/2001/XMLSchema"
            any1.MinOccurs = New Decimal(0)
            any1.MaxOccurs = Decimal.MaxValue
            any1.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any1)
            Dim any2 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
            any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1"
            any2.MinOccurs = New Decimal(1)
            any2.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any2)
            Dim attribute1 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute()
            attribute1.Name = "namespace"
            attribute1.FixedValue = ds.Namespace
            type.Attributes.Add(attribute1)
            Dim attribute2 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute()
            attribute2.Name = "tableTypeName"
            attribute2.FixedValue = "Product_LogDataTable"
            type.Attributes.Add(attribute2)
            type.Particle = sequence
            Dim dsSchema As Global.System.Xml.Schema.XmlSchema = ds.GetSchemaSerializable
            If xs.Contains(dsSchema.TargetNamespace) Then
                Dim s1 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
                Dim s2 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
                Try 
                    Dim schema As Global.System.Xml.Schema.XmlSchema = Nothing
                    dsSchema.Write(s1)
                    Dim schemas As Global.System.Collections.IEnumerator = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator
                    Do While schemas.MoveNext
                        schema = CType(schemas.Current,Global.System.Xml.Schema.XmlSchema)
                        s2.SetLength(0)
                        schema.Write(s2)
                        If (s1.Length = s2.Length) Then
                            s1.Position = 0
                            s2.Position = 0
                            
                            Do While ((s1.Position <> s1.Length)  _
                                        AndAlso (s1.ReadByte = s2.ReadByte))
                                
                                
                            Loop
                            If (s1.Position = s1.Length) Then
                                Return type
                            End If
                        End If
                        
                    Loop
                Finally
                    If (Not (s1) Is Nothing) Then
                        s1.Close
                    End If
                    If (Not (s2) Is Nothing) Then
                        s2.Close
                    End If
                End Try
            End If
            xs.Add(dsSchema)
            Return type
        End Function
    End Class
    
    '''<summary>
    '''Represents the strongly named DataTable class.
    '''</summary>
    <Global.System.Serializable(),  _
     Global.System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")>  _
    Partial Public Class Safety_DanceDataTable
        Inherits Global.System.Data.TypedTableBase(Of Safety_DanceRow)
        
        Private columnSDID As Global.System.Data.DataColumn
        
        Private columnDOTContains As Global.System.Data.DataColumn
        
        Private columnUN_number As Global.System.Data.DataColumn
        
        Private columnProper_shipping_name As Global.System.Data.DataColumn
        
        Private columnPrimary_haz As Global.System.Data.DataColumn
        
        Private columnSecondary_haz As Global.System.Data.DataColumn
        
        Private columnPacking_group As Global.System.Data.DataColumn
        
        Private columnDOT As Global.System.Data.DataColumn
        
        Private columnDOT_label As Global.System.Data.DataColumn
        
        Private columnHazard_classification As Global.System.Data.DataColumn
        
        Private columnfucky As Global.System.Data.DataColumn
        
        Private columnSignal_word As Global.System.Data.DataColumn
        
        Private columnHazard_statement As Global.System.Data.DataColumn
        
        Private columnPict1 As Global.System.Data.DataColumn
        
        Private columnPict2 As Global.System.Data.DataColumn
        
        Private columnPict3 As Global.System.Data.DataColumn
        
        Private columnPict4 As Global.System.Data.DataColumn
        
        Private columnPict5 As Global.System.Data.DataColumn
        
        Private columnPre_prevention As Global.System.Data.DataColumn
        
        Private columnPre_response As Global.System.Data.DataColumn
        
        Private columnPre_storage As Global.System.Data.DataColumn
        
        Private columnPre_disposal As Global.System.Data.DataColumn
        
        Private columnFA_eye_contact As Global.System.Data.DataColumn
        
        Private columnFA_skin_contact As Global.System.Data.DataColumn
        
        Private columnFA_ingestion As Global.System.Data.DataColumn
        
        Private columnFA_inhalation As Global.System.Data.DataColumn
        
        Private columnNote_to_HCP As Global.System.Data.DataColumn
        
        Private columnSuitable_extinguishing_media As Global.System.Data.DataColumn
        
        Private columnUnsuitable_extinguishing_media As Global.System.Data.DataColumn
        
        Private columnPrecautions_for_firefighters As Global.System.Data.DataColumn
        
        Private columnSpecific_hazards As Global.System.Data.DataColumn
        
        Private columnHazardous_combustion_products As Global.System.Data.DataColumn
        
        Private columnPersonal_precautions As Global.System.Data.DataColumn
        
        Private columnSmall_spills As Global.System.Data.DataColumn
        
        Private columnLarge_spills As Global.System.Data.DataColumn
        
        Private columnAdvice_on_safe_handling As Global.System.Data.DataColumn
        
        Private columnStorage_conditions As Global.System.Data.DataColumn
        
        Private columnSuitable_materials_of_construction As Global.System.Data.DataColumn
        
        Private columnUnsuitable_materials_of_construction As Global.System.Data.DataColumn
        
        Private columnEye_face_protection As Global.System.Data.DataColumn
        
        Private columnSkin_protection As Global.System.Data.DataColumn
        
        Private columnRespiratory_protection As Global.System.Data.DataColumn
        
        Private columnEngineering_controls As Global.System.Data.DataColumn
        
        Private columnGeneral_hygiene_considerations As Global.System.Data.DataColumn
        
        Private columnChemical_stability As Global.System.Data.DataColumn
        
        Private columnHazardous_polymerization As Global.System.Data.DataColumn
        
        Private columnConditions_to_avoid As Global.System.Data.DataColumn
        
        Private columnIncompatibilities As Global.System.Data.DataColumn
        
        Private columnHazardous_decomposition_products As Global.System.Data.DataColumn
        
        Private columnLikely_routes_of_exposure As Global.System.Data.DataColumn
        
        Private columnEye_contact As Global.System.Data.DataColumn
        
        Private columnSkin_contact As Global.System.Data.DataColumn
        
        Private columnIngestion As Global.System.Data.DataColumn
        
        Private columnInhalation As Global.System.Data.DataColumn
        
        Private columnReproductive_effects As Global.System.Data.DataColumn
        
        Private columnTeratogenicity As Global.System.Data.DataColumn
        
        Private columnMutagenicity As Global.System.Data.DataColumn
        
        Private columnEmbryotoxicity As Global.System.Data.DataColumn
        
        Private columnSensitization_to_product As Global.System.Data.DataColumn
        
        Private columnSynergistic_products As Global.System.Data.DataColumn
        
        Private columnCarcinogenicity As Global.System.Data.DataColumn
        
        Private columnChronic As Global.System.Data.DataColumn
        
        Private columnPersistence As Global.System.Data.DataColumn
        
        Private columnBioaccumulative_potential As Global.System.Data.DataColumn
        
        Private columnMobility As Global.System.Data.DataColumn
        
        Private columnDisposal As Global.System.Data.DataColumn
        
        Private columnRCRA_status As Global.System.Data.DataColumn
        
        Private columnTSCA As Global.System.Data.DataColumn
        
        Private columnSARA311I As Global.System.Data.DataColumn
        
        Private columnSARA311D As Global.System.Data.DataColumn
        
        Private columnSARA311F As Global.System.Data.DataColumn
        
        Private columnSARA311P As Global.System.Data.DataColumn
        
        Private columnSARA311R As Global.System.Data.DataColumn
        
        Private columnHMISH As Global.System.Data.DataColumn
        
        Private columnHMISF As Global.System.Data.DataColumn
        
        Private columnHMISR As Global.System.Data.DataColumn
        
        Private columnHMISS As Global.System.Data.DataColumn
        
        Private columnNFPAH As Global.System.Data.DataColumn
        
        Private columnNFPAF As Global.System.Data.DataColumn
        
        Private columnNFPAR As Global.System.Data.DataColumn
        
        Private columnNFPAS As Global.System.Data.DataColumn
        
        Private columnFA_Eye_Contact_code As Global.System.Data.DataColumn
        
        Private columnFA_skin_contact_code As Global.System.Data.DataColumn
        
        Private columnFA_inhalation_code As Global.System.Data.DataColumn
        
        Private columnFA_ingestion_code As Global.System.Data.DataColumn
        
        Private columnNote_to_hcp_code As Global.System.Data.DataColumn
        
        Private columnSuitable_extinguishing_media_code As Global.System.Data.DataColumn
        
        Private columnUnsuitable_extinguishing_media_code As Global.System.Data.DataColumn
        
        Private columnPrecautions_for_firefighters_code As Global.System.Data.DataColumn
        
        Private columnSpecific_hazards_code As Global.System.Data.DataColumn
        
        Private columnHazardous_combustion_products_code As Global.System.Data.DataColumn
        
        Private columnPersonal_precautions_code As Global.System.Data.DataColumn
        
        Private columnSmall_spills_code As Global.System.Data.DataColumn
        
        Private columnLarge_spills_code As Global.System.Data.DataColumn
        
        Private columnAdvice_on_safe_handling_code As Global.System.Data.DataColumn
        
        Private columnStorage_conditions_code As Global.System.Data.DataColumn
        
        Private columnSuitable_materials_of_construction_code As Global.System.Data.DataColumn
        
        Private columnUnsuitable_materials_of_construction_code As Global.System.Data.DataColumn
        
        Private columnEye_face_protection_code As Global.System.Data.DataColumn
        
        Private columnSkin_protection_code As Global.System.Data.DataColumn
        
        Private columnRespiratory_protection_code As Global.System.Data.DataColumn
        
        Private columnEngineering_controls_code As Global.System.Data.DataColumn
        
        Private columnGeneral_hygiene_considerations_code As Global.System.Data.DataColumn
        
        Private columnChemical_stability_code As Global.System.Data.DataColumn
        
        Private columnHazardous_polymerization_code As Global.System.Data.DataColumn
        
        Private columnConditions_to_avoid_code As Global.System.Data.DataColumn
        
        Private columnIncompatibilities_code As Global.System.Data.DataColumn
        
        Private columnHazardous_decomposition_products_code As Global.System.Data.DataColumn
        
        Private columnLikely_routes_of_exposure_code As Global.System.Data.DataColumn
        
        Private columnSkin_contact_code As Global.System.Data.DataColumn
        
        Private columnIngestion_code As Global.System.Data.DataColumn
        
        Private columnInhalation_code As Global.System.Data.DataColumn
        
        Private columnReproductive_effects_code As Global.System.Data.DataColumn
        
        Private columnTeratogenicity_code As Global.System.Data.DataColumn
        
        Private columnMutagenicity_code As Global.System.Data.DataColumn
        
        Private columnEmbryotoxicity_code As Global.System.Data.DataColumn
        
        Private columnSensitization_to_product_code As Global.System.Data.DataColumn
        
        Private columnSynergistic_products_code As Global.System.Data.DataColumn
        
        Private columnCarcinogenicity_code As Global.System.Data.DataColumn
        
        Private columnChronic_code As Global.System.Data.DataColumn
        
        Private columnPersistence_code As Global.System.Data.DataColumn
        
        Private columnBioaccumulative_potential_code As Global.System.Data.DataColumn
        
        Private columnMobility_code As Global.System.Data.DataColumn
        
        Private columnDisposal_code As Global.System.Data.DataColumn
        
        Private columnRCRA_status_code As Global.System.Data.DataColumn
        
        Private columnEye_contact_code As Global.System.Data.DataColumn
        
        Private columnTSCA_code As Global.System.Data.DataColumn
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub New()
            MyBase.New
            Me.TableName = "Safety Dance"
            Me.BeginInit
            Me.InitClass
            Me.EndInit
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Sub New(ByVal table As Global.System.Data.DataTable)
            MyBase.New
            Me.TableName = table.TableName
            If (table.CaseSensitive <> table.DataSet.CaseSensitive) Then
                Me.CaseSensitive = table.CaseSensitive
            End If
            If (table.Locale.ToString <> table.DataSet.Locale.ToString) Then
                Me.Locale = table.Locale
            End If
            If (table.Namespace <> table.DataSet.Namespace) Then
                Me.Namespace = table.Namespace
            End If
            Me.Prefix = table.Prefix
            Me.MinimumCapacity = table.MinimumCapacity
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Sub New(ByVal info As Global.System.Runtime.Serialization.SerializationInfo, ByVal context As Global.System.Runtime.Serialization.StreamingContext)
            MyBase.New(info, context)
            Me.InitVars
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property SDIDColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnSDID
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property DOTContainsColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnDOTContains
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property UN_numberColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnUN_number
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property Proper_shipping_nameColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnProper_shipping_name
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property Primary_hazColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnPrimary_haz
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property Secondary_hazColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnSecondary_haz
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property Packing_groupColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnPacking_group
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property DOTColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnDOT
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property DOT_labelColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnDOT_label
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property Hazard_classificationColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnHazard_classification
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property fuckyColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnfucky
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property Signal_wordColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnSignal_word
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property Hazard_statementColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnHazard_statement
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property Pict1Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnPict1
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property Pict2Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnPict2
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property Pict3Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnPict3
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property Pict4Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnPict4
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property Pict5Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnPict5
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property Pre_preventionColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnPre_prevention
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property Pre_responseColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnPre_response
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property Pre_storageColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnPre_storage
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property Pre_disposalColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnPre_disposal
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property FA_eye_contactColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnFA_eye_contact
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property FA_skin_contactColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnFA_skin_contact
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property FA_ingestionColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnFA_ingestion
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property FA_inhalationColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnFA_inhalation
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property Note_to_HCPColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnNote_to_HCP
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property Suitable_extinguishing_mediaColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnSuitable_extinguishing_media
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property Unsuitable_extinguishing_mediaColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnUnsuitable_extinguishing_media
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property Precautions_for_firefightersColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnPrecautions_for_firefighters
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property Specific_hazardsColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnSpecific_hazards
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property Hazardous_combustion_productsColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnHazardous_combustion_products
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property Personal_precautionsColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnPersonal_precautions
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property Small_spillsColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnSmall_spills
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property Large_spillsColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnLarge_spills
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property Advice_on_safe_handlingColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnAdvice_on_safe_handling
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property Storage_conditionsColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnStorage_conditions
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property Suitable_materials_of_constructionColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnSuitable_materials_of_construction
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property Unsuitable_materials_of_constructionColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnUnsuitable_materials_of_construction
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property Eye_face_protectionColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnEye_face_protection
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property Skin_protectionColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnSkin_protection
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property Respiratory_protectionColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnRespiratory_protection
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property Engineering_controlsColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnEngineering_controls
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property General_hygiene_considerationsColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnGeneral_hygiene_considerations
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property Chemical_stabilityColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnChemical_stability
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property Hazardous_polymerizationColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnHazardous_polymerization
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property Conditions_to_avoidColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnConditions_to_avoid
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property IncompatibilitiesColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnIncompatibilities
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property Hazardous_decomposition_productsColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnHazardous_decomposition_products
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property Likely_routes_of_exposureColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnLikely_routes_of_exposure
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property Eye_contactColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnEye_contact
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property Skin_contactColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnSkin_contact
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property IngestionColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnIngestion
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property InhalationColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnInhalation
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property Reproductive_effectsColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnReproductive_effects
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property TeratogenicityColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnTeratogenicity
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property MutagenicityColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnMutagenicity
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property EmbryotoxicityColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnEmbryotoxicity
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property Sensitization_to_productColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnSensitization_to_product
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property Synergistic_productsColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnSynergistic_products
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property CarcinogenicityColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnCarcinogenicity
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property ChronicColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnChronic
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property PersistenceColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnPersistence
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property Bioaccumulative_potentialColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnBioaccumulative_potential
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property MobilityColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnMobility
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property DisposalColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnDisposal
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property RCRA_statusColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnRCRA_status
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property TSCAColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnTSCA
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property SARA311IColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnSARA311I
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property SARA311DColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnSARA311D
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property SARA311FColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnSARA311F
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property SARA311PColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnSARA311P
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property SARA311RColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnSARA311R
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property HMISHColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnHMISH
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property HMISFColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnHMISF
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property HMISRColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnHMISR
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property HMISSColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnHMISS
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property NFPAHColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnNFPAH
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property NFPAFColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnNFPAF
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property NFPARColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnNFPAR
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property NFPASColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnNFPAS
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property FA_Eye_Contact_codeColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnFA_Eye_Contact_code
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property FA_skin_contact_codeColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnFA_skin_contact_code
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property FA_inhalation_codeColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnFA_inhalation_code
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property FA_ingestion_codeColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnFA_ingestion_code
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property Note_to_hcp_codeColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnNote_to_hcp_code
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property Suitable_extinguishing_media_codeColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnSuitable_extinguishing_media_code
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property Unsuitable_extinguishing_media_codeColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnUnsuitable_extinguishing_media_code
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property Precautions_for_firefighters_codeColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnPrecautions_for_firefighters_code
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property Specific_hazards_codeColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnSpecific_hazards_code
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property Hazardous_combustion_products_codeColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnHazardous_combustion_products_code
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property Personal_precautions_codeColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnPersonal_precautions_code
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property Small_spills_codeColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnSmall_spills_code
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property Large_spills_codeColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnLarge_spills_code
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property Advice_on_safe_handling_codeColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnAdvice_on_safe_handling_code
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property Storage_conditions_codeColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnStorage_conditions_code
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property Suitable_materials_of_construction_codeColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnSuitable_materials_of_construction_code
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property Unsuitable_materials_of_construction_codeColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnUnsuitable_materials_of_construction_code
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property Eye_face_protection_codeColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnEye_face_protection_code
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property Skin_protection_codeColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnSkin_protection_code
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property Respiratory_protection_codeColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnRespiratory_protection_code
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property Engineering_controls_codeColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnEngineering_controls_code
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property General_hygiene_considerations_codeColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnGeneral_hygiene_considerations_code
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property Chemical_stability_codeColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnChemical_stability_code
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property Hazardous_polymerization_codeColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnHazardous_polymerization_code
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property Conditions_to_avoid_codeColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnConditions_to_avoid_code
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property Incompatibilities_codeColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnIncompatibilities_code
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property Hazardous_decomposition_products_codeColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnHazardous_decomposition_products_code
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property Likely_routes_of_exposure_codeColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnLikely_routes_of_exposure_code
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property Skin_contact_codeColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnSkin_contact_code
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property Ingestion_codeColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnIngestion_code
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property Inhalation_codeColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnInhalation_code
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property Reproductive_effects_codeColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnReproductive_effects_code
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property Teratogenicity_codeColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnTeratogenicity_code
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property Mutagenicity_codeColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnMutagenicity_code
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property Embryotoxicity_codeColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnEmbryotoxicity_code
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property Sensitization_to_product_codeColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnSensitization_to_product_code
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property Synergistic_products_codeColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnSynergistic_products_code
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property Carcinogenicity_codeColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnCarcinogenicity_code
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property Chronic_codeColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnChronic_code
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property Persistence_codeColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnPersistence_code
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property Bioaccumulative_potential_codeColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnBioaccumulative_potential_code
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property Mobility_codeColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnMobility_code
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property Disposal_codeColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnDisposal_code
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property RCRA_status_codeColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnRCRA_status_code
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property Eye_contact_codeColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnEye_contact_code
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property TSCA_codeColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnTSCA_code
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Browsable(false)>  _
        Public ReadOnly Property Count() As Integer
            Get
                Return Me.Rows.Count
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Default ReadOnly Property Item(ByVal index As Integer) As Safety_DanceRow
            Get
                Return CType(Me.Rows(index),Safety_DanceRow)
            End Get
        End Property
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event Safety_DanceRowChanging As Safety_DanceRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event Safety_DanceRowChanged As Safety_DanceRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event Safety_DanceRowDeleting As Safety_DanceRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event Safety_DanceRowDeleted As Safety_DanceRowChangeEventHandler
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Overloads Sub AddSafety_DanceRow(ByVal row As Safety_DanceRow)
            Me.Rows.Add(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Overloads Function AddSafety_DanceRow( _
                    ByVal SDID As Integer,  _
                    ByVal DOTContains As String,  _
                    ByVal UN_number As String,  _
                    ByVal Proper_shipping_name As String,  _
                    ByVal Primary_haz As String,  _
                    ByVal Secondary_haz As String,  _
                    ByVal Packing_group As String,  _
                    ByVal DOT As String,  _
                    ByVal DOT_label As String,  _
                    ByVal Hazard_classification As String,  _
                    ByVal fucky As String,  _
                    ByVal Signal_word As String,  _
                    ByVal Hazard_statement As String,  _
                    ByVal Pict1 As String,  _
                    ByVal Pict2 As String,  _
                    ByVal Pict3 As String,  _
                    ByVal Pict4 As String,  _
                    ByVal Pict5 As String,  _
                    ByVal Pre_prevention As String,  _
                    ByVal Pre_response As String,  _
                    ByVal Pre_storage As String,  _
                    ByVal Pre_disposal As String,  _
                    ByVal FA_eye_contact As String,  _
                    ByVal FA_skin_contact As String,  _
                    ByVal FA_ingestion As String,  _
                    ByVal FA_inhalation As String,  _
                    ByVal Note_to_HCP As String,  _
                    ByVal Suitable_extinguishing_media As String,  _
                    ByVal Unsuitable_extinguishing_media As String,  _
                    ByVal Precautions_for_firefighters As String,  _
                    ByVal Specific_hazards As String,  _
                    ByVal Hazardous_combustion_products As String,  _
                    ByVal Personal_precautions As String,  _
                    ByVal Small_spills As String,  _
                    ByVal Large_spills As String,  _
                    ByVal Advice_on_safe_handling As String,  _
                    ByVal Storage_conditions As String,  _
                    ByVal Suitable_materials_of_construction As String,  _
                    ByVal Unsuitable_materials_of_construction As String,  _
                    ByVal Eye_face_protection As String,  _
                    ByVal Skin_protection As String,  _
                    ByVal Respiratory_protection As String,  _
                    ByVal Engineering_controls As String,  _
                    ByVal General_hygiene_considerations As String,  _
                    ByVal Chemical_stability As String,  _
                    ByVal Hazardous_polymerization As String,  _
                    ByVal Conditions_to_avoid As String,  _
                    ByVal Incompatibilities As String,  _
                    ByVal Hazardous_decomposition_products As String,  _
                    ByVal Likely_routes_of_exposure As String,  _
                    ByVal Eye_contact As String,  _
                    ByVal Skin_contact As String,  _
                    ByVal Ingestion As String,  _
                    ByVal Inhalation As String,  _
                    ByVal Reproductive_effects As String,  _
                    ByVal Teratogenicity As String,  _
                    ByVal Mutagenicity As String,  _
                    ByVal Embryotoxicity As String,  _
                    ByVal Sensitization_to_product As String,  _
                    ByVal Synergistic_products As String,  _
                    ByVal Carcinogenicity As String,  _
                    ByVal Chronic As String,  _
                    ByVal Persistence As String,  _
                    ByVal Bioaccumulative_potential As String,  _
                    ByVal Mobility As String,  _
                    ByVal Disposal As String,  _
                    ByVal RCRA_status As String,  _
                    ByVal TSCA As String,  _
                    ByVal SARA311I As Boolean,  _
                    ByVal SARA311D As Boolean,  _
                    ByVal SARA311F As Boolean,  _
                    ByVal SARA311P As Boolean,  _
                    ByVal SARA311R As Boolean,  _
                    ByVal HMISH As String,  _
                    ByVal HMISF As String,  _
                    ByVal HMISR As String,  _
                    ByVal HMISS As String,  _
                    ByVal NFPAH As String,  _
                    ByVal NFPAF As String,  _
                    ByVal NFPAR As String,  _
                    ByVal NFPAS As String,  _
                    ByVal FA_Eye_Contact_code As Integer,  _
                    ByVal FA_skin_contact_code As Integer,  _
                    ByVal FA_inhalation_code As Integer,  _
                    ByVal FA_ingestion_code As Integer,  _
                    ByVal Note_to_hcp_code As Integer,  _
                    ByVal Suitable_extinguishing_media_code As Integer,  _
                    ByVal Unsuitable_extinguishing_media_code As Integer,  _
                    ByVal Precautions_for_firefighters_code As Integer,  _
                    ByVal Specific_hazards_code As Integer,  _
                    ByVal Hazardous_combustion_products_code As Integer,  _
                    ByVal Personal_precautions_code As Integer,  _
                    ByVal Small_spills_code As Integer,  _
                    ByVal Large_spills_code As Integer,  _
                    ByVal Advice_on_safe_handling_code As Integer,  _
                    ByVal Storage_conditions_code As Integer,  _
                    ByVal Suitable_materials_of_construction_code As Integer,  _
                    ByVal Unsuitable_materials_of_construction_code As Integer,  _
                    ByVal Eye_face_protection_code As Integer,  _
                    ByVal Skin_protection_code As Integer,  _
                    ByVal Respiratory_protection_code As Integer,  _
                    ByVal Engineering_controls_code As Integer,  _
                    ByVal General_hygiene_considerations_code As Integer,  _
                    ByVal Chemical_stability_code As Integer,  _
                    ByVal Hazardous_polymerization_code As Integer,  _
                    ByVal Conditions_to_avoid_code As Integer,  _
                    ByVal Incompatibilities_code As Integer,  _
                    ByVal Hazardous_decomposition_products_code As Integer,  _
                    ByVal Likely_routes_of_exposure_code As Integer,  _
                    ByVal Skin_contact_code As Integer,  _
                    ByVal Ingestion_code As Integer,  _
                    ByVal Inhalation_code As Integer,  _
                    ByVal Reproductive_effects_code As Integer,  _
                    ByVal Teratogenicity_code As Integer,  _
                    ByVal Mutagenicity_code As Integer,  _
                    ByVal Embryotoxicity_code As Integer,  _
                    ByVal Sensitization_to_product_code As Integer,  _
                    ByVal Synergistic_products_code As Integer,  _
                    ByVal Carcinogenicity_code As Integer,  _
                    ByVal Chronic_code As Integer,  _
                    ByVal Persistence_code As Integer,  _
                    ByVal Bioaccumulative_potential_code As Integer,  _
                    ByVal Mobility_code As Integer,  _
                    ByVal Disposal_code As Integer,  _
                    ByVal RCRA_status_code As Integer,  _
                    ByVal Eye_contact_code As Integer,  _
                    ByVal TSCA_code As Integer) As Safety_DanceRow
            Dim rowSafety_DanceRow As Safety_DanceRow = CType(Me.NewRow,Safety_DanceRow)
            Dim columnValuesArray() As Object = New Object() {SDID, DOTContains, UN_number, Proper_shipping_name, Primary_haz, Secondary_haz, Packing_group, DOT, DOT_label, Hazard_classification, fucky, Signal_word, Hazard_statement, Pict1, Pict2, Pict3, Pict4, Pict5, Pre_prevention, Pre_response, Pre_storage, Pre_disposal, FA_eye_contact, FA_skin_contact, FA_ingestion, FA_inhalation, Note_to_HCP, Suitable_extinguishing_media, Unsuitable_extinguishing_media, Precautions_for_firefighters, Specific_hazards, Hazardous_combustion_products, Personal_precautions, Small_spills, Large_spills, Advice_on_safe_handling, Storage_conditions, Suitable_materials_of_construction, Unsuitable_materials_of_construction, Eye_face_protection, Skin_protection, Respiratory_protection, Engineering_controls, General_hygiene_considerations, Chemical_stability, Hazardous_polymerization, Conditions_to_avoid, Incompatibilities, Hazardous_decomposition_products, Likely_routes_of_exposure, Eye_contact, Skin_contact, Ingestion, Inhalation, Reproductive_effects, Teratogenicity, Mutagenicity, Embryotoxicity, Sensitization_to_product, Synergistic_products, Carcinogenicity, Chronic, Persistence, Bioaccumulative_potential, Mobility, Disposal, RCRA_status, TSCA, SARA311I, SARA311D, SARA311F, SARA311P, SARA311R, HMISH, HMISF, HMISR, HMISS, NFPAH, NFPAF, NFPAR, NFPAS, FA_Eye_Contact_code, FA_skin_contact_code, FA_inhalation_code, FA_ingestion_code, Note_to_hcp_code, Suitable_extinguishing_media_code, Unsuitable_extinguishing_media_code, Precautions_for_firefighters_code, Specific_hazards_code, Hazardous_combustion_products_code, Personal_precautions_code, Small_spills_code, Large_spills_code, Advice_on_safe_handling_code, Storage_conditions_code, Suitable_materials_of_construction_code, Unsuitable_materials_of_construction_code, Eye_face_protection_code, Skin_protection_code, Respiratory_protection_code, Engineering_controls_code, General_hygiene_considerations_code, Chemical_stability_code, Hazardous_polymerization_code, Conditions_to_avoid_code, Incompatibilities_code, Hazardous_decomposition_products_code, Likely_routes_of_exposure_code, Skin_contact_code, Ingestion_code, Inhalation_code, Reproductive_effects_code, Teratogenicity_code, Mutagenicity_code, Embryotoxicity_code, Sensitization_to_product_code, Synergistic_products_code, Carcinogenicity_code, Chronic_code, Persistence_code, Bioaccumulative_potential_code, Mobility_code, Disposal_code, RCRA_status_code, Eye_contact_code, TSCA_code}
            rowSafety_DanceRow.ItemArray = columnValuesArray
            Me.Rows.Add(rowSafety_DanceRow)
            Return rowSafety_DanceRow
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Overrides Function Clone() As Global.System.Data.DataTable
            Dim cln As Safety_DanceDataTable = CType(MyBase.Clone,Safety_DanceDataTable)
            cln.InitVars
            Return cln
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Function CreateInstance() As Global.System.Data.DataTable
            Return New Safety_DanceDataTable()
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Sub InitVars()
            Me.columnSDID = MyBase.Columns("SDID")
            Me.columnDOTContains = MyBase.Columns("DOTContains")
            Me.columnUN_number = MyBase.Columns("UN_number")
            Me.columnProper_shipping_name = MyBase.Columns("Proper_shipping_name")
            Me.columnPrimary_haz = MyBase.Columns("Primary_haz")
            Me.columnSecondary_haz = MyBase.Columns("Secondary_haz")
            Me.columnPacking_group = MyBase.Columns("Packing_group")
            Me.columnDOT = MyBase.Columns("DOT")
            Me.columnDOT_label = MyBase.Columns("DOT_label")
            Me.columnHazard_classification = MyBase.Columns("Hazard_classification")
            Me.columnfucky = MyBase.Columns("fucky")
            Me.columnSignal_word = MyBase.Columns("Signal_word")
            Me.columnHazard_statement = MyBase.Columns("Hazard_statement")
            Me.columnPict1 = MyBase.Columns("Pict1")
            Me.columnPict2 = MyBase.Columns("Pict2")
            Me.columnPict3 = MyBase.Columns("Pict3")
            Me.columnPict4 = MyBase.Columns("Pict4")
            Me.columnPict5 = MyBase.Columns("Pict5")
            Me.columnPre_prevention = MyBase.Columns("Pre_prevention")
            Me.columnPre_response = MyBase.Columns("Pre_response")
            Me.columnPre_storage = MyBase.Columns("Pre_storage")
            Me.columnPre_disposal = MyBase.Columns("Pre_disposal")
            Me.columnFA_eye_contact = MyBase.Columns("FA_eye_contact")
            Me.columnFA_skin_contact = MyBase.Columns("FA_skin_contact")
            Me.columnFA_ingestion = MyBase.Columns("FA_ingestion")
            Me.columnFA_inhalation = MyBase.Columns("FA_inhalation")
            Me.columnNote_to_HCP = MyBase.Columns("Note_to_HCP")
            Me.columnSuitable_extinguishing_media = MyBase.Columns("Suitable_extinguishing_media")
            Me.columnUnsuitable_extinguishing_media = MyBase.Columns("Unsuitable_extinguishing_media")
            Me.columnPrecautions_for_firefighters = MyBase.Columns("Precautions_for_firefighters")
            Me.columnSpecific_hazards = MyBase.Columns("Specific_hazards")
            Me.columnHazardous_combustion_products = MyBase.Columns("Hazardous_combustion_products")
            Me.columnPersonal_precautions = MyBase.Columns("Personal_precautions")
            Me.columnSmall_spills = MyBase.Columns("Small_spills")
            Me.columnLarge_spills = MyBase.Columns("Large_spills")
            Me.columnAdvice_on_safe_handling = MyBase.Columns("Advice_on_safe_handling")
            Me.columnStorage_conditions = MyBase.Columns("Storage_conditions")
            Me.columnSuitable_materials_of_construction = MyBase.Columns("Suitable_materials_of_construction")
            Me.columnUnsuitable_materials_of_construction = MyBase.Columns("Unsuitable_materials_of_construction")
            Me.columnEye_face_protection = MyBase.Columns("Eye_face_protection")
            Me.columnSkin_protection = MyBase.Columns("Skin_protection")
            Me.columnRespiratory_protection = MyBase.Columns("Respiratory_protection")
            Me.columnEngineering_controls = MyBase.Columns("Engineering_controls")
            Me.columnGeneral_hygiene_considerations = MyBase.Columns("General_hygiene_considerations")
            Me.columnChemical_stability = MyBase.Columns("Chemical_stability")
            Me.columnHazardous_polymerization = MyBase.Columns("Hazardous_polymerization")
            Me.columnConditions_to_avoid = MyBase.Columns("Conditions_to_avoid")
            Me.columnIncompatibilities = MyBase.Columns("Incompatibilities")
            Me.columnHazardous_decomposition_products = MyBase.Columns("Hazardous_decomposition_products")
            Me.columnLikely_routes_of_exposure = MyBase.Columns("Likely_routes_of_exposure")
            Me.columnEye_contact = MyBase.Columns("Eye_contact")
            Me.columnSkin_contact = MyBase.Columns("Skin_contact")
            Me.columnIngestion = MyBase.Columns("Ingestion")
            Me.columnInhalation = MyBase.Columns("Inhalation")
            Me.columnReproductive_effects = MyBase.Columns("Reproductive_effects")
            Me.columnTeratogenicity = MyBase.Columns("Teratogenicity")
            Me.columnMutagenicity = MyBase.Columns("Mutagenicity")
            Me.columnEmbryotoxicity = MyBase.Columns("Embryotoxicity")
            Me.columnSensitization_to_product = MyBase.Columns("Sensitization_to_product")
            Me.columnSynergistic_products = MyBase.Columns("Synergistic_products")
            Me.columnCarcinogenicity = MyBase.Columns("Carcinogenicity")
            Me.columnChronic = MyBase.Columns("Chronic")
            Me.columnPersistence = MyBase.Columns("Persistence")
            Me.columnBioaccumulative_potential = MyBase.Columns("Bioaccumulative_potential")
            Me.columnMobility = MyBase.Columns("Mobility")
            Me.columnDisposal = MyBase.Columns("Disposal")
            Me.columnRCRA_status = MyBase.Columns("RCRA_status")
            Me.columnTSCA = MyBase.Columns("TSCA")
            Me.columnSARA311I = MyBase.Columns("SARA311I")
            Me.columnSARA311D = MyBase.Columns("SARA311D")
            Me.columnSARA311F = MyBase.Columns("SARA311F")
            Me.columnSARA311P = MyBase.Columns("SARA311P")
            Me.columnSARA311R = MyBase.Columns("SARA311R")
            Me.columnHMISH = MyBase.Columns("HMISH")
            Me.columnHMISF = MyBase.Columns("HMISF")
            Me.columnHMISR = MyBase.Columns("HMISR")
            Me.columnHMISS = MyBase.Columns("HMISS")
            Me.columnNFPAH = MyBase.Columns("NFPAH")
            Me.columnNFPAF = MyBase.Columns("NFPAF")
            Me.columnNFPAR = MyBase.Columns("NFPAR")
            Me.columnNFPAS = MyBase.Columns("NFPAS")
            Me.columnFA_Eye_Contact_code = MyBase.Columns("FA_Eye_Contact_code")
            Me.columnFA_skin_contact_code = MyBase.Columns("FA_skin_contact_code")
            Me.columnFA_inhalation_code = MyBase.Columns("FA_inhalation_code")
            Me.columnFA_ingestion_code = MyBase.Columns("FA_ingestion_code")
            Me.columnNote_to_hcp_code = MyBase.Columns("Note_to_hcp_code")
            Me.columnSuitable_extinguishing_media_code = MyBase.Columns("Suitable_extinguishing_media_code")
            Me.columnUnsuitable_extinguishing_media_code = MyBase.Columns("Unsuitable_extinguishing_media_code")
            Me.columnPrecautions_for_firefighters_code = MyBase.Columns("Precautions_for_firefighters_code")
            Me.columnSpecific_hazards_code = MyBase.Columns("Specific_hazards_code")
            Me.columnHazardous_combustion_products_code = MyBase.Columns("Hazardous_combustion_products_code")
            Me.columnPersonal_precautions_code = MyBase.Columns("Personal_precautions_code")
            Me.columnSmall_spills_code = MyBase.Columns("Small_spills_code")
            Me.columnLarge_spills_code = MyBase.Columns("Large_spills_code")
            Me.columnAdvice_on_safe_handling_code = MyBase.Columns("Advice_on_safe_handling_code")
            Me.columnStorage_conditions_code = MyBase.Columns("Storage_conditions_code")
            Me.columnSuitable_materials_of_construction_code = MyBase.Columns("Suitable_materials_of_construction_code")
            Me.columnUnsuitable_materials_of_construction_code = MyBase.Columns("Unsuitable_materials_of_construction_code")
            Me.columnEye_face_protection_code = MyBase.Columns("Eye_face_protection_code")
            Me.columnSkin_protection_code = MyBase.Columns("Skin_protection_code")
            Me.columnRespiratory_protection_code = MyBase.Columns("Respiratory_protection_code")
            Me.columnEngineering_controls_code = MyBase.Columns("Engineering_controls_code")
            Me.columnGeneral_hygiene_considerations_code = MyBase.Columns("General_hygiene_considerations_code")
            Me.columnChemical_stability_code = MyBase.Columns("Chemical_stability_code")
            Me.columnHazardous_polymerization_code = MyBase.Columns("Hazardous_polymerization_code")
            Me.columnConditions_to_avoid_code = MyBase.Columns("Conditions_to_avoid_code")
            Me.columnIncompatibilities_code = MyBase.Columns("Incompatibilities_code")
            Me.columnHazardous_decomposition_products_code = MyBase.Columns("Hazardous_decomposition_products_code")
            Me.columnLikely_routes_of_exposure_code = MyBase.Columns("Likely_routes_of_exposure_code")
            Me.columnSkin_contact_code = MyBase.Columns("Skin_contact_code")
            Me.columnIngestion_code = MyBase.Columns("Ingestion_code")
            Me.columnInhalation_code = MyBase.Columns("Inhalation_code")
            Me.columnReproductive_effects_code = MyBase.Columns("Reproductive_effects_code")
            Me.columnTeratogenicity_code = MyBase.Columns("Teratogenicity_code")
            Me.columnMutagenicity_code = MyBase.Columns("Mutagenicity_code")
            Me.columnEmbryotoxicity_code = MyBase.Columns("Embryotoxicity_code")
            Me.columnSensitization_to_product_code = MyBase.Columns("Sensitization_to_product_code")
            Me.columnSynergistic_products_code = MyBase.Columns("Synergistic_products_code")
            Me.columnCarcinogenicity_code = MyBase.Columns("Carcinogenicity_code")
            Me.columnChronic_code = MyBase.Columns("Chronic_code")
            Me.columnPersistence_code = MyBase.Columns("Persistence_code")
            Me.columnBioaccumulative_potential_code = MyBase.Columns("Bioaccumulative_potential_code")
            Me.columnMobility_code = MyBase.Columns("Mobility_code")
            Me.columnDisposal_code = MyBase.Columns("Disposal_code")
            Me.columnRCRA_status_code = MyBase.Columns("RCRA_status_code")
            Me.columnEye_contact_code = MyBase.Columns("Eye_contact_code")
            Me.columnTSCA_code = MyBase.Columns("TSCA_code")
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Private Sub InitClass()
            Me.columnSDID = New Global.System.Data.DataColumn("SDID", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnSDID)
            Me.columnDOTContains = New Global.System.Data.DataColumn("DOTContains", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnDOTContains)
            Me.columnUN_number = New Global.System.Data.DataColumn("UN_number", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnUN_number)
            Me.columnProper_shipping_name = New Global.System.Data.DataColumn("Proper_shipping_name", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnProper_shipping_name)
            Me.columnPrimary_haz = New Global.System.Data.DataColumn("Primary_haz", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnPrimary_haz)
            Me.columnSecondary_haz = New Global.System.Data.DataColumn("Secondary_haz", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnSecondary_haz)
            Me.columnPacking_group = New Global.System.Data.DataColumn("Packing_group", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnPacking_group)
            Me.columnDOT = New Global.System.Data.DataColumn("DOT", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnDOT)
            Me.columnDOT_label = New Global.System.Data.DataColumn("DOT_label", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnDOT_label)
            Me.columnHazard_classification = New Global.System.Data.DataColumn("Hazard_classification", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnHazard_classification)
            Me.columnfucky = New Global.System.Data.DataColumn("fucky", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnfucky)
            Me.columnSignal_word = New Global.System.Data.DataColumn("Signal_word", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnSignal_word)
            Me.columnHazard_statement = New Global.System.Data.DataColumn("Hazard_statement", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnHazard_statement)
            Me.columnPict1 = New Global.System.Data.DataColumn("Pict1", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnPict1)
            Me.columnPict2 = New Global.System.Data.DataColumn("Pict2", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnPict2)
            Me.columnPict3 = New Global.System.Data.DataColumn("Pict3", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnPict3)
            Me.columnPict4 = New Global.System.Data.DataColumn("Pict4", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnPict4)
            Me.columnPict5 = New Global.System.Data.DataColumn("Pict5", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnPict5)
            Me.columnPre_prevention = New Global.System.Data.DataColumn("Pre_prevention", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnPre_prevention)
            Me.columnPre_response = New Global.System.Data.DataColumn("Pre_response", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnPre_response)
            Me.columnPre_storage = New Global.System.Data.DataColumn("Pre_storage", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnPre_storage)
            Me.columnPre_disposal = New Global.System.Data.DataColumn("Pre_disposal", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnPre_disposal)
            Me.columnFA_eye_contact = New Global.System.Data.DataColumn("FA_eye_contact", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnFA_eye_contact)
            Me.columnFA_skin_contact = New Global.System.Data.DataColumn("FA_skin_contact", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnFA_skin_contact)
            Me.columnFA_ingestion = New Global.System.Data.DataColumn("FA_ingestion", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnFA_ingestion)
            Me.columnFA_inhalation = New Global.System.Data.DataColumn("FA_inhalation", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnFA_inhalation)
            Me.columnNote_to_HCP = New Global.System.Data.DataColumn("Note_to_HCP", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnNote_to_HCP)
            Me.columnSuitable_extinguishing_media = New Global.System.Data.DataColumn("Suitable_extinguishing_media", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnSuitable_extinguishing_media)
            Me.columnUnsuitable_extinguishing_media = New Global.System.Data.DataColumn("Unsuitable_extinguishing_media", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnUnsuitable_extinguishing_media)
            Me.columnPrecautions_for_firefighters = New Global.System.Data.DataColumn("Precautions_for_firefighters", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnPrecautions_for_firefighters)
            Me.columnSpecific_hazards = New Global.System.Data.DataColumn("Specific_hazards", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnSpecific_hazards)
            Me.columnHazardous_combustion_products = New Global.System.Data.DataColumn("Hazardous_combustion_products", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnHazardous_combustion_products)
            Me.columnPersonal_precautions = New Global.System.Data.DataColumn("Personal_precautions", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnPersonal_precautions)
            Me.columnSmall_spills = New Global.System.Data.DataColumn("Small_spills", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnSmall_spills)
            Me.columnLarge_spills = New Global.System.Data.DataColumn("Large_spills", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnLarge_spills)
            Me.columnAdvice_on_safe_handling = New Global.System.Data.DataColumn("Advice_on_safe_handling", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnAdvice_on_safe_handling)
            Me.columnStorage_conditions = New Global.System.Data.DataColumn("Storage_conditions", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnStorage_conditions)
            Me.columnSuitable_materials_of_construction = New Global.System.Data.DataColumn("Suitable_materials_of_construction", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnSuitable_materials_of_construction)
            Me.columnUnsuitable_materials_of_construction = New Global.System.Data.DataColumn("Unsuitable_materials_of_construction", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnUnsuitable_materials_of_construction)
            Me.columnEye_face_protection = New Global.System.Data.DataColumn("Eye_face_protection", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnEye_face_protection)
            Me.columnSkin_protection = New Global.System.Data.DataColumn("Skin_protection", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnSkin_protection)
            Me.columnRespiratory_protection = New Global.System.Data.DataColumn("Respiratory_protection", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnRespiratory_protection)
            Me.columnEngineering_controls = New Global.System.Data.DataColumn("Engineering_controls", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnEngineering_controls)
            Me.columnGeneral_hygiene_considerations = New Global.System.Data.DataColumn("General_hygiene_considerations", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnGeneral_hygiene_considerations)
            Me.columnChemical_stability = New Global.System.Data.DataColumn("Chemical_stability", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnChemical_stability)
            Me.columnHazardous_polymerization = New Global.System.Data.DataColumn("Hazardous_polymerization", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnHazardous_polymerization)
            Me.columnConditions_to_avoid = New Global.System.Data.DataColumn("Conditions_to_avoid", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnConditions_to_avoid)
            Me.columnIncompatibilities = New Global.System.Data.DataColumn("Incompatibilities", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnIncompatibilities)
            Me.columnHazardous_decomposition_products = New Global.System.Data.DataColumn("Hazardous_decomposition_products", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnHazardous_decomposition_products)
            Me.columnLikely_routes_of_exposure = New Global.System.Data.DataColumn("Likely_routes_of_exposure", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnLikely_routes_of_exposure)
            Me.columnEye_contact = New Global.System.Data.DataColumn("Eye_contact", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnEye_contact)
            Me.columnSkin_contact = New Global.System.Data.DataColumn("Skin_contact", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnSkin_contact)
            Me.columnIngestion = New Global.System.Data.DataColumn("Ingestion", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnIngestion)
            Me.columnInhalation = New Global.System.Data.DataColumn("Inhalation", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnInhalation)
            Me.columnReproductive_effects = New Global.System.Data.DataColumn("Reproductive_effects", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnReproductive_effects)
            Me.columnTeratogenicity = New Global.System.Data.DataColumn("Teratogenicity", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnTeratogenicity)
            Me.columnMutagenicity = New Global.System.Data.DataColumn("Mutagenicity", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnMutagenicity)
            Me.columnEmbryotoxicity = New Global.System.Data.DataColumn("Embryotoxicity", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnEmbryotoxicity)
            Me.columnSensitization_to_product = New Global.System.Data.DataColumn("Sensitization_to_product", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnSensitization_to_product)
            Me.columnSynergistic_products = New Global.System.Data.DataColumn("Synergistic_products", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnSynergistic_products)
            Me.columnCarcinogenicity = New Global.System.Data.DataColumn("Carcinogenicity", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCarcinogenicity)
            Me.columnChronic = New Global.System.Data.DataColumn("Chronic", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnChronic)
            Me.columnPersistence = New Global.System.Data.DataColumn("Persistence", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnPersistence)
            Me.columnBioaccumulative_potential = New Global.System.Data.DataColumn("Bioaccumulative_potential", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnBioaccumulative_potential)
            Me.columnMobility = New Global.System.Data.DataColumn("Mobility", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnMobility)
            Me.columnDisposal = New Global.System.Data.DataColumn("Disposal", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnDisposal)
            Me.columnRCRA_status = New Global.System.Data.DataColumn("RCRA_status", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnRCRA_status)
            Me.columnTSCA = New Global.System.Data.DataColumn("TSCA", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnTSCA)
            Me.columnSARA311I = New Global.System.Data.DataColumn("SARA311I", GetType(Boolean), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnSARA311I)
            Me.columnSARA311D = New Global.System.Data.DataColumn("SARA311D", GetType(Boolean), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnSARA311D)
            Me.columnSARA311F = New Global.System.Data.DataColumn("SARA311F", GetType(Boolean), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnSARA311F)
            Me.columnSARA311P = New Global.System.Data.DataColumn("SARA311P", GetType(Boolean), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnSARA311P)
            Me.columnSARA311R = New Global.System.Data.DataColumn("SARA311R", GetType(Boolean), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnSARA311R)
            Me.columnHMISH = New Global.System.Data.DataColumn("HMISH", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnHMISH)
            Me.columnHMISF = New Global.System.Data.DataColumn("HMISF", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnHMISF)
            Me.columnHMISR = New Global.System.Data.DataColumn("HMISR", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnHMISR)
            Me.columnHMISS = New Global.System.Data.DataColumn("HMISS", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnHMISS)
            Me.columnNFPAH = New Global.System.Data.DataColumn("NFPAH", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnNFPAH)
            Me.columnNFPAF = New Global.System.Data.DataColumn("NFPAF", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnNFPAF)
            Me.columnNFPAR = New Global.System.Data.DataColumn("NFPAR", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnNFPAR)
            Me.columnNFPAS = New Global.System.Data.DataColumn("NFPAS", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnNFPAS)
            Me.columnFA_Eye_Contact_code = New Global.System.Data.DataColumn("FA_Eye_Contact_code", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnFA_Eye_Contact_code)
            Me.columnFA_skin_contact_code = New Global.System.Data.DataColumn("FA_skin_contact_code", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnFA_skin_contact_code)
            Me.columnFA_inhalation_code = New Global.System.Data.DataColumn("FA_inhalation_code", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnFA_inhalation_code)
            Me.columnFA_ingestion_code = New Global.System.Data.DataColumn("FA_ingestion_code", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnFA_ingestion_code)
            Me.columnNote_to_hcp_code = New Global.System.Data.DataColumn("Note_to_hcp_code", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnNote_to_hcp_code)
            Me.columnSuitable_extinguishing_media_code = New Global.System.Data.DataColumn("Suitable_extinguishing_media_code", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnSuitable_extinguishing_media_code)
            Me.columnUnsuitable_extinguishing_media_code = New Global.System.Data.DataColumn("Unsuitable_extinguishing_media_code", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnUnsuitable_extinguishing_media_code)
            Me.columnPrecautions_for_firefighters_code = New Global.System.Data.DataColumn("Precautions_for_firefighters_code", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnPrecautions_for_firefighters_code)
            Me.columnSpecific_hazards_code = New Global.System.Data.DataColumn("Specific_hazards_code", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnSpecific_hazards_code)
            Me.columnHazardous_combustion_products_code = New Global.System.Data.DataColumn("Hazardous_combustion_products_code", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnHazardous_combustion_products_code)
            Me.columnPersonal_precautions_code = New Global.System.Data.DataColumn("Personal_precautions_code", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnPersonal_precautions_code)
            Me.columnSmall_spills_code = New Global.System.Data.DataColumn("Small_spills_code", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnSmall_spills_code)
            Me.columnLarge_spills_code = New Global.System.Data.DataColumn("Large_spills_code", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnLarge_spills_code)
            Me.columnAdvice_on_safe_handling_code = New Global.System.Data.DataColumn("Advice_on_safe_handling_code", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnAdvice_on_safe_handling_code)
            Me.columnStorage_conditions_code = New Global.System.Data.DataColumn("Storage_conditions_code", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnStorage_conditions_code)
            Me.columnSuitable_materials_of_construction_code = New Global.System.Data.DataColumn("Suitable_materials_of_construction_code", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnSuitable_materials_of_construction_code)
            Me.columnUnsuitable_materials_of_construction_code = New Global.System.Data.DataColumn("Unsuitable_materials_of_construction_code", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnUnsuitable_materials_of_construction_code)
            Me.columnEye_face_protection_code = New Global.System.Data.DataColumn("Eye_face_protection_code", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnEye_face_protection_code)
            Me.columnSkin_protection_code = New Global.System.Data.DataColumn("Skin_protection_code", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnSkin_protection_code)
            Me.columnRespiratory_protection_code = New Global.System.Data.DataColumn("Respiratory_protection_code", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnRespiratory_protection_code)
            Me.columnEngineering_controls_code = New Global.System.Data.DataColumn("Engineering_controls_code", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnEngineering_controls_code)
            Me.columnGeneral_hygiene_considerations_code = New Global.System.Data.DataColumn("General_hygiene_considerations_code", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnGeneral_hygiene_considerations_code)
            Me.columnChemical_stability_code = New Global.System.Data.DataColumn("Chemical_stability_code", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnChemical_stability_code)
            Me.columnHazardous_polymerization_code = New Global.System.Data.DataColumn("Hazardous_polymerization_code", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnHazardous_polymerization_code)
            Me.columnConditions_to_avoid_code = New Global.System.Data.DataColumn("Conditions_to_avoid_code", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnConditions_to_avoid_code)
            Me.columnIncompatibilities_code = New Global.System.Data.DataColumn("Incompatibilities_code", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnIncompatibilities_code)
            Me.columnHazardous_decomposition_products_code = New Global.System.Data.DataColumn("Hazardous_decomposition_products_code", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnHazardous_decomposition_products_code)
            Me.columnLikely_routes_of_exposure_code = New Global.System.Data.DataColumn("Likely_routes_of_exposure_code", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnLikely_routes_of_exposure_code)
            Me.columnSkin_contact_code = New Global.System.Data.DataColumn("Skin_contact_code", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnSkin_contact_code)
            Me.columnIngestion_code = New Global.System.Data.DataColumn("Ingestion_code", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnIngestion_code)
            Me.columnInhalation_code = New Global.System.Data.DataColumn("Inhalation_code", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnInhalation_code)
            Me.columnReproductive_effects_code = New Global.System.Data.DataColumn("Reproductive_effects_code", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnReproductive_effects_code)
            Me.columnTeratogenicity_code = New Global.System.Data.DataColumn("Teratogenicity_code", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnTeratogenicity_code)
            Me.columnMutagenicity_code = New Global.System.Data.DataColumn("Mutagenicity_code", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnMutagenicity_code)
            Me.columnEmbryotoxicity_code = New Global.System.Data.DataColumn("Embryotoxicity_code", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnEmbryotoxicity_code)
            Me.columnSensitization_to_product_code = New Global.System.Data.DataColumn("Sensitization_to_product_code", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnSensitization_to_product_code)
            Me.columnSynergistic_products_code = New Global.System.Data.DataColumn("Synergistic_products_code", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnSynergistic_products_code)
            Me.columnCarcinogenicity_code = New Global.System.Data.DataColumn("Carcinogenicity_code", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCarcinogenicity_code)
            Me.columnChronic_code = New Global.System.Data.DataColumn("Chronic_code", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnChronic_code)
            Me.columnPersistence_code = New Global.System.Data.DataColumn("Persistence_code", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnPersistence_code)
            Me.columnBioaccumulative_potential_code = New Global.System.Data.DataColumn("Bioaccumulative_potential_code", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnBioaccumulative_potential_code)
            Me.columnMobility_code = New Global.System.Data.DataColumn("Mobility_code", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnMobility_code)
            Me.columnDisposal_code = New Global.System.Data.DataColumn("Disposal_code", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnDisposal_code)
            Me.columnRCRA_status_code = New Global.System.Data.DataColumn("RCRA_status_code", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnRCRA_status_code)
            Me.columnEye_contact_code = New Global.System.Data.DataColumn("Eye_contact_code", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnEye_contact_code)
            Me.columnTSCA_code = New Global.System.Data.DataColumn("TSCA_code", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnTSCA_code)
            Me.columnDOTContains.MaxLength = 255
            Me.columnUN_number.MaxLength = 255
            Me.columnProper_shipping_name.MaxLength = 255
            Me.columnPrimary_haz.MaxLength = 255
            Me.columnSecondary_haz.MaxLength = 255
            Me.columnPacking_group.MaxLength = 255
            Me.columnDOT.MaxLength = 255
            Me.columnDOT_label.MaxLength = 255
            Me.columnHazard_classification.MaxLength = 536870910
            Me.columnfucky.MaxLength = 536870910
            Me.columnSignal_word.MaxLength = 255
            Me.columnHazard_statement.MaxLength = 536870910
            Me.columnPict1.MaxLength = 255
            Me.columnPict2.MaxLength = 255
            Me.columnPict3.MaxLength = 255
            Me.columnPict4.MaxLength = 255
            Me.columnPict5.MaxLength = 255
            Me.columnPre_prevention.MaxLength = 536870910
            Me.columnPre_response.MaxLength = 536870910
            Me.columnPre_storage.MaxLength = 536870910
            Me.columnPre_disposal.MaxLength = 536870910
            Me.columnFA_eye_contact.MaxLength = 536870910
            Me.columnFA_skin_contact.MaxLength = 536870910
            Me.columnFA_ingestion.MaxLength = 536870910
            Me.columnFA_inhalation.MaxLength = 536870910
            Me.columnNote_to_HCP.MaxLength = 536870910
            Me.columnSuitable_extinguishing_media.MaxLength = 536870910
            Me.columnUnsuitable_extinguishing_media.MaxLength = 536870910
            Me.columnPrecautions_for_firefighters.MaxLength = 536870910
            Me.columnSpecific_hazards.MaxLength = 536870910
            Me.columnHazardous_combustion_products.MaxLength = 536870910
            Me.columnPersonal_precautions.MaxLength = 536870910
            Me.columnSmall_spills.MaxLength = 536870910
            Me.columnLarge_spills.MaxLength = 536870910
            Me.columnAdvice_on_safe_handling.MaxLength = 536870910
            Me.columnStorage_conditions.MaxLength = 536870910
            Me.columnSuitable_materials_of_construction.MaxLength = 536870910
            Me.columnUnsuitable_materials_of_construction.MaxLength = 536870910
            Me.columnEye_face_protection.MaxLength = 536870910
            Me.columnSkin_protection.MaxLength = 536870910
            Me.columnRespiratory_protection.MaxLength = 536870910
            Me.columnEngineering_controls.MaxLength = 536870910
            Me.columnGeneral_hygiene_considerations.MaxLength = 536870910
            Me.columnChemical_stability.MaxLength = 536870910
            Me.columnHazardous_polymerization.MaxLength = 536870910
            Me.columnConditions_to_avoid.MaxLength = 536870910
            Me.columnIncompatibilities.MaxLength = 536870910
            Me.columnHazardous_decomposition_products.MaxLength = 536870910
            Me.columnLikely_routes_of_exposure.MaxLength = 536870910
            Me.columnEye_contact.MaxLength = 536870910
            Me.columnSkin_contact.MaxLength = 536870910
            Me.columnIngestion.MaxLength = 536870910
            Me.columnInhalation.MaxLength = 536870910
            Me.columnReproductive_effects.MaxLength = 536870910
            Me.columnTeratogenicity.MaxLength = 536870910
            Me.columnMutagenicity.MaxLength = 536870910
            Me.columnEmbryotoxicity.MaxLength = 536870910
            Me.columnSensitization_to_product.MaxLength = 536870910
            Me.columnSynergistic_products.MaxLength = 536870910
            Me.columnCarcinogenicity.MaxLength = 536870910
            Me.columnChronic.MaxLength = 536870910
            Me.columnPersistence.MaxLength = 536870910
            Me.columnBioaccumulative_potential.MaxLength = 536870910
            Me.columnMobility.MaxLength = 536870910
            Me.columnDisposal.MaxLength = 536870910
            Me.columnRCRA_status.MaxLength = 536870910
            Me.columnTSCA.MaxLength = 536870910
            Me.columnHMISH.MaxLength = 255
            Me.columnHMISF.MaxLength = 255
            Me.columnHMISR.MaxLength = 255
            Me.columnHMISS.MaxLength = 255
            Me.columnNFPAH.MaxLength = 255
            Me.columnNFPAF.MaxLength = 255
            Me.columnNFPAR.MaxLength = 255
            Me.columnNFPAS.MaxLength = 255
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function NewSafety_DanceRow() As Safety_DanceRow
            Return CType(Me.NewRow,Safety_DanceRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Function NewRowFromBuilder(ByVal builder As Global.System.Data.DataRowBuilder) As Global.System.Data.DataRow
            Return New Safety_DanceRow(builder)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Function GetRowType() As Global.System.Type
            Return GetType(Safety_DanceRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Sub OnRowChanged(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanged(e)
            If (Not (Me.Safety_DanceRowChangedEvent) Is Nothing) Then
                RaiseEvent Safety_DanceRowChanged(Me, New Safety_DanceRowChangeEvent(CType(e.Row,Safety_DanceRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Sub OnRowChanging(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanging(e)
            If (Not (Me.Safety_DanceRowChangingEvent) Is Nothing) Then
                RaiseEvent Safety_DanceRowChanging(Me, New Safety_DanceRowChangeEvent(CType(e.Row,Safety_DanceRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Sub OnRowDeleted(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleted(e)
            If (Not (Me.Safety_DanceRowDeletedEvent) Is Nothing) Then
                RaiseEvent Safety_DanceRowDeleted(Me, New Safety_DanceRowChangeEvent(CType(e.Row,Safety_DanceRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Sub OnRowDeleting(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleting(e)
            If (Not (Me.Safety_DanceRowDeletingEvent) Is Nothing) Then
                RaiseEvent Safety_DanceRowDeleting(Me, New Safety_DanceRowChangeEvent(CType(e.Row,Safety_DanceRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub RemoveSafety_DanceRow(ByVal row As Safety_DanceRow)
            Me.Rows.Remove(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Shared Function GetTypedTableSchema(ByVal xs As Global.System.Xml.Schema.XmlSchemaSet) As Global.System.Xml.Schema.XmlSchemaComplexType
            Dim type As Global.System.Xml.Schema.XmlSchemaComplexType = New Global.System.Xml.Schema.XmlSchemaComplexType()
            Dim sequence As Global.System.Xml.Schema.XmlSchemaSequence = New Global.System.Xml.Schema.XmlSchemaSequence()
            Dim ds As Dossier = New Dossier()
            Dim any1 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
            any1.Namespace = "http://www.w3.org/2001/XMLSchema"
            any1.MinOccurs = New Decimal(0)
            any1.MaxOccurs = Decimal.MaxValue
            any1.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any1)
            Dim any2 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
            any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1"
            any2.MinOccurs = New Decimal(1)
            any2.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any2)
            Dim attribute1 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute()
            attribute1.Name = "namespace"
            attribute1.FixedValue = ds.Namespace
            type.Attributes.Add(attribute1)
            Dim attribute2 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute()
            attribute2.Name = "tableTypeName"
            attribute2.FixedValue = "Safety_DanceDataTable"
            type.Attributes.Add(attribute2)
            type.Particle = sequence
            Dim dsSchema As Global.System.Xml.Schema.XmlSchema = ds.GetSchemaSerializable
            If xs.Contains(dsSchema.TargetNamespace) Then
                Dim s1 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
                Dim s2 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
                Try 
                    Dim schema As Global.System.Xml.Schema.XmlSchema = Nothing
                    dsSchema.Write(s1)
                    Dim schemas As Global.System.Collections.IEnumerator = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator
                    Do While schemas.MoveNext
                        schema = CType(schemas.Current,Global.System.Xml.Schema.XmlSchema)
                        s2.SetLength(0)
                        schema.Write(s2)
                        If (s1.Length = s2.Length) Then
                            s1.Position = 0
                            s2.Position = 0
                            
                            Do While ((s1.Position <> s1.Length)  _
                                        AndAlso (s1.ReadByte = s2.ReadByte))
                                
                                
                            Loop
                            If (s1.Position = s1.Length) Then
                                Return type
                            End If
                        End If
                        
                    Loop
                Finally
                    If (Not (s1) Is Nothing) Then
                        s1.Close
                    End If
                    If (Not (s2) Is Nothing) Then
                        s2.Close
                    End If
                End Try
            End If
            xs.Add(dsSchema)
            Return type
        End Function
    End Class
    
    '''<summary>
    '''Represents the strongly named DataTable class.
    '''</summary>
    <Global.System.Serializable(),  _
     Global.System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")>  _
    Partial Public Class Safety_LexiconDataTable
        Inherits Global.System.Data.TypedTableBase(Of Safety_LexiconRow)
        
        Private columnSAFLEXID As Global.System.Data.DataColumn
        
        Private columnFA_eye_contact As Global.System.Data.DataColumn
        
        Private columnFA_skin_contact As Global.System.Data.DataColumn
        
        Private columnFA_ingestion As Global.System.Data.DataColumn
        
        Private columnFA_inhalation As Global.System.Data.DataColumn
        
        Private columnNote_to_HCP As Global.System.Data.DataColumn
        
        Private columnSuitable_extinguishing_media As Global.System.Data.DataColumn
        
        Private columnUnsuitable_extinguishing_media As Global.System.Data.DataColumn
        
        Private columnPrecautions_for_firefighters As Global.System.Data.DataColumn
        
        Private columnSpecific_hazards As Global.System.Data.DataColumn
        
        Private columnHazardous_combustion_products As Global.System.Data.DataColumn
        
        Private columnPersonal_precautions As Global.System.Data.DataColumn
        
        Private columnSmall_spills As Global.System.Data.DataColumn
        
        Private columnLarge_spills As Global.System.Data.DataColumn
        
        Private columnAdvice_on_safe_handling As Global.System.Data.DataColumn
        
        Private columnStorage_conditions As Global.System.Data.DataColumn
        
        Private columnSuitable_materials_of_construction As Global.System.Data.DataColumn
        
        Private columnUnsuitable_materials_of_construction As Global.System.Data.DataColumn
        
        Private columnEye_face_protection As Global.System.Data.DataColumn
        
        Private columnSkin_protection As Global.System.Data.DataColumn
        
        Private columnRespiratory_protection As Global.System.Data.DataColumn
        
        Private columnEngineering_controls As Global.System.Data.DataColumn
        
        Private columnGeneral_hygiene_considerations As Global.System.Data.DataColumn
        
        Private columnChemical_stability As Global.System.Data.DataColumn
        
        Private columnHazardous_polymerization As Global.System.Data.DataColumn
        
        Private columnConditions_to_avoid As Global.System.Data.DataColumn
        
        Private columnIncompatibilities As Global.System.Data.DataColumn
        
        Private columnHazardous_decomposition_products As Global.System.Data.DataColumn
        
        Private columnLikely_routes_of_exposure As Global.System.Data.DataColumn
        
        Private columnEye_contact As Global.System.Data.DataColumn
        
        Private columnSkin_contact As Global.System.Data.DataColumn
        
        Private columnIngestion As Global.System.Data.DataColumn
        
        Private columnInhalation As Global.System.Data.DataColumn
        
        Private columnReproductive_effects As Global.System.Data.DataColumn
        
        Private columnTeratogenicity As Global.System.Data.DataColumn
        
        Private columnMutagenicity As Global.System.Data.DataColumn
        
        Private columnEmbryotoxicity As Global.System.Data.DataColumn
        
        Private columnSensitization_to_product As Global.System.Data.DataColumn
        
        Private columnSynergistic_products As Global.System.Data.DataColumn
        
        Private columnCarcinogenicity As Global.System.Data.DataColumn
        
        Private columnChronic As Global.System.Data.DataColumn
        
        Private columnPersistence As Global.System.Data.DataColumn
        
        Private columnBioaccumulative_potential As Global.System.Data.DataColumn
        
        Private columnMobility As Global.System.Data.DataColumn
        
        Private columnDisposal As Global.System.Data.DataColumn
        
        Private columnRCRA_status As Global.System.Data.DataColumn
        
        Private columnTSCA As Global.System.Data.DataColumn
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub New()
            MyBase.New
            Me.TableName = "Safety Lexicon"
            Me.BeginInit
            Me.InitClass
            Me.EndInit
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Sub New(ByVal table As Global.System.Data.DataTable)
            MyBase.New
            Me.TableName = table.TableName
            If (table.CaseSensitive <> table.DataSet.CaseSensitive) Then
                Me.CaseSensitive = table.CaseSensitive
            End If
            If (table.Locale.ToString <> table.DataSet.Locale.ToString) Then
                Me.Locale = table.Locale
            End If
            If (table.Namespace <> table.DataSet.Namespace) Then
                Me.Namespace = table.Namespace
            End If
            Me.Prefix = table.Prefix
            Me.MinimumCapacity = table.MinimumCapacity
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Sub New(ByVal info As Global.System.Runtime.Serialization.SerializationInfo, ByVal context As Global.System.Runtime.Serialization.StreamingContext)
            MyBase.New(info, context)
            Me.InitVars
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property SAFLEXIDColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnSAFLEXID
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property FA_eye_contactColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnFA_eye_contact
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property FA_skin_contactColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnFA_skin_contact
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property FA_ingestionColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnFA_ingestion
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property FA_inhalationColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnFA_inhalation
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property Note_to_HCPColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnNote_to_HCP
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property Suitable_extinguishing_mediaColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnSuitable_extinguishing_media
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property Unsuitable_extinguishing_mediaColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnUnsuitable_extinguishing_media
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property Precautions_for_firefightersColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnPrecautions_for_firefighters
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property Specific_hazardsColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnSpecific_hazards
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property Hazardous_combustion_productsColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnHazardous_combustion_products
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property Personal_precautionsColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnPersonal_precautions
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property Small_spillsColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnSmall_spills
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property Large_spillsColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnLarge_spills
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property Advice_on_safe_handlingColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnAdvice_on_safe_handling
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property Storage_conditionsColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnStorage_conditions
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property Suitable_materials_of_constructionColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnSuitable_materials_of_construction
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property Unsuitable_materials_of_constructionColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnUnsuitable_materials_of_construction
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property Eye_face_protectionColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnEye_face_protection
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property Skin_protectionColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnSkin_protection
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property Respiratory_protectionColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnRespiratory_protection
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property Engineering_controlsColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnEngineering_controls
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property General_hygiene_considerationsColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnGeneral_hygiene_considerations
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property Chemical_stabilityColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnChemical_stability
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property Hazardous_polymerizationColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnHazardous_polymerization
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property Conditions_to_avoidColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnConditions_to_avoid
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property IncompatibilitiesColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnIncompatibilities
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property Hazardous_decomposition_productsColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnHazardous_decomposition_products
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property Likely_routes_of_exposureColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnLikely_routes_of_exposure
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property Eye_contactColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnEye_contact
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property Skin_contactColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnSkin_contact
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property IngestionColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnIngestion
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property InhalationColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnInhalation
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property Reproductive_effectsColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnReproductive_effects
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property TeratogenicityColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnTeratogenicity
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property MutagenicityColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnMutagenicity
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property EmbryotoxicityColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnEmbryotoxicity
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property Sensitization_to_productColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnSensitization_to_product
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property Synergistic_productsColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnSynergistic_products
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property CarcinogenicityColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnCarcinogenicity
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property ChronicColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnChronic
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property PersistenceColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnPersistence
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property Bioaccumulative_potentialColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnBioaccumulative_potential
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property MobilityColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnMobility
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property DisposalColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnDisposal
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property RCRA_statusColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnRCRA_status
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property TSCAColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnTSCA
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Browsable(false)>  _
        Public ReadOnly Property Count() As Integer
            Get
                Return Me.Rows.Count
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Default ReadOnly Property Item(ByVal index As Integer) As Safety_LexiconRow
            Get
                Return CType(Me.Rows(index),Safety_LexiconRow)
            End Get
        End Property
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event Safety_LexiconRowChanging As Safety_LexiconRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event Safety_LexiconRowChanged As Safety_LexiconRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event Safety_LexiconRowDeleting As Safety_LexiconRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event Safety_LexiconRowDeleted As Safety_LexiconRowChangeEventHandler
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Overloads Sub AddSafety_LexiconRow(ByVal row As Safety_LexiconRow)
            Me.Rows.Add(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Overloads Function AddSafety_LexiconRow( _
                    ByVal FA_eye_contact As String,  _
                    ByVal FA_skin_contact As String,  _
                    ByVal FA_ingestion As String,  _
                    ByVal FA_inhalation As String,  _
                    ByVal Note_to_HCP As String,  _
                    ByVal Suitable_extinguishing_media As String,  _
                    ByVal Unsuitable_extinguishing_media As String,  _
                    ByVal Precautions_for_firefighters As String,  _
                    ByVal Specific_hazards As String,  _
                    ByVal Hazardous_combustion_products As String,  _
                    ByVal Personal_precautions As String,  _
                    ByVal Small_spills As String,  _
                    ByVal Large_spills As String,  _
                    ByVal Advice_on_safe_handling As String,  _
                    ByVal Storage_conditions As String,  _
                    ByVal Suitable_materials_of_construction As String,  _
                    ByVal Unsuitable_materials_of_construction As String,  _
                    ByVal Eye_face_protection As String,  _
                    ByVal Skin_protection As String,  _
                    ByVal Respiratory_protection As String,  _
                    ByVal Engineering_controls As String,  _
                    ByVal General_hygiene_considerations As String,  _
                    ByVal Chemical_stability As String,  _
                    ByVal Hazardous_polymerization As String,  _
                    ByVal Conditions_to_avoid As String,  _
                    ByVal Incompatibilities As String,  _
                    ByVal Hazardous_decomposition_products As String,  _
                    ByVal Likely_routes_of_exposure As String,  _
                    ByVal Eye_contact As String,  _
                    ByVal Skin_contact As String,  _
                    ByVal Ingestion As String,  _
                    ByVal Inhalation As String,  _
                    ByVal Reproductive_effects As String,  _
                    ByVal Teratogenicity As String,  _
                    ByVal Mutagenicity As String,  _
                    ByVal Embryotoxicity As String,  _
                    ByVal Sensitization_to_product As String,  _
                    ByVal Synergistic_products As String,  _
                    ByVal Carcinogenicity As String,  _
                    ByVal Chronic As String,  _
                    ByVal Persistence As String,  _
                    ByVal Bioaccumulative_potential As String,  _
                    ByVal Mobility As String,  _
                    ByVal Disposal As String,  _
                    ByVal RCRA_status As String,  _
                    ByVal TSCA As String) As Safety_LexiconRow
            Dim rowSafety_LexiconRow As Safety_LexiconRow = CType(Me.NewRow,Safety_LexiconRow)
            Dim columnValuesArray() As Object = New Object() {Nothing, FA_eye_contact, FA_skin_contact, FA_ingestion, FA_inhalation, Note_to_HCP, Suitable_extinguishing_media, Unsuitable_extinguishing_media, Precautions_for_firefighters, Specific_hazards, Hazardous_combustion_products, Personal_precautions, Small_spills, Large_spills, Advice_on_safe_handling, Storage_conditions, Suitable_materials_of_construction, Unsuitable_materials_of_construction, Eye_face_protection, Skin_protection, Respiratory_protection, Engineering_controls, General_hygiene_considerations, Chemical_stability, Hazardous_polymerization, Conditions_to_avoid, Incompatibilities, Hazardous_decomposition_products, Likely_routes_of_exposure, Eye_contact, Skin_contact, Ingestion, Inhalation, Reproductive_effects, Teratogenicity, Mutagenicity, Embryotoxicity, Sensitization_to_product, Synergistic_products, Carcinogenicity, Chronic, Persistence, Bioaccumulative_potential, Mobility, Disposal, RCRA_status, TSCA}
            rowSafety_LexiconRow.ItemArray = columnValuesArray
            Me.Rows.Add(rowSafety_LexiconRow)
            Return rowSafety_LexiconRow
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Overrides Function Clone() As Global.System.Data.DataTable
            Dim cln As Safety_LexiconDataTable = CType(MyBase.Clone,Safety_LexiconDataTable)
            cln.InitVars
            Return cln
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Function CreateInstance() As Global.System.Data.DataTable
            Return New Safety_LexiconDataTable()
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Sub InitVars()
            Me.columnSAFLEXID = MyBase.Columns("SAFLEXID")
            Me.columnFA_eye_contact = MyBase.Columns("FA_eye_contact")
            Me.columnFA_skin_contact = MyBase.Columns("FA_skin_contact")
            Me.columnFA_ingestion = MyBase.Columns("FA_ingestion")
            Me.columnFA_inhalation = MyBase.Columns("FA_inhalation")
            Me.columnNote_to_HCP = MyBase.Columns("Note_to_HCP")
            Me.columnSuitable_extinguishing_media = MyBase.Columns("Suitable_extinguishing_media")
            Me.columnUnsuitable_extinguishing_media = MyBase.Columns("Unsuitable_extinguishing_media")
            Me.columnPrecautions_for_firefighters = MyBase.Columns("Precautions_for_firefighters")
            Me.columnSpecific_hazards = MyBase.Columns("Specific_hazards")
            Me.columnHazardous_combustion_products = MyBase.Columns("Hazardous_combustion_products")
            Me.columnPersonal_precautions = MyBase.Columns("Personal_precautions")
            Me.columnSmall_spills = MyBase.Columns("Small_spills")
            Me.columnLarge_spills = MyBase.Columns("Large_spills")
            Me.columnAdvice_on_safe_handling = MyBase.Columns("Advice_on_safe_handling")
            Me.columnStorage_conditions = MyBase.Columns("Storage_conditions")
            Me.columnSuitable_materials_of_construction = MyBase.Columns("Suitable_materials_of_construction")
            Me.columnUnsuitable_materials_of_construction = MyBase.Columns("Unsuitable_materials_of_construction")
            Me.columnEye_face_protection = MyBase.Columns("Eye_face_protection")
            Me.columnSkin_protection = MyBase.Columns("Skin_protection")
            Me.columnRespiratory_protection = MyBase.Columns("Respiratory_protection")
            Me.columnEngineering_controls = MyBase.Columns("Engineering_controls")
            Me.columnGeneral_hygiene_considerations = MyBase.Columns("General_hygiene_considerations")
            Me.columnChemical_stability = MyBase.Columns("Chemical_stability")
            Me.columnHazardous_polymerization = MyBase.Columns("Hazardous_polymerization")
            Me.columnConditions_to_avoid = MyBase.Columns("Conditions_to_avoid")
            Me.columnIncompatibilities = MyBase.Columns("Incompatibilities")
            Me.columnHazardous_decomposition_products = MyBase.Columns("Hazardous_decomposition_products")
            Me.columnLikely_routes_of_exposure = MyBase.Columns("Likely_routes_of_exposure")
            Me.columnEye_contact = MyBase.Columns("Eye_contact")
            Me.columnSkin_contact = MyBase.Columns("Skin_contact")
            Me.columnIngestion = MyBase.Columns("Ingestion")
            Me.columnInhalation = MyBase.Columns("Inhalation")
            Me.columnReproductive_effects = MyBase.Columns("Reproductive_effects")
            Me.columnTeratogenicity = MyBase.Columns("Teratogenicity")
            Me.columnMutagenicity = MyBase.Columns("Mutagenicity")
            Me.columnEmbryotoxicity = MyBase.Columns("Embryotoxicity")
            Me.columnSensitization_to_product = MyBase.Columns("Sensitization_to_product")
            Me.columnSynergistic_products = MyBase.Columns("Synergistic_products")
            Me.columnCarcinogenicity = MyBase.Columns("Carcinogenicity")
            Me.columnChronic = MyBase.Columns("Chronic")
            Me.columnPersistence = MyBase.Columns("Persistence")
            Me.columnBioaccumulative_potential = MyBase.Columns("Bioaccumulative_potential")
            Me.columnMobility = MyBase.Columns("Mobility")
            Me.columnDisposal = MyBase.Columns("Disposal")
            Me.columnRCRA_status = MyBase.Columns("RCRA_status")
            Me.columnTSCA = MyBase.Columns("TSCA")
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Private Sub InitClass()
            Me.columnSAFLEXID = New Global.System.Data.DataColumn("SAFLEXID", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnSAFLEXID)
            Me.columnFA_eye_contact = New Global.System.Data.DataColumn("FA_eye_contact", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnFA_eye_contact)
            Me.columnFA_skin_contact = New Global.System.Data.DataColumn("FA_skin_contact", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnFA_skin_contact)
            Me.columnFA_ingestion = New Global.System.Data.DataColumn("FA_ingestion", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnFA_ingestion)
            Me.columnFA_inhalation = New Global.System.Data.DataColumn("FA_inhalation", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnFA_inhalation)
            Me.columnNote_to_HCP = New Global.System.Data.DataColumn("Note_to_HCP", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnNote_to_HCP)
            Me.columnSuitable_extinguishing_media = New Global.System.Data.DataColumn("Suitable_extinguishing_media", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnSuitable_extinguishing_media)
            Me.columnUnsuitable_extinguishing_media = New Global.System.Data.DataColumn("Unsuitable_extinguishing_media", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnUnsuitable_extinguishing_media)
            Me.columnPrecautions_for_firefighters = New Global.System.Data.DataColumn("Precautions_for_firefighters", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnPrecautions_for_firefighters)
            Me.columnSpecific_hazards = New Global.System.Data.DataColumn("Specific_hazards", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnSpecific_hazards)
            Me.columnHazardous_combustion_products = New Global.System.Data.DataColumn("Hazardous_combustion_products", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnHazardous_combustion_products)
            Me.columnPersonal_precautions = New Global.System.Data.DataColumn("Personal_precautions", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnPersonal_precautions)
            Me.columnSmall_spills = New Global.System.Data.DataColumn("Small_spills", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnSmall_spills)
            Me.columnLarge_spills = New Global.System.Data.DataColumn("Large_spills", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnLarge_spills)
            Me.columnAdvice_on_safe_handling = New Global.System.Data.DataColumn("Advice_on_safe_handling", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnAdvice_on_safe_handling)
            Me.columnStorage_conditions = New Global.System.Data.DataColumn("Storage_conditions", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnStorage_conditions)
            Me.columnSuitable_materials_of_construction = New Global.System.Data.DataColumn("Suitable_materials_of_construction", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnSuitable_materials_of_construction)
            Me.columnUnsuitable_materials_of_construction = New Global.System.Data.DataColumn("Unsuitable_materials_of_construction", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnUnsuitable_materials_of_construction)
            Me.columnEye_face_protection = New Global.System.Data.DataColumn("Eye_face_protection", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnEye_face_protection)
            Me.columnSkin_protection = New Global.System.Data.DataColumn("Skin_protection", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnSkin_protection)
            Me.columnRespiratory_protection = New Global.System.Data.DataColumn("Respiratory_protection", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnRespiratory_protection)
            Me.columnEngineering_controls = New Global.System.Data.DataColumn("Engineering_controls", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnEngineering_controls)
            Me.columnGeneral_hygiene_considerations = New Global.System.Data.DataColumn("General_hygiene_considerations", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnGeneral_hygiene_considerations)
            Me.columnChemical_stability = New Global.System.Data.DataColumn("Chemical_stability", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnChemical_stability)
            Me.columnHazardous_polymerization = New Global.System.Data.DataColumn("Hazardous_polymerization", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnHazardous_polymerization)
            Me.columnConditions_to_avoid = New Global.System.Data.DataColumn("Conditions_to_avoid", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnConditions_to_avoid)
            Me.columnIncompatibilities = New Global.System.Data.DataColumn("Incompatibilities", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnIncompatibilities)
            Me.columnHazardous_decomposition_products = New Global.System.Data.DataColumn("Hazardous_decomposition_products", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnHazardous_decomposition_products)
            Me.columnLikely_routes_of_exposure = New Global.System.Data.DataColumn("Likely_routes_of_exposure", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnLikely_routes_of_exposure)
            Me.columnEye_contact = New Global.System.Data.DataColumn("Eye_contact", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnEye_contact)
            Me.columnSkin_contact = New Global.System.Data.DataColumn("Skin_contact", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnSkin_contact)
            Me.columnIngestion = New Global.System.Data.DataColumn("Ingestion", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnIngestion)
            Me.columnInhalation = New Global.System.Data.DataColumn("Inhalation", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnInhalation)
            Me.columnReproductive_effects = New Global.System.Data.DataColumn("Reproductive_effects", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnReproductive_effects)
            Me.columnTeratogenicity = New Global.System.Data.DataColumn("Teratogenicity", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnTeratogenicity)
            Me.columnMutagenicity = New Global.System.Data.DataColumn("Mutagenicity", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnMutagenicity)
            Me.columnEmbryotoxicity = New Global.System.Data.DataColumn("Embryotoxicity", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnEmbryotoxicity)
            Me.columnSensitization_to_product = New Global.System.Data.DataColumn("Sensitization_to_product", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnSensitization_to_product)
            Me.columnSynergistic_products = New Global.System.Data.DataColumn("Synergistic_products", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnSynergistic_products)
            Me.columnCarcinogenicity = New Global.System.Data.DataColumn("Carcinogenicity", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCarcinogenicity)
            Me.columnChronic = New Global.System.Data.DataColumn("Chronic", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnChronic)
            Me.columnPersistence = New Global.System.Data.DataColumn("Persistence", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnPersistence)
            Me.columnBioaccumulative_potential = New Global.System.Data.DataColumn("Bioaccumulative_potential", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnBioaccumulative_potential)
            Me.columnMobility = New Global.System.Data.DataColumn("Mobility", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnMobility)
            Me.columnDisposal = New Global.System.Data.DataColumn("Disposal", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnDisposal)
            Me.columnRCRA_status = New Global.System.Data.DataColumn("RCRA_status", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnRCRA_status)
            Me.columnTSCA = New Global.System.Data.DataColumn("TSCA", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnTSCA)
            Me.columnSAFLEXID.AutoIncrement = true
            Me.columnSAFLEXID.AutoIncrementSeed = -1
            Me.columnSAFLEXID.AutoIncrementStep = -1
            Me.columnFA_eye_contact.MaxLength = 536870910
            Me.columnFA_skin_contact.MaxLength = 536870910
            Me.columnFA_ingestion.MaxLength = 536870910
            Me.columnFA_inhalation.MaxLength = 536870910
            Me.columnNote_to_HCP.MaxLength = 536870910
            Me.columnSuitable_extinguishing_media.MaxLength = 536870910
            Me.columnUnsuitable_extinguishing_media.MaxLength = 536870910
            Me.columnPrecautions_for_firefighters.MaxLength = 536870910
            Me.columnSpecific_hazards.MaxLength = 536870910
            Me.columnHazardous_combustion_products.MaxLength = 536870910
            Me.columnPersonal_precautions.MaxLength = 536870910
            Me.columnSmall_spills.MaxLength = 536870910
            Me.columnLarge_spills.MaxLength = 536870910
            Me.columnAdvice_on_safe_handling.MaxLength = 536870910
            Me.columnStorage_conditions.MaxLength = 536870910
            Me.columnSuitable_materials_of_construction.MaxLength = 536870910
            Me.columnUnsuitable_materials_of_construction.MaxLength = 536870910
            Me.columnEye_face_protection.MaxLength = 536870910
            Me.columnSkin_protection.MaxLength = 536870910
            Me.columnRespiratory_protection.MaxLength = 536870910
            Me.columnEngineering_controls.MaxLength = 536870910
            Me.columnGeneral_hygiene_considerations.MaxLength = 536870910
            Me.columnChemical_stability.MaxLength = 536870910
            Me.columnHazardous_polymerization.MaxLength = 536870910
            Me.columnConditions_to_avoid.MaxLength = 536870910
            Me.columnIncompatibilities.MaxLength = 536870910
            Me.columnHazardous_decomposition_products.MaxLength = 536870910
            Me.columnLikely_routes_of_exposure.MaxLength = 536870910
            Me.columnEye_contact.MaxLength = 536870910
            Me.columnSkin_contact.MaxLength = 536870910
            Me.columnIngestion.MaxLength = 536870910
            Me.columnInhalation.MaxLength = 536870910
            Me.columnReproductive_effects.MaxLength = 536870910
            Me.columnTeratogenicity.MaxLength = 536870910
            Me.columnMutagenicity.MaxLength = 536870910
            Me.columnEmbryotoxicity.MaxLength = 536870910
            Me.columnSensitization_to_product.MaxLength = 536870910
            Me.columnSynergistic_products.MaxLength = 536870910
            Me.columnCarcinogenicity.MaxLength = 536870910
            Me.columnChronic.MaxLength = 536870910
            Me.columnPersistence.MaxLength = 536870910
            Me.columnBioaccumulative_potential.MaxLength = 536870910
            Me.columnMobility.MaxLength = 536870910
            Me.columnDisposal.MaxLength = 536870910
            Me.columnRCRA_status.MaxLength = 536870910
            Me.columnTSCA.MaxLength = 536870910
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function NewSafety_LexiconRow() As Safety_LexiconRow
            Return CType(Me.NewRow,Safety_LexiconRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Function NewRowFromBuilder(ByVal builder As Global.System.Data.DataRowBuilder) As Global.System.Data.DataRow
            Return New Safety_LexiconRow(builder)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Function GetRowType() As Global.System.Type
            Return GetType(Safety_LexiconRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Sub OnRowChanged(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanged(e)
            If (Not (Me.Safety_LexiconRowChangedEvent) Is Nothing) Then
                RaiseEvent Safety_LexiconRowChanged(Me, New Safety_LexiconRowChangeEvent(CType(e.Row,Safety_LexiconRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Sub OnRowChanging(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanging(e)
            If (Not (Me.Safety_LexiconRowChangingEvent) Is Nothing) Then
                RaiseEvent Safety_LexiconRowChanging(Me, New Safety_LexiconRowChangeEvent(CType(e.Row,Safety_LexiconRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Sub OnRowDeleted(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleted(e)
            If (Not (Me.Safety_LexiconRowDeletedEvent) Is Nothing) Then
                RaiseEvent Safety_LexiconRowDeleted(Me, New Safety_LexiconRowChangeEvent(CType(e.Row,Safety_LexiconRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Sub OnRowDeleting(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleting(e)
            If (Not (Me.Safety_LexiconRowDeletingEvent) Is Nothing) Then
                RaiseEvent Safety_LexiconRowDeleting(Me, New Safety_LexiconRowChangeEvent(CType(e.Row,Safety_LexiconRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub RemoveSafety_LexiconRow(ByVal row As Safety_LexiconRow)
            Me.Rows.Remove(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Shared Function GetTypedTableSchema(ByVal xs As Global.System.Xml.Schema.XmlSchemaSet) As Global.System.Xml.Schema.XmlSchemaComplexType
            Dim type As Global.System.Xml.Schema.XmlSchemaComplexType = New Global.System.Xml.Schema.XmlSchemaComplexType()
            Dim sequence As Global.System.Xml.Schema.XmlSchemaSequence = New Global.System.Xml.Schema.XmlSchemaSequence()
            Dim ds As Dossier = New Dossier()
            Dim any1 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
            any1.Namespace = "http://www.w3.org/2001/XMLSchema"
            any1.MinOccurs = New Decimal(0)
            any1.MaxOccurs = Decimal.MaxValue
            any1.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any1)
            Dim any2 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
            any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1"
            any2.MinOccurs = New Decimal(1)
            any2.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any2)
            Dim attribute1 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute()
            attribute1.Name = "namespace"
            attribute1.FixedValue = ds.Namespace
            type.Attributes.Add(attribute1)
            Dim attribute2 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute()
            attribute2.Name = "tableTypeName"
            attribute2.FixedValue = "Safety_LexiconDataTable"
            type.Attributes.Add(attribute2)
            type.Particle = sequence
            Dim dsSchema As Global.System.Xml.Schema.XmlSchema = ds.GetSchemaSerializable
            If xs.Contains(dsSchema.TargetNamespace) Then
                Dim s1 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
                Dim s2 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
                Try 
                    Dim schema As Global.System.Xml.Schema.XmlSchema = Nothing
                    dsSchema.Write(s1)
                    Dim schemas As Global.System.Collections.IEnumerator = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator
                    Do While schemas.MoveNext
                        schema = CType(schemas.Current,Global.System.Xml.Schema.XmlSchema)
                        s2.SetLength(0)
                        schema.Write(s2)
                        If (s1.Length = s2.Length) Then
                            s1.Position = 0
                            s2.Position = 0
                            
                            Do While ((s1.Position <> s1.Length)  _
                                        AndAlso (s1.ReadByte = s2.ReadByte))
                                
                                
                            Loop
                            If (s1.Position = s1.Length) Then
                                Return type
                            End If
                        End If
                        
                    Loop
                Finally
                    If (Not (s1) Is Nothing) Then
                        s1.Close
                    End If
                    If (Not (s2) Is Nothing) Then
                        s2.Close
                    End If
                End Try
            End If
            xs.Add(dsSchema)
            Return type
        End Function
    End Class
    
    '''<summary>
    '''Represents strongly named DataRow class.
    '''</summary>
    Partial Public Class Acute_ToxicityRow
        Inherits Global.System.Data.DataRow
        
        Private tableAcute_Toxicity As Acute_ToxicityDataTable
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Sub New(ByVal rb As Global.System.Data.DataRowBuilder)
            MyBase.New(rb)
            Me.tableAcute_Toxicity = CType(Me.Table,Acute_ToxicityDataTable)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property ACTID() As Integer
            Get
                Try 
                    Return CType(Me(Me.tableAcute_Toxicity.ACTIDColumn),Integer)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'ACTID' in table 'Acute Toxicity' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableAcute_Toxicity.ACTIDColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property Subsort() As Integer
            Get
                Try 
                    Return CType(Me(Me.tableAcute_Toxicity.SubsortColumn),Integer)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Subsort' in table 'Acute Toxicity' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableAcute_Toxicity.SubsortColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property Substance() As String
            Get
                Try 
                    Return CType(Me(Me.tableAcute_Toxicity.SubstanceColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Substance' in table 'Acute Toxicity' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableAcute_Toxicity.SubstanceColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property Concentration() As String
            Get
                Try 
                    Return CType(Me(Me.tableAcute_Toxicity.ConcentrationColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Concentration' in table 'Acute Toxicity' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableAcute_Toxicity.ConcentrationColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property CAS() As String
            Get
                Try 
                    Return CType(Me(Me.tableAcute_Toxicity.CASColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'CAS' in table 'Acute Toxicity' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableAcute_Toxicity.CASColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property Test() As String
            Get
                Try 
                    Return CType(Me(Me.tableAcute_Toxicity.TestColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Test' in table 'Acute Toxicity' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableAcute_Toxicity.TestColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property Result() As String
            Get
                Try 
                    Return CType(Me(Me.tableAcute_Toxicity.ResultColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Result' in table 'Acute Toxicity' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableAcute_Toxicity.ResultColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property Notes() As String
            Get
                Try 
                    Return CType(Me(Me.tableAcute_Toxicity.NotesColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Notes' in table 'Acute Toxicity' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableAcute_Toxicity.NotesColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property Source() As String
            Get
                Try 
                    Return CType(Me(Me.tableAcute_Toxicity.SourceColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Source' in table 'Acute Toxicity' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableAcute_Toxicity.SourceColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property Source_embed() As String
            Get
                Try 
                    Return CType(Me(Me.tableAcute_Toxicity.Source_embedColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Source embed' in table 'Acute Toxicity' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableAcute_Toxicity.Source_embedColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property Type() As String
            Get
                Try 
                    Return CType(Me(Me.tableAcute_Toxicity.TypeColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Type' in table 'Acute Toxicity' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableAcute_Toxicity.TypeColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsACTIDNull() As Boolean
            Return Me.IsNull(Me.tableAcute_Toxicity.ACTIDColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetACTIDNull()
            Me(Me.tableAcute_Toxicity.ACTIDColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsSubsortNull() As Boolean
            Return Me.IsNull(Me.tableAcute_Toxicity.SubsortColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetSubsortNull()
            Me(Me.tableAcute_Toxicity.SubsortColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsSubstanceNull() As Boolean
            Return Me.IsNull(Me.tableAcute_Toxicity.SubstanceColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetSubstanceNull()
            Me(Me.tableAcute_Toxicity.SubstanceColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsConcentrationNull() As Boolean
            Return Me.IsNull(Me.tableAcute_Toxicity.ConcentrationColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetConcentrationNull()
            Me(Me.tableAcute_Toxicity.ConcentrationColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsCASNull() As Boolean
            Return Me.IsNull(Me.tableAcute_Toxicity.CASColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetCASNull()
            Me(Me.tableAcute_Toxicity.CASColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsTestNull() As Boolean
            Return Me.IsNull(Me.tableAcute_Toxicity.TestColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetTestNull()
            Me(Me.tableAcute_Toxicity.TestColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsResultNull() As Boolean
            Return Me.IsNull(Me.tableAcute_Toxicity.ResultColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetResultNull()
            Me(Me.tableAcute_Toxicity.ResultColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsNotesNull() As Boolean
            Return Me.IsNull(Me.tableAcute_Toxicity.NotesColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetNotesNull()
            Me(Me.tableAcute_Toxicity.NotesColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsSourceNull() As Boolean
            Return Me.IsNull(Me.tableAcute_Toxicity.SourceColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetSourceNull()
            Me(Me.tableAcute_Toxicity.SourceColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsSource_embedNull() As Boolean
            Return Me.IsNull(Me.tableAcute_Toxicity.Source_embedColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetSource_embedNull()
            Me(Me.tableAcute_Toxicity.Source_embedColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsTypeNull() As Boolean
            Return Me.IsNull(Me.tableAcute_Toxicity.TypeColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetTypeNull()
            Me(Me.tableAcute_Toxicity.TypeColumn) = Global.System.Convert.DBNull
        End Sub
    End Class
    
    '''<summary>
    '''Represents strongly named DataRow class.
    '''</summary>
    Partial Public Class Aquatic_ToxicityRow
        Inherits Global.System.Data.DataRow
        
        Private tableAquatic_Toxicity As Aquatic_ToxicityDataTable
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Sub New(ByVal rb As Global.System.Data.DataRowBuilder)
            MyBase.New(rb)
            Me.tableAquatic_Toxicity = CType(Me.Table,Aquatic_ToxicityDataTable)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property AQTIDID() As Integer
            Get
                Try 
                    Return CType(Me(Me.tableAquatic_Toxicity.AQTIDIDColumn),Integer)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'AQTIDID' in table 'Aquatic Toxicity' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableAquatic_Toxicity.AQTIDIDColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property Subsort() As Integer
            Get
                Try 
                    Return CType(Me(Me.tableAquatic_Toxicity.SubsortColumn),Integer)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Subsort' in table 'Aquatic Toxicity' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableAquatic_Toxicity.SubsortColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property IsProduct() As Boolean
            Get
                Try 
                    Return CType(Me(Me.tableAquatic_Toxicity.IsProductColumn),Boolean)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'IsProduct' in table 'Aquatic Toxicity' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableAquatic_Toxicity.IsProductColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property Substance() As String
            Get
                Try 
                    Return CType(Me(Me.tableAquatic_Toxicity.SubstanceColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Substance' in table 'Aquatic Toxicity' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableAquatic_Toxicity.SubstanceColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property Concentration() As String
            Get
                Try 
                    Return CType(Me(Me.tableAquatic_Toxicity.ConcentrationColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Concentration' in table 'Aquatic Toxicity' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableAquatic_Toxicity.ConcentrationColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property Test() As String
            Get
                Try 
                    Return CType(Me(Me.tableAquatic_Toxicity.TestColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Test' in table 'Aquatic Toxicity' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableAquatic_Toxicity.TestColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property Result() As String
            Get
                Try 
                    Return CType(Me(Me.tableAquatic_Toxicity.ResultColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Result' in table 'Aquatic Toxicity' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableAquatic_Toxicity.ResultColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property Notes() As String
            Get
                Try 
                    Return CType(Me(Me.tableAquatic_Toxicity.NotesColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Notes' in table 'Aquatic Toxicity' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableAquatic_Toxicity.NotesColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property Source() As String
            Get
                Try 
                    Return CType(Me(Me.tableAquatic_Toxicity.SourceColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Source' in table 'Aquatic Toxicity' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableAquatic_Toxicity.SourceColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property Source_embed() As String
            Get
                Try 
                    Return CType(Me(Me.tableAquatic_Toxicity.Source_embedColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Source embed' in table 'Aquatic Toxicity' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableAquatic_Toxicity.Source_embedColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property Type() As String
            Get
                Try 
                    Return CType(Me(Me.tableAquatic_Toxicity.TypeColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Type' in table 'Aquatic Toxicity' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableAquatic_Toxicity.TypeColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsAQTIDIDNull() As Boolean
            Return Me.IsNull(Me.tableAquatic_Toxicity.AQTIDIDColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetAQTIDIDNull()
            Me(Me.tableAquatic_Toxicity.AQTIDIDColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsSubsortNull() As Boolean
            Return Me.IsNull(Me.tableAquatic_Toxicity.SubsortColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetSubsortNull()
            Me(Me.tableAquatic_Toxicity.SubsortColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsIsProductNull() As Boolean
            Return Me.IsNull(Me.tableAquatic_Toxicity.IsProductColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetIsProductNull()
            Me(Me.tableAquatic_Toxicity.IsProductColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsSubstanceNull() As Boolean
            Return Me.IsNull(Me.tableAquatic_Toxicity.SubstanceColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetSubstanceNull()
            Me(Me.tableAquatic_Toxicity.SubstanceColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsConcentrationNull() As Boolean
            Return Me.IsNull(Me.tableAquatic_Toxicity.ConcentrationColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetConcentrationNull()
            Me(Me.tableAquatic_Toxicity.ConcentrationColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsTestNull() As Boolean
            Return Me.IsNull(Me.tableAquatic_Toxicity.TestColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetTestNull()
            Me(Me.tableAquatic_Toxicity.TestColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsResultNull() As Boolean
            Return Me.IsNull(Me.tableAquatic_Toxicity.ResultColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetResultNull()
            Me(Me.tableAquatic_Toxicity.ResultColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsNotesNull() As Boolean
            Return Me.IsNull(Me.tableAquatic_Toxicity.NotesColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetNotesNull()
            Me(Me.tableAquatic_Toxicity.NotesColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsSourceNull() As Boolean
            Return Me.IsNull(Me.tableAquatic_Toxicity.SourceColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetSourceNull()
            Me(Me.tableAquatic_Toxicity.SourceColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsSource_embedNull() As Boolean
            Return Me.IsNull(Me.tableAquatic_Toxicity.Source_embedColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetSource_embedNull()
            Me(Me.tableAquatic_Toxicity.Source_embedColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsTypeNull() As Boolean
            Return Me.IsNull(Me.tableAquatic_Toxicity.TypeColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetTypeNull()
            Me(Me.tableAquatic_Toxicity.TypeColumn) = Global.System.Convert.DBNull
        End Sub
    End Class
    
    '''<summary>
    '''Represents strongly named DataRow class.
    '''</summary>
    Partial Public Class BrandingRow
        Inherits Global.System.Data.DataRow
        
        Private tableBranding As BrandingDataTable
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Sub New(ByVal rb As Global.System.Data.DataRowBuilder)
            MyBase.New(rb)
            Me.tableBranding = CType(Me.Table,BrandingDataTable)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property CID() As Integer
            Get
                Return CType(Me(Me.tableBranding.CIDColumn),Integer)
            End Get
            Set
                Me(Me.tableBranding.CIDColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property Supplier_fullname() As String
            Get
                Try 
                    Return CType(Me(Me.tableBranding.Supplier_fullnameColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Supplier_fullname' in table 'Branding' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableBranding.Supplier_fullnameColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property Supplier() As String
            Get
                Try 
                    Return CType(Me(Me.tableBranding.SupplierColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Supplier' in table 'Branding' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableBranding.SupplierColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property Supplier_address_1() As String
            Get
                Try 
                    Return CType(Me(Me.tableBranding.Supplier_address_1Column),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Supplier_address_1' in table 'Branding' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableBranding.Supplier_address_1Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property Supplier_address_2() As String
            Get
                Try 
                    Return CType(Me(Me.tableBranding.Supplier_address_2Column),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Supplier_address_2' in table 'Branding' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableBranding.Supplier_address_2Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property Supplier_address_3() As String
            Get
                Try 
                    Return CType(Me(Me.tableBranding.Supplier_address_3Column),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Supplier_address_3' in table 'Branding' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableBranding.Supplier_address_3Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property Supplier_city() As String
            Get
                Try 
                    Return CType(Me(Me.tableBranding.Supplier_cityColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Supplier_city' in table 'Branding' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableBranding.Supplier_cityColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property Supplier_state() As String
            Get
                Try 
                    Return CType(Me(Me.tableBranding.Supplier_stateColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Supplier_state' in table 'Branding' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableBranding.Supplier_stateColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property Supplier_zip() As String
            Get
                Try 
                    Return CType(Me(Me.tableBranding.Supplier_zipColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Supplier_zip' in table 'Branding' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableBranding.Supplier_zipColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property Supplier_phone() As String
            Get
                Try 
                    Return CType(Me(Me.tableBranding.Supplier_phoneColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Supplier_phone' in table 'Branding' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableBranding.Supplier_phoneColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property Supplier_ec() As String
            Get
                Try 
                    Return CType(Me(Me.tableBranding.Supplier_ecColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Supplier_ec' in table 'Branding' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableBranding.Supplier_ecColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property Website() As String
            Get
                Try 
                    Return CType(Me(Me.tableBranding.WebsiteColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Website' in table 'Branding' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableBranding.WebsiteColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property Supplier_address() As String
            Get
                Try 
                    Return CType(Me(Me.tableBranding.Supplier_addressColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Supplier_address' in table 'Branding' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableBranding.Supplier_addressColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsSupplier_fullnameNull() As Boolean
            Return Me.IsNull(Me.tableBranding.Supplier_fullnameColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetSupplier_fullnameNull()
            Me(Me.tableBranding.Supplier_fullnameColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsSupplierNull() As Boolean
            Return Me.IsNull(Me.tableBranding.SupplierColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetSupplierNull()
            Me(Me.tableBranding.SupplierColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsSupplier_address_1Null() As Boolean
            Return Me.IsNull(Me.tableBranding.Supplier_address_1Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetSupplier_address_1Null()
            Me(Me.tableBranding.Supplier_address_1Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsSupplier_address_2Null() As Boolean
            Return Me.IsNull(Me.tableBranding.Supplier_address_2Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetSupplier_address_2Null()
            Me(Me.tableBranding.Supplier_address_2Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsSupplier_address_3Null() As Boolean
            Return Me.IsNull(Me.tableBranding.Supplier_address_3Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetSupplier_address_3Null()
            Me(Me.tableBranding.Supplier_address_3Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsSupplier_cityNull() As Boolean
            Return Me.IsNull(Me.tableBranding.Supplier_cityColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetSupplier_cityNull()
            Me(Me.tableBranding.Supplier_cityColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsSupplier_stateNull() As Boolean
            Return Me.IsNull(Me.tableBranding.Supplier_stateColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetSupplier_stateNull()
            Me(Me.tableBranding.Supplier_stateColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsSupplier_zipNull() As Boolean
            Return Me.IsNull(Me.tableBranding.Supplier_zipColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetSupplier_zipNull()
            Me(Me.tableBranding.Supplier_zipColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsSupplier_phoneNull() As Boolean
            Return Me.IsNull(Me.tableBranding.Supplier_phoneColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetSupplier_phoneNull()
            Me(Me.tableBranding.Supplier_phoneColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsSupplier_ecNull() As Boolean
            Return Me.IsNull(Me.tableBranding.Supplier_ecColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetSupplier_ecNull()
            Me(Me.tableBranding.Supplier_ecColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsWebsiteNull() As Boolean
            Return Me.IsNull(Me.tableBranding.WebsiteColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetWebsiteNull()
            Me(Me.tableBranding.WebsiteColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsSupplier_addressNull() As Boolean
            Return Me.IsNull(Me.tableBranding.Supplier_addressColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetSupplier_addressNull()
            Me(Me.tableBranding.Supplier_addressColumn) = Global.System.Convert.DBNull
        End Sub
    End Class
    
    '''<summary>
    '''Represents strongly named DataRow class.
    '''</summary>
    Partial Public Class ClassificationsRow
        Inherits Global.System.Data.DataRow
        
        Private tableClassifications As ClassificationsDataTable
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Sub New(ByVal rb As Global.System.Data.DataRowBuilder)
            MyBase.New(rb)
            Me.tableClassifications = CType(Me.Table,ClassificationsDataTable)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property Product_name() As String
            Get
                Try 
                    Return CType(Me(Me.tableClassifications.Product_nameColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Product_name' in table 'Classifications' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableClassifications.Product_nameColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property Key() As Integer
            Get
                Try 
                    Return CType(Me(Me.tableClassifications.KeyColumn),Integer)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Key' in table 'Classifications' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableClassifications.KeyColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property Keyy() As Integer
            Get
                Try 
                    Return CType(Me(Me.tableClassifications.KeyyColumn),Integer)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Keyy' in table 'Classifications' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableClassifications.KeyyColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsProduct_nameNull() As Boolean
            Return Me.IsNull(Me.tableClassifications.Product_nameColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetProduct_nameNull()
            Me(Me.tableClassifications.Product_nameColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsKeyNull() As Boolean
            Return Me.IsNull(Me.tableClassifications.KeyColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetKeyNull()
            Me(Me.tableClassifications.KeyColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsKeyyNull() As Boolean
            Return Me.IsNull(Me.tableClassifications.KeyyColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetKeyyNull()
            Me(Me.tableClassifications.KeyyColumn) = Global.System.Convert.DBNull
        End Sub
    End Class
    
    '''<summary>
    '''Represents strongly named DataRow class.
    '''</summary>
    Partial Public Class ComponentsRow
        Inherits Global.System.Data.DataRow
        
        Private tableComponents As ComponentsDataTable
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Sub New(ByVal rb As Global.System.Data.DataRowBuilder)
            MyBase.New(rb)
            Me.tableComponents = CType(Me.Table,ComponentsDataTable)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property CMPID() As Integer
            Get
                Try 
                    Return CType(Me(Me.tableComponents.CMPIDColumn),Integer)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'CMPID' in table 'Components' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableComponents.CMPIDColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property Substance() As String
            Get
                Return CType(Me(Me.tableComponents.SubstanceColumn),String)
            End Get
            Set
                Me(Me.tableComponents.SubstanceColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property SDS_Name() As String
            Get
                Try 
                    Return CType(Me(Me.tableComponents.SDS_NameColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'SDS_Name' in table 'Components' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableComponents.SDS_NameColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property ListOfListsName() As String
            Get
                Try 
                    Return CType(Me(Me.tableComponents.ListOfListsNameColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'ListOfListsName' in table 'Components' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableComponents.ListOfListsNameColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property Aliases() As String
            Get
                Try 
                    Return CType(Me(Me.tableComponents.AliasesColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Aliases' in table 'Components' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableComponents.AliasesColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property Proprietary() As Boolean
            Get
                Try 
                    Return CType(Me(Me.tableComponents.ProprietaryColumn),Boolean)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Proprietary' in table 'Components' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableComponents.ProprietaryColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property CAS() As String
            Get
                Try 
                    Return CType(Me(Me.tableComponents.CASColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'CAS' in table 'Components' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableComponents.CASColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property PEL() As String
            Get
                Try 
                    Return CType(Me(Me.tableComponents.PELColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'PEL' in table 'Components' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableComponents.PELColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property ACGIH() As String
            Get
                Try 
                    Return CType(Me(Me.tableComponents.ACGIHColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'ACGIH' in table 'Components' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableComponents.ACGIHColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property CERCLA_RQ() As String
            Get
                Try 
                    Return CType(Me(Me.tableComponents.CERCLA_RQColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'CERCLA_RQ' in table 'Components' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableComponents.CERCLA_RQColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property SARA313() As String
            Get
                Try 
                    Return CType(Me(Me.tableComponents.SARA313Column),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'SARA313' in table 'Components' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableComponents.SARA313Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property SARA302TPQ() As String
            Get
                Try 
                    Return CType(Me(Me.tableComponents.SARA302TPQColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'SARA302TPQ' in table 'Components' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableComponents.SARA302TPQColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property SARA302RQ() As String
            Get
                Try 
                    Return CType(Me(Me.tableComponents.SARA302RQColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'SARA302RQ' in table 'Components' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableComponents.SARA302RQColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property RCRACODE() As String
            Get
                Try 
                    Return CType(Me(Me.tableComponents.RCRACODEColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'RCRACODE' in table 'Components' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableComponents.RCRACODEColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property IsProduct() As Boolean
            Get
                Try 
                    Return CType(Me(Me.tableComponents.IsProductColumn),Boolean)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'IsProduct' in table 'Components' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableComponents.IsProductColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property IARC() As String
            Get
                Try 
                    Return CType(Me(Me.tableComponents.IARCColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'IARC' in table 'Components' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableComponents.IARCColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property NTP() As String
            Get
                Try 
                    Return CType(Me(Me.tableComponents.NTPColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'NTP' in table 'Components' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableComponents.NTPColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property Note() As String
            Get
                Try 
                    Return CType(Me(Me.tableComponents.NoteColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Note' in table 'Components' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableComponents.NoteColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsCMPIDNull() As Boolean
            Return Me.IsNull(Me.tableComponents.CMPIDColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetCMPIDNull()
            Me(Me.tableComponents.CMPIDColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsSDS_NameNull() As Boolean
            Return Me.IsNull(Me.tableComponents.SDS_NameColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetSDS_NameNull()
            Me(Me.tableComponents.SDS_NameColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsListOfListsNameNull() As Boolean
            Return Me.IsNull(Me.tableComponents.ListOfListsNameColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetListOfListsNameNull()
            Me(Me.tableComponents.ListOfListsNameColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsAliasesNull() As Boolean
            Return Me.IsNull(Me.tableComponents.AliasesColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetAliasesNull()
            Me(Me.tableComponents.AliasesColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsProprietaryNull() As Boolean
            Return Me.IsNull(Me.tableComponents.ProprietaryColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetProprietaryNull()
            Me(Me.tableComponents.ProprietaryColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsCASNull() As Boolean
            Return Me.IsNull(Me.tableComponents.CASColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetCASNull()
            Me(Me.tableComponents.CASColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsPELNull() As Boolean
            Return Me.IsNull(Me.tableComponents.PELColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetPELNull()
            Me(Me.tableComponents.PELColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsACGIHNull() As Boolean
            Return Me.IsNull(Me.tableComponents.ACGIHColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetACGIHNull()
            Me(Me.tableComponents.ACGIHColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsCERCLA_RQNull() As Boolean
            Return Me.IsNull(Me.tableComponents.CERCLA_RQColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetCERCLA_RQNull()
            Me(Me.tableComponents.CERCLA_RQColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsSARA313Null() As Boolean
            Return Me.IsNull(Me.tableComponents.SARA313Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetSARA313Null()
            Me(Me.tableComponents.SARA313Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsSARA302TPQNull() As Boolean
            Return Me.IsNull(Me.tableComponents.SARA302TPQColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetSARA302TPQNull()
            Me(Me.tableComponents.SARA302TPQColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsSARA302RQNull() As Boolean
            Return Me.IsNull(Me.tableComponents.SARA302RQColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetSARA302RQNull()
            Me(Me.tableComponents.SARA302RQColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsRCRACODENull() As Boolean
            Return Me.IsNull(Me.tableComponents.RCRACODEColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetRCRACODENull()
            Me(Me.tableComponents.RCRACODEColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsIsProductNull() As Boolean
            Return Me.IsNull(Me.tableComponents.IsProductColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetIsProductNull()
            Me(Me.tableComponents.IsProductColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsIARCNull() As Boolean
            Return Me.IsNull(Me.tableComponents.IARCColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetIARCNull()
            Me(Me.tableComponents.IARCColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsNTPNull() As Boolean
            Return Me.IsNull(Me.tableComponents.NTPColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetNTPNull()
            Me(Me.tableComponents.NTPColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsNoteNull() As Boolean
            Return Me.IsNull(Me.tableComponents.NoteColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetNoteNull()
            Me(Me.tableComponents.NoteColumn) = Global.System.Convert.DBNull
        End Sub
    End Class
    
    '''<summary>
    '''Represents strongly named DataRow class.
    '''</summary>
    Partial Public Class DefaultsRow
        Inherits Global.System.Data.DataRow
        
        Private tableDefaults As DefaultsDataTable
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Sub New(ByVal rb As Global.System.Data.DataRowBuilder)
            MyBase.New(rb)
            Me.tableDefaults = CType(Me.Table,DefaultsDataTable)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property Preset() As String
            Get
                Try 
                    Return CType(Me(Me.tableDefaults.PresetColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Preset' in table 'Defaults' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableDefaults.PresetColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property Hazard_classification() As String
            Get
                Try 
                    Return CType(Me(Me.tableDefaults.Hazard_classificationColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Hazard_classification' in table 'Defaults' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableDefaults.Hazard_classificationColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property Signal_word() As String
            Get
                Try 
                    Return CType(Me(Me.tableDefaults.Signal_wordColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Signal_word' in table 'Defaults' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableDefaults.Signal_wordColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property Hazard_statement() As String
            Get
                Try 
                    Return CType(Me(Me.tableDefaults.Hazard_statementColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Hazard_statement' in table 'Defaults' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableDefaults.Hazard_statementColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property Pict1() As String
            Get
                Try 
                    Return CType(Me(Me.tableDefaults.Pict1Column),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Pict1' in table 'Defaults' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableDefaults.Pict1Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property Pict2() As String
            Get
                Try 
                    Return CType(Me(Me.tableDefaults.Pict2Column),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Pict2' in table 'Defaults' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableDefaults.Pict2Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property Pict3() As String
            Get
                Try 
                    Return CType(Me(Me.tableDefaults.Pict3Column),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Pict3' in table 'Defaults' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableDefaults.Pict3Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property Pict4() As String
            Get
                Try 
                    Return CType(Me(Me.tableDefaults.Pict4Column),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Pict4' in table 'Defaults' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableDefaults.Pict4Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property Pre_prevention() As String
            Get
                Try 
                    Return CType(Me(Me.tableDefaults.Pre_preventionColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Pre_prevention' in table 'Defaults' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableDefaults.Pre_preventionColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property Pre_response() As String
            Get
                Try 
                    Return CType(Me(Me.tableDefaults.Pre_responseColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Pre_response' in table 'Defaults' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableDefaults.Pre_responseColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property Pre_storage() As String
            Get
                Try 
                    Return CType(Me(Me.tableDefaults.Pre_storageColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Pre_storage' in table 'Defaults' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableDefaults.Pre_storageColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property Pre_disposal() As String
            Get
                Try 
                    Return CType(Me(Me.tableDefaults.Pre_disposalColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Pre_disposal' in table 'Defaults' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableDefaults.Pre_disposalColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property Component() As String
            Get
                Try 
                    Return CType(Me(Me.tableDefaults.ComponentColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Component' in table 'Defaults' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableDefaults.ComponentColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property FA_eye_contact() As String
            Get
                Try 
                    Return CType(Me(Me.tableDefaults.FA_eye_contactColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'FA_eye_contact' in table 'Defaults' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableDefaults.FA_eye_contactColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property FA_skin_contact() As String
            Get
                Try 
                    Return CType(Me(Me.tableDefaults.FA_skin_contactColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'FA_skin_contact' in table 'Defaults' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableDefaults.FA_skin_contactColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property FA_ingestion() As String
            Get
                Try 
                    Return CType(Me(Me.tableDefaults.FA_ingestionColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'FA_ingestion' in table 'Defaults' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableDefaults.FA_ingestionColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property FA_inhalation() As String
            Get
                Try 
                    Return CType(Me(Me.tableDefaults.FA_inhalationColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'FA_inhalation' in table 'Defaults' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableDefaults.FA_inhalationColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property Note_to_HCP() As String
            Get
                Try 
                    Return CType(Me(Me.tableDefaults.Note_to_HCPColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Note_to_HCP' in table 'Defaults' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableDefaults.Note_to_HCPColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property Suitable_extinguishing_media() As String
            Get
                Try 
                    Return CType(Me(Me.tableDefaults.Suitable_extinguishing_mediaColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Suitable_extinguishing_media' in table 'Defaults' is DBNull"& _ 
                            ".", e)
                End Try
            End Get
            Set
                Me(Me.tableDefaults.Suitable_extinguishing_mediaColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property Unsuitable_extinguishing_media() As String
            Get
                Try 
                    Return CType(Me(Me.tableDefaults.Unsuitable_extinguishing_mediaColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Unsuitable_extinguishing_media' in table 'Defaults' is DBNu"& _ 
                            "ll.", e)
                End Try
            End Get
            Set
                Me(Me.tableDefaults.Unsuitable_extinguishing_mediaColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property Precautions_for_firefighters() As String
            Get
                Try 
                    Return CType(Me(Me.tableDefaults.Precautions_for_firefightersColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Precautions_for_firefighters' in table 'Defaults' is DBNull"& _ 
                            ".", e)
                End Try
            End Get
            Set
                Me(Me.tableDefaults.Precautions_for_firefightersColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property Specific_hazards() As String
            Get
                Try 
                    Return CType(Me(Me.tableDefaults.Specific_hazardsColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Specific_hazards' in table 'Defaults' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableDefaults.Specific_hazardsColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property Hazardous_combustion_products() As String
            Get
                Try 
                    Return CType(Me(Me.tableDefaults.Hazardous_combustion_productsColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Hazardous_combustion_products' in table 'Defaults' is DBNul"& _ 
                            "l.", e)
                End Try
            End Get
            Set
                Me(Me.tableDefaults.Hazardous_combustion_productsColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property Personal_precautions() As String
            Get
                Try 
                    Return CType(Me(Me.tableDefaults.Personal_precautionsColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Personal_precautions' in table 'Defaults' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableDefaults.Personal_precautionsColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property Small_spills() As String
            Get
                Try 
                    Return CType(Me(Me.tableDefaults.Small_spillsColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Small_spills' in table 'Defaults' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableDefaults.Small_spillsColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property Large_spills() As String
            Get
                Try 
                    Return CType(Me(Me.tableDefaults.Large_spillsColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Large_spills' in table 'Defaults' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableDefaults.Large_spillsColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property Advice_on_safe_handling() As String
            Get
                Try 
                    Return CType(Me(Me.tableDefaults.Advice_on_safe_handlingColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Advice_on_safe_handling' in table 'Defaults' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableDefaults.Advice_on_safe_handlingColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property Storage_conditions() As String
            Get
                Try 
                    Return CType(Me(Me.tableDefaults.Storage_conditionsColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Storage_conditions' in table 'Defaults' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableDefaults.Storage_conditionsColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property Suitable_materials_of_construction() As String
            Get
                Try 
                    Return CType(Me(Me.tableDefaults.Suitable_materials_of_constructionColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Suitable_materials_of_construction' in table 'Defaults' is "& _ 
                            "DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableDefaults.Suitable_materials_of_constructionColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property Unsuitable_materials_of_construction() As String
            Get
                Try 
                    Return CType(Me(Me.tableDefaults.Unsuitable_materials_of_constructionColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Unsuitable_materials_of_construction' in table 'Defaults' i"& _ 
                            "s DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableDefaults.Unsuitable_materials_of_constructionColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property Eye_face_protection() As String
            Get
                Try 
                    Return CType(Me(Me.tableDefaults.Eye_face_protectionColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Eye_face_protection' in table 'Defaults' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableDefaults.Eye_face_protectionColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property Skin_protection() As String
            Get
                Try 
                    Return CType(Me(Me.tableDefaults.Skin_protectionColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Skin_protection' in table 'Defaults' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableDefaults.Skin_protectionColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property Respiratory_protection() As String
            Get
                Try 
                    Return CType(Me(Me.tableDefaults.Respiratory_protectionColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Respiratory_protection' in table 'Defaults' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableDefaults.Respiratory_protectionColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property Engineering_controls() As String
            Get
                Try 
                    Return CType(Me(Me.tableDefaults.Engineering_controlsColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Engineering_controls' in table 'Defaults' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableDefaults.Engineering_controlsColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property General_hygiene_considerations() As String
            Get
                Try 
                    Return CType(Me(Me.tableDefaults.General_hygiene_considerationsColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'General_hygiene_considerations' in table 'Defaults' is DBNu"& _ 
                            "ll.", e)
                End Try
            End Get
            Set
                Me(Me.tableDefaults.General_hygiene_considerationsColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property Chemical_stability() As String
            Get
                Try 
                    Return CType(Me(Me.tableDefaults.Chemical_stabilityColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Chemical_stability' in table 'Defaults' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableDefaults.Chemical_stabilityColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property Hazardous_polymerization() As String
            Get
                Try 
                    Return CType(Me(Me.tableDefaults.Hazardous_polymerizationColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Hazardous_polymerization' in table 'Defaults' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableDefaults.Hazardous_polymerizationColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property Conditions_to_avoid() As String
            Get
                Try 
                    Return CType(Me(Me.tableDefaults.Conditions_to_avoidColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Conditions_to_avoid' in table 'Defaults' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableDefaults.Conditions_to_avoidColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property Incompatibilities() As String
            Get
                Try 
                    Return CType(Me(Me.tableDefaults.IncompatibilitiesColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Incompatibilities' in table 'Defaults' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableDefaults.IncompatibilitiesColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property Hazardous_decomposition_products() As String
            Get
                Try 
                    Return CType(Me(Me.tableDefaults.Hazardous_decomposition_productsColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Hazardous_decomposition_products' in table 'Defaults' is DB"& _ 
                            "Null.", e)
                End Try
            End Get
            Set
                Me(Me.tableDefaults.Hazardous_decomposition_productsColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property Likely_routes_of_exposure() As String
            Get
                Try 
                    Return CType(Me(Me.tableDefaults.Likely_routes_of_exposureColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Likely_routes_of_exposure' in table 'Defaults' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableDefaults.Likely_routes_of_exposureColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property Eye_contact() As String
            Get
                Try 
                    Return CType(Me(Me.tableDefaults.Eye_contactColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Eye_contact' in table 'Defaults' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableDefaults.Eye_contactColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property Odor_threshold() As String
            Get
                Try 
                    Return CType(Me(Me.tableDefaults.Odor_thresholdColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Odor_threshold' in table 'Defaults' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableDefaults.Odor_thresholdColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property Skin_contact() As String
            Get
                Try 
                    Return CType(Me(Me.tableDefaults.Skin_contactColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Skin_contact' in table 'Defaults' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableDefaults.Skin_contactColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property Ingestion() As String
            Get
                Try 
                    Return CType(Me(Me.tableDefaults.IngestionColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Ingestion' in table 'Defaults' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableDefaults.IngestionColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property Inhalation() As String
            Get
                Try 
                    Return CType(Me(Me.tableDefaults.InhalationColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Inhalation' in table 'Defaults' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableDefaults.InhalationColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property Reproductive_effects() As String
            Get
                Try 
                    Return CType(Me(Me.tableDefaults.Reproductive_effectsColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Reproductive_effects' in table 'Defaults' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableDefaults.Reproductive_effectsColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property Teratogenicity() As String
            Get
                Try 
                    Return CType(Me(Me.tableDefaults.TeratogenicityColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Teratogenicity' in table 'Defaults' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableDefaults.TeratogenicityColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property Explosive_limits() As String
            Get
                Try 
                    Return CType(Me(Me.tableDefaults.Explosive_limitsColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Explosive_limits' in table 'Defaults' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableDefaults.Explosive_limitsColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property Mutagenicity() As String
            Get
                Try 
                    Return CType(Me(Me.tableDefaults.MutagenicityColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Mutagenicity' in table 'Defaults' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableDefaults.MutagenicityColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property Embryotoxicity() As String
            Get
                Try 
                    Return CType(Me(Me.tableDefaults.EmbryotoxicityColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Embryotoxicity' in table 'Defaults' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableDefaults.EmbryotoxicityColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property Sensitization_to_product() As String
            Get
                Try 
                    Return CType(Me(Me.tableDefaults.Sensitization_to_productColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Sensitization_to_product' in table 'Defaults' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableDefaults.Sensitization_to_productColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property Synergistic_products() As String
            Get
                Try 
                    Return CType(Me(Me.tableDefaults.Synergistic_productsColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Synergistic_products' in table 'Defaults' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableDefaults.Synergistic_productsColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property Carcinogenicity() As String
            Get
                Try 
                    Return CType(Me(Me.tableDefaults.CarcinogenicityColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Carcinogenicity' in table 'Defaults' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableDefaults.CarcinogenicityColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property Specific_gravity() As String
            Get
                Try 
                    Return CType(Me(Me.tableDefaults.Specific_gravityColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Specific_gravity' in table 'Defaults' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableDefaults.Specific_gravityColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property Chronic() As String
            Get
                Try 
                    Return CType(Me(Me.tableDefaults.ChronicColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Chronic' in table 'Defaults' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableDefaults.ChronicColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property Persistence() As String
            Get
                Try 
                    Return CType(Me(Me.tableDefaults.PersistenceColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Persistence' in table 'Defaults' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableDefaults.PersistenceColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property Bioaccumulative_potential() As String
            Get
                Try 
                    Return CType(Me(Me.tableDefaults.Bioaccumulative_potentialColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Bioaccumulative_potential' in table 'Defaults' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableDefaults.Bioaccumulative_potentialColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property Mobility() As String
            Get
                Try 
                    Return CType(Me(Me.tableDefaults.MobilityColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Mobility' in table 'Defaults' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableDefaults.MobilityColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property Disposal() As String
            Get
                Try 
                    Return CType(Me(Me.tableDefaults.DisposalColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Disposal' in table 'Defaults' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableDefaults.DisposalColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property Viscosity() As String
            Get
                Try 
                    Return CType(Me(Me.tableDefaults.ViscosityColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Viscosity' in table 'Defaults' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableDefaults.ViscosityColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property RCRA_status() As String
            Get
                Try 
                    Return CType(Me(Me.tableDefaults.RCRA_statusColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'RCRA_status' in table 'Defaults' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableDefaults.RCRA_statusColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property FA_Eye_Contact_code() As Integer
            Get
                Try 
                    Return CType(Me(Me.tableDefaults.FA_Eye_Contact_codeColumn),Integer)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'FA_Eye_Contact_code' in table 'Defaults' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableDefaults.FA_Eye_Contact_codeColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property FA_skin_contact_code() As Integer
            Get
                Try 
                    Return CType(Me(Me.tableDefaults.FA_skin_contact_codeColumn),Integer)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'FA_skin_contact_code' in table 'Defaults' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableDefaults.FA_skin_contact_codeColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property FA_inhalation_code() As Integer
            Get
                Try 
                    Return CType(Me(Me.tableDefaults.FA_inhalation_codeColumn),Integer)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'FA_inhalation_code' in table 'Defaults' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableDefaults.FA_inhalation_codeColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property FA_ingestion_code() As Integer
            Get
                Try 
                    Return CType(Me(Me.tableDefaults.FA_ingestion_codeColumn),Integer)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'FA_ingestion_code' in table 'Defaults' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableDefaults.FA_ingestion_codeColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property Note_to_hcp_code() As Integer
            Get
                Try 
                    Return CType(Me(Me.tableDefaults.Note_to_hcp_codeColumn),Integer)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Note_to_hcp_code' in table 'Defaults' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableDefaults.Note_to_hcp_codeColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property Suitable_extinguishing_media_code() As Integer
            Get
                Try 
                    Return CType(Me(Me.tableDefaults.Suitable_extinguishing_media_codeColumn),Integer)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Suitable_extinguishing_media_code' in table 'Defaults' is D"& _ 
                            "BNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableDefaults.Suitable_extinguishing_media_codeColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property Unsuitable_extinguishing_media_code() As Integer
            Get
                Try 
                    Return CType(Me(Me.tableDefaults.Unsuitable_extinguishing_media_codeColumn),Integer)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Unsuitable_extinguishing_media_code' in table 'Defaults' is"& _ 
                            " DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableDefaults.Unsuitable_extinguishing_media_codeColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property Precautions_for_firefighters_code() As Integer
            Get
                Try 
                    Return CType(Me(Me.tableDefaults.Precautions_for_firefighters_codeColumn),Integer)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Precautions_for_firefighters_code' in table 'Defaults' is D"& _ 
                            "BNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableDefaults.Precautions_for_firefighters_codeColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property Specific_hazards_code() As Integer
            Get
                Try 
                    Return CType(Me(Me.tableDefaults.Specific_hazards_codeColumn),Integer)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Specific_hazards_code' in table 'Defaults' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableDefaults.Specific_hazards_codeColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property Hazardous_combustion_products_code() As Integer
            Get
                Try 
                    Return CType(Me(Me.tableDefaults.Hazardous_combustion_products_codeColumn),Integer)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Hazardous_combustion_products_code' in table 'Defaults' is "& _ 
                            "DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableDefaults.Hazardous_combustion_products_codeColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property Personal_precautions_code() As Integer
            Get
                Try 
                    Return CType(Me(Me.tableDefaults.Personal_precautions_codeColumn),Integer)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Personal_precautions_code' in table 'Defaults' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableDefaults.Personal_precautions_codeColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property Small_spills_code() As Integer
            Get
                Try 
                    Return CType(Me(Me.tableDefaults.Small_spills_codeColumn),Integer)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Small_spills_code' in table 'Defaults' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableDefaults.Small_spills_codeColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property Large_spills_code() As Integer
            Get
                Try 
                    Return CType(Me(Me.tableDefaults.Large_spills_codeColumn),Integer)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Large_spills_code' in table 'Defaults' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableDefaults.Large_spills_codeColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property Advice_on_safe_handling_code() As Integer
            Get
                Try 
                    Return CType(Me(Me.tableDefaults.Advice_on_safe_handling_codeColumn),Integer)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Advice_on_safe_handling_code' in table 'Defaults' is DBNull"& _ 
                            ".", e)
                End Try
            End Get
            Set
                Me(Me.tableDefaults.Advice_on_safe_handling_codeColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property Storage_conditions_code() As Integer
            Get
                Try 
                    Return CType(Me(Me.tableDefaults.Storage_conditions_codeColumn),Integer)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Storage_conditions_code' in table 'Defaults' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableDefaults.Storage_conditions_codeColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property Suitable_materials_of_construction_code() As Integer
            Get
                Try 
                    Return CType(Me(Me.tableDefaults.Suitable_materials_of_construction_codeColumn),Integer)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Suitable_materials_of_construction_code' in table 'Defaults"& _ 
                            "' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableDefaults.Suitable_materials_of_construction_codeColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property Unsuitable_materials_of_construction_code() As Integer
            Get
                Try 
                    Return CType(Me(Me.tableDefaults.Unsuitable_materials_of_construction_codeColumn),Integer)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Unsuitable_materials_of_construction_code' in table 'Defaul"& _ 
                            "ts' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableDefaults.Unsuitable_materials_of_construction_codeColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property Eye_face_protection_code() As Integer
            Get
                Try 
                    Return CType(Me(Me.tableDefaults.Eye_face_protection_codeColumn),Integer)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Eye_face_protection_code' in table 'Defaults' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableDefaults.Eye_face_protection_codeColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property Skin_protection_code() As Integer
            Get
                Try 
                    Return CType(Me(Me.tableDefaults.Skin_protection_codeColumn),Integer)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Skin_protection_code' in table 'Defaults' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableDefaults.Skin_protection_codeColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property Respiratory_protection_code() As Integer
            Get
                Try 
                    Return CType(Me(Me.tableDefaults.Respiratory_protection_codeColumn),Integer)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Respiratory_protection_code' in table 'Defaults' is DBNull."& _ 
                            "", e)
                End Try
            End Get
            Set
                Me(Me.tableDefaults.Respiratory_protection_codeColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property Engineering_controls_code() As Integer
            Get
                Try 
                    Return CType(Me(Me.tableDefaults.Engineering_controls_codeColumn),Integer)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Engineering_controls_code' in table 'Defaults' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableDefaults.Engineering_controls_codeColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property General_hygiene_considerations_code() As Integer
            Get
                Try 
                    Return CType(Me(Me.tableDefaults.General_hygiene_considerations_codeColumn),Integer)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'General_hygiene_considerations_code' in table 'Defaults' is"& _ 
                            " DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableDefaults.General_hygiene_considerations_codeColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property Chemical_stability_code() As Integer
            Get
                Try 
                    Return CType(Me(Me.tableDefaults.Chemical_stability_codeColumn),Integer)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Chemical_stability_code' in table 'Defaults' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableDefaults.Chemical_stability_codeColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property Hazardous_polymerization_code() As Integer
            Get
                Try 
                    Return CType(Me(Me.tableDefaults.Hazardous_polymerization_codeColumn),Integer)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Hazardous_polymerization_code' in table 'Defaults' is DBNul"& _ 
                            "l.", e)
                End Try
            End Get
            Set
                Me(Me.tableDefaults.Hazardous_polymerization_codeColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property Conditions_to_avoid_code() As Integer
            Get
                Try 
                    Return CType(Me(Me.tableDefaults.Conditions_to_avoid_codeColumn),Integer)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Conditions_to_avoid_code' in table 'Defaults' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableDefaults.Conditions_to_avoid_codeColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property Incompatibilities_code() As Integer
            Get
                Try 
                    Return CType(Me(Me.tableDefaults.Incompatibilities_codeColumn),Integer)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Incompatibilities_code' in table 'Defaults' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableDefaults.Incompatibilities_codeColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property Hazardous_decomposition_products_code() As Integer
            Get
                Try 
                    Return CType(Me(Me.tableDefaults.Hazardous_decomposition_products_codeColumn),Integer)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Hazardous_decomposition_products_code' in table 'Defaults' "& _ 
                            "is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableDefaults.Hazardous_decomposition_products_codeColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property Likely_routes_of_exposure_code() As Integer
            Get
                Try 
                    Return CType(Me(Me.tableDefaults.Likely_routes_of_exposure_codeColumn),Integer)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Likely_routes_of_exposure_code' in table 'Defaults' is DBNu"& _ 
                            "ll.", e)
                End Try
            End Get
            Set
                Me(Me.tableDefaults.Likely_routes_of_exposure_codeColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property Skin_contact_code() As Integer
            Get
                Try 
                    Return CType(Me(Me.tableDefaults.Skin_contact_codeColumn),Integer)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Skin_contact_code' in table 'Defaults' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableDefaults.Skin_contact_codeColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property Ingestion_code() As Integer
            Get
                Try 
                    Return CType(Me(Me.tableDefaults.Ingestion_codeColumn),Integer)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Ingestion_code' in table 'Defaults' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableDefaults.Ingestion_codeColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property Inhalation_code() As Integer
            Get
                Try 
                    Return CType(Me(Me.tableDefaults.Inhalation_codeColumn),Integer)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Inhalation_code' in table 'Defaults' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableDefaults.Inhalation_codeColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property Reproductive_effects_code() As Integer
            Get
                Try 
                    Return CType(Me(Me.tableDefaults.Reproductive_effects_codeColumn),Integer)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Reproductive_effects_code' in table 'Defaults' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableDefaults.Reproductive_effects_codeColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property Teratogenicity_code() As Integer
            Get
                Try 
                    Return CType(Me(Me.tableDefaults.Teratogenicity_codeColumn),Integer)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Teratogenicity_code' in table 'Defaults' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableDefaults.Teratogenicity_codeColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property Mutagenicity_code() As Integer
            Get
                Try 
                    Return CType(Me(Me.tableDefaults.Mutagenicity_codeColumn),Integer)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Mutagenicity_code' in table 'Defaults' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableDefaults.Mutagenicity_codeColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property Embryotoxicity_code() As Integer
            Get
                Try 
                    Return CType(Me(Me.tableDefaults.Embryotoxicity_codeColumn),Integer)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Embryotoxicity_code' in table 'Defaults' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableDefaults.Embryotoxicity_codeColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property Sensitization_to_product_code() As Integer
            Get
                Try 
                    Return CType(Me(Me.tableDefaults.Sensitization_to_product_codeColumn),Integer)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Sensitization_to_product_code' in table 'Defaults' is DBNul"& _ 
                            "l.", e)
                End Try
            End Get
            Set
                Me(Me.tableDefaults.Sensitization_to_product_codeColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property Synergistic_products_code() As Integer
            Get
                Try 
                    Return CType(Me(Me.tableDefaults.Synergistic_products_codeColumn),Integer)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Synergistic_products_code' in table 'Defaults' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableDefaults.Synergistic_products_codeColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property Carcinogenicity_code() As Integer
            Get
                Try 
                    Return CType(Me(Me.tableDefaults.Carcinogenicity_codeColumn),Integer)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Carcinogenicity_code' in table 'Defaults' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableDefaults.Carcinogenicity_codeColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property Chronic_code() As Integer
            Get
                Try 
                    Return CType(Me(Me.tableDefaults.Chronic_codeColumn),Integer)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Chronic_code' in table 'Defaults' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableDefaults.Chronic_codeColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property Persistence_code() As Integer
            Get
                Try 
                    Return CType(Me(Me.tableDefaults.Persistence_codeColumn),Integer)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Persistence_code' in table 'Defaults' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableDefaults.Persistence_codeColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property Bioaccumulative_potential_code() As Integer
            Get
                Try 
                    Return CType(Me(Me.tableDefaults.Bioaccumulative_potential_codeColumn),Integer)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Bioaccumulative_potential_code' in table 'Defaults' is DBNu"& _ 
                            "ll.", e)
                End Try
            End Get
            Set
                Me(Me.tableDefaults.Bioaccumulative_potential_codeColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property Mobility_code() As Integer
            Get
                Try 
                    Return CType(Me(Me.tableDefaults.Mobility_codeColumn),Integer)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Mobility_code' in table 'Defaults' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableDefaults.Mobility_codeColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property Disposal_code() As Integer
            Get
                Try 
                    Return CType(Me(Me.tableDefaults.Disposal_codeColumn),Integer)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Disposal_code' in table 'Defaults' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableDefaults.Disposal_codeColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property RCRA_status_code() As Integer
            Get
                Try 
                    Return CType(Me(Me.tableDefaults.RCRA_status_codeColumn),Integer)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'RCRA_status_code' in table 'Defaults' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableDefaults.RCRA_status_codeColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property Eye_contact_code() As Integer
            Get
                Try 
                    Return CType(Me(Me.tableDefaults.Eye_contact_codeColumn),Integer)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Eye_contact_code' in table 'Defaults' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableDefaults.Eye_contact_codeColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property TSCA_code() As Integer
            Get
                Try 
                    Return CType(Me(Me.tableDefaults.TSCA_codeColumn),Integer)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'TSCA_code' in table 'Defaults' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableDefaults.TSCA_codeColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsPresetNull() As Boolean
            Return Me.IsNull(Me.tableDefaults.PresetColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetPresetNull()
            Me(Me.tableDefaults.PresetColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsHazard_classificationNull() As Boolean
            Return Me.IsNull(Me.tableDefaults.Hazard_classificationColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetHazard_classificationNull()
            Me(Me.tableDefaults.Hazard_classificationColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsSignal_wordNull() As Boolean
            Return Me.IsNull(Me.tableDefaults.Signal_wordColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetSignal_wordNull()
            Me(Me.tableDefaults.Signal_wordColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsHazard_statementNull() As Boolean
            Return Me.IsNull(Me.tableDefaults.Hazard_statementColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetHazard_statementNull()
            Me(Me.tableDefaults.Hazard_statementColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsPict1Null() As Boolean
            Return Me.IsNull(Me.tableDefaults.Pict1Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetPict1Null()
            Me(Me.tableDefaults.Pict1Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsPict2Null() As Boolean
            Return Me.IsNull(Me.tableDefaults.Pict2Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetPict2Null()
            Me(Me.tableDefaults.Pict2Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsPict3Null() As Boolean
            Return Me.IsNull(Me.tableDefaults.Pict3Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetPict3Null()
            Me(Me.tableDefaults.Pict3Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsPict4Null() As Boolean
            Return Me.IsNull(Me.tableDefaults.Pict4Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetPict4Null()
            Me(Me.tableDefaults.Pict4Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsPre_preventionNull() As Boolean
            Return Me.IsNull(Me.tableDefaults.Pre_preventionColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetPre_preventionNull()
            Me(Me.tableDefaults.Pre_preventionColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsPre_responseNull() As Boolean
            Return Me.IsNull(Me.tableDefaults.Pre_responseColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetPre_responseNull()
            Me(Me.tableDefaults.Pre_responseColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsPre_storageNull() As Boolean
            Return Me.IsNull(Me.tableDefaults.Pre_storageColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetPre_storageNull()
            Me(Me.tableDefaults.Pre_storageColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsPre_disposalNull() As Boolean
            Return Me.IsNull(Me.tableDefaults.Pre_disposalColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetPre_disposalNull()
            Me(Me.tableDefaults.Pre_disposalColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsComponentNull() As Boolean
            Return Me.IsNull(Me.tableDefaults.ComponentColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetComponentNull()
            Me(Me.tableDefaults.ComponentColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsFA_eye_contactNull() As Boolean
            Return Me.IsNull(Me.tableDefaults.FA_eye_contactColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetFA_eye_contactNull()
            Me(Me.tableDefaults.FA_eye_contactColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsFA_skin_contactNull() As Boolean
            Return Me.IsNull(Me.tableDefaults.FA_skin_contactColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetFA_skin_contactNull()
            Me(Me.tableDefaults.FA_skin_contactColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsFA_ingestionNull() As Boolean
            Return Me.IsNull(Me.tableDefaults.FA_ingestionColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetFA_ingestionNull()
            Me(Me.tableDefaults.FA_ingestionColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsFA_inhalationNull() As Boolean
            Return Me.IsNull(Me.tableDefaults.FA_inhalationColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetFA_inhalationNull()
            Me(Me.tableDefaults.FA_inhalationColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsNote_to_HCPNull() As Boolean
            Return Me.IsNull(Me.tableDefaults.Note_to_HCPColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetNote_to_HCPNull()
            Me(Me.tableDefaults.Note_to_HCPColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsSuitable_extinguishing_mediaNull() As Boolean
            Return Me.IsNull(Me.tableDefaults.Suitable_extinguishing_mediaColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetSuitable_extinguishing_mediaNull()
            Me(Me.tableDefaults.Suitable_extinguishing_mediaColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsUnsuitable_extinguishing_mediaNull() As Boolean
            Return Me.IsNull(Me.tableDefaults.Unsuitable_extinguishing_mediaColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetUnsuitable_extinguishing_mediaNull()
            Me(Me.tableDefaults.Unsuitable_extinguishing_mediaColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsPrecautions_for_firefightersNull() As Boolean
            Return Me.IsNull(Me.tableDefaults.Precautions_for_firefightersColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetPrecautions_for_firefightersNull()
            Me(Me.tableDefaults.Precautions_for_firefightersColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsSpecific_hazardsNull() As Boolean
            Return Me.IsNull(Me.tableDefaults.Specific_hazardsColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetSpecific_hazardsNull()
            Me(Me.tableDefaults.Specific_hazardsColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsHazardous_combustion_productsNull() As Boolean
            Return Me.IsNull(Me.tableDefaults.Hazardous_combustion_productsColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetHazardous_combustion_productsNull()
            Me(Me.tableDefaults.Hazardous_combustion_productsColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsPersonal_precautionsNull() As Boolean
            Return Me.IsNull(Me.tableDefaults.Personal_precautionsColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetPersonal_precautionsNull()
            Me(Me.tableDefaults.Personal_precautionsColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsSmall_spillsNull() As Boolean
            Return Me.IsNull(Me.tableDefaults.Small_spillsColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetSmall_spillsNull()
            Me(Me.tableDefaults.Small_spillsColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsLarge_spillsNull() As Boolean
            Return Me.IsNull(Me.tableDefaults.Large_spillsColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetLarge_spillsNull()
            Me(Me.tableDefaults.Large_spillsColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsAdvice_on_safe_handlingNull() As Boolean
            Return Me.IsNull(Me.tableDefaults.Advice_on_safe_handlingColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetAdvice_on_safe_handlingNull()
            Me(Me.tableDefaults.Advice_on_safe_handlingColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsStorage_conditionsNull() As Boolean
            Return Me.IsNull(Me.tableDefaults.Storage_conditionsColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetStorage_conditionsNull()
            Me(Me.tableDefaults.Storage_conditionsColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsSuitable_materials_of_constructionNull() As Boolean
            Return Me.IsNull(Me.tableDefaults.Suitable_materials_of_constructionColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetSuitable_materials_of_constructionNull()
            Me(Me.tableDefaults.Suitable_materials_of_constructionColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsUnsuitable_materials_of_constructionNull() As Boolean
            Return Me.IsNull(Me.tableDefaults.Unsuitable_materials_of_constructionColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetUnsuitable_materials_of_constructionNull()
            Me(Me.tableDefaults.Unsuitable_materials_of_constructionColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsEye_face_protectionNull() As Boolean
            Return Me.IsNull(Me.tableDefaults.Eye_face_protectionColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetEye_face_protectionNull()
            Me(Me.tableDefaults.Eye_face_protectionColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsSkin_protectionNull() As Boolean
            Return Me.IsNull(Me.tableDefaults.Skin_protectionColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetSkin_protectionNull()
            Me(Me.tableDefaults.Skin_protectionColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsRespiratory_protectionNull() As Boolean
            Return Me.IsNull(Me.tableDefaults.Respiratory_protectionColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetRespiratory_protectionNull()
            Me(Me.tableDefaults.Respiratory_protectionColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsEngineering_controlsNull() As Boolean
            Return Me.IsNull(Me.tableDefaults.Engineering_controlsColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetEngineering_controlsNull()
            Me(Me.tableDefaults.Engineering_controlsColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsGeneral_hygiene_considerationsNull() As Boolean
            Return Me.IsNull(Me.tableDefaults.General_hygiene_considerationsColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetGeneral_hygiene_considerationsNull()
            Me(Me.tableDefaults.General_hygiene_considerationsColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsChemical_stabilityNull() As Boolean
            Return Me.IsNull(Me.tableDefaults.Chemical_stabilityColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetChemical_stabilityNull()
            Me(Me.tableDefaults.Chemical_stabilityColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsHazardous_polymerizationNull() As Boolean
            Return Me.IsNull(Me.tableDefaults.Hazardous_polymerizationColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetHazardous_polymerizationNull()
            Me(Me.tableDefaults.Hazardous_polymerizationColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsConditions_to_avoidNull() As Boolean
            Return Me.IsNull(Me.tableDefaults.Conditions_to_avoidColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetConditions_to_avoidNull()
            Me(Me.tableDefaults.Conditions_to_avoidColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsIncompatibilitiesNull() As Boolean
            Return Me.IsNull(Me.tableDefaults.IncompatibilitiesColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetIncompatibilitiesNull()
            Me(Me.tableDefaults.IncompatibilitiesColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsHazardous_decomposition_productsNull() As Boolean
            Return Me.IsNull(Me.tableDefaults.Hazardous_decomposition_productsColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetHazardous_decomposition_productsNull()
            Me(Me.tableDefaults.Hazardous_decomposition_productsColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsLikely_routes_of_exposureNull() As Boolean
            Return Me.IsNull(Me.tableDefaults.Likely_routes_of_exposureColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetLikely_routes_of_exposureNull()
            Me(Me.tableDefaults.Likely_routes_of_exposureColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsEye_contactNull() As Boolean
            Return Me.IsNull(Me.tableDefaults.Eye_contactColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetEye_contactNull()
            Me(Me.tableDefaults.Eye_contactColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsOdor_thresholdNull() As Boolean
            Return Me.IsNull(Me.tableDefaults.Odor_thresholdColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetOdor_thresholdNull()
            Me(Me.tableDefaults.Odor_thresholdColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsSkin_contactNull() As Boolean
            Return Me.IsNull(Me.tableDefaults.Skin_contactColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetSkin_contactNull()
            Me(Me.tableDefaults.Skin_contactColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsIngestionNull() As Boolean
            Return Me.IsNull(Me.tableDefaults.IngestionColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetIngestionNull()
            Me(Me.tableDefaults.IngestionColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsInhalationNull() As Boolean
            Return Me.IsNull(Me.tableDefaults.InhalationColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetInhalationNull()
            Me(Me.tableDefaults.InhalationColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsReproductive_effectsNull() As Boolean
            Return Me.IsNull(Me.tableDefaults.Reproductive_effectsColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetReproductive_effectsNull()
            Me(Me.tableDefaults.Reproductive_effectsColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsTeratogenicityNull() As Boolean
            Return Me.IsNull(Me.tableDefaults.TeratogenicityColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetTeratogenicityNull()
            Me(Me.tableDefaults.TeratogenicityColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsExplosive_limitsNull() As Boolean
            Return Me.IsNull(Me.tableDefaults.Explosive_limitsColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetExplosive_limitsNull()
            Me(Me.tableDefaults.Explosive_limitsColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsMutagenicityNull() As Boolean
            Return Me.IsNull(Me.tableDefaults.MutagenicityColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetMutagenicityNull()
            Me(Me.tableDefaults.MutagenicityColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsEmbryotoxicityNull() As Boolean
            Return Me.IsNull(Me.tableDefaults.EmbryotoxicityColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetEmbryotoxicityNull()
            Me(Me.tableDefaults.EmbryotoxicityColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsSensitization_to_productNull() As Boolean
            Return Me.IsNull(Me.tableDefaults.Sensitization_to_productColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetSensitization_to_productNull()
            Me(Me.tableDefaults.Sensitization_to_productColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsSynergistic_productsNull() As Boolean
            Return Me.IsNull(Me.tableDefaults.Synergistic_productsColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetSynergistic_productsNull()
            Me(Me.tableDefaults.Synergistic_productsColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsCarcinogenicityNull() As Boolean
            Return Me.IsNull(Me.tableDefaults.CarcinogenicityColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetCarcinogenicityNull()
            Me(Me.tableDefaults.CarcinogenicityColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsSpecific_gravityNull() As Boolean
            Return Me.IsNull(Me.tableDefaults.Specific_gravityColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetSpecific_gravityNull()
            Me(Me.tableDefaults.Specific_gravityColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsChronicNull() As Boolean
            Return Me.IsNull(Me.tableDefaults.ChronicColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetChronicNull()
            Me(Me.tableDefaults.ChronicColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsPersistenceNull() As Boolean
            Return Me.IsNull(Me.tableDefaults.PersistenceColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetPersistenceNull()
            Me(Me.tableDefaults.PersistenceColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsBioaccumulative_potentialNull() As Boolean
            Return Me.IsNull(Me.tableDefaults.Bioaccumulative_potentialColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetBioaccumulative_potentialNull()
            Me(Me.tableDefaults.Bioaccumulative_potentialColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsMobilityNull() As Boolean
            Return Me.IsNull(Me.tableDefaults.MobilityColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetMobilityNull()
            Me(Me.tableDefaults.MobilityColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsDisposalNull() As Boolean
            Return Me.IsNull(Me.tableDefaults.DisposalColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetDisposalNull()
            Me(Me.tableDefaults.DisposalColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsViscosityNull() As Boolean
            Return Me.IsNull(Me.tableDefaults.ViscosityColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetViscosityNull()
            Me(Me.tableDefaults.ViscosityColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsRCRA_statusNull() As Boolean
            Return Me.IsNull(Me.tableDefaults.RCRA_statusColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetRCRA_statusNull()
            Me(Me.tableDefaults.RCRA_statusColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsFA_Eye_Contact_codeNull() As Boolean
            Return Me.IsNull(Me.tableDefaults.FA_Eye_Contact_codeColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetFA_Eye_Contact_codeNull()
            Me(Me.tableDefaults.FA_Eye_Contact_codeColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsFA_skin_contact_codeNull() As Boolean
            Return Me.IsNull(Me.tableDefaults.FA_skin_contact_codeColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetFA_skin_contact_codeNull()
            Me(Me.tableDefaults.FA_skin_contact_codeColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsFA_inhalation_codeNull() As Boolean
            Return Me.IsNull(Me.tableDefaults.FA_inhalation_codeColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetFA_inhalation_codeNull()
            Me(Me.tableDefaults.FA_inhalation_codeColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsFA_ingestion_codeNull() As Boolean
            Return Me.IsNull(Me.tableDefaults.FA_ingestion_codeColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetFA_ingestion_codeNull()
            Me(Me.tableDefaults.FA_ingestion_codeColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsNote_to_hcp_codeNull() As Boolean
            Return Me.IsNull(Me.tableDefaults.Note_to_hcp_codeColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetNote_to_hcp_codeNull()
            Me(Me.tableDefaults.Note_to_hcp_codeColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsSuitable_extinguishing_media_codeNull() As Boolean
            Return Me.IsNull(Me.tableDefaults.Suitable_extinguishing_media_codeColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetSuitable_extinguishing_media_codeNull()
            Me(Me.tableDefaults.Suitable_extinguishing_media_codeColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsUnsuitable_extinguishing_media_codeNull() As Boolean
            Return Me.IsNull(Me.tableDefaults.Unsuitable_extinguishing_media_codeColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetUnsuitable_extinguishing_media_codeNull()
            Me(Me.tableDefaults.Unsuitable_extinguishing_media_codeColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsPrecautions_for_firefighters_codeNull() As Boolean
            Return Me.IsNull(Me.tableDefaults.Precautions_for_firefighters_codeColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetPrecautions_for_firefighters_codeNull()
            Me(Me.tableDefaults.Precautions_for_firefighters_codeColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsSpecific_hazards_codeNull() As Boolean
            Return Me.IsNull(Me.tableDefaults.Specific_hazards_codeColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetSpecific_hazards_codeNull()
            Me(Me.tableDefaults.Specific_hazards_codeColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsHazardous_combustion_products_codeNull() As Boolean
            Return Me.IsNull(Me.tableDefaults.Hazardous_combustion_products_codeColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetHazardous_combustion_products_codeNull()
            Me(Me.tableDefaults.Hazardous_combustion_products_codeColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsPersonal_precautions_codeNull() As Boolean
            Return Me.IsNull(Me.tableDefaults.Personal_precautions_codeColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetPersonal_precautions_codeNull()
            Me(Me.tableDefaults.Personal_precautions_codeColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsSmall_spills_codeNull() As Boolean
            Return Me.IsNull(Me.tableDefaults.Small_spills_codeColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetSmall_spills_codeNull()
            Me(Me.tableDefaults.Small_spills_codeColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsLarge_spills_codeNull() As Boolean
            Return Me.IsNull(Me.tableDefaults.Large_spills_codeColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetLarge_spills_codeNull()
            Me(Me.tableDefaults.Large_spills_codeColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsAdvice_on_safe_handling_codeNull() As Boolean
            Return Me.IsNull(Me.tableDefaults.Advice_on_safe_handling_codeColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetAdvice_on_safe_handling_codeNull()
            Me(Me.tableDefaults.Advice_on_safe_handling_codeColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsStorage_conditions_codeNull() As Boolean
            Return Me.IsNull(Me.tableDefaults.Storage_conditions_codeColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetStorage_conditions_codeNull()
            Me(Me.tableDefaults.Storage_conditions_codeColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsSuitable_materials_of_construction_codeNull() As Boolean
            Return Me.IsNull(Me.tableDefaults.Suitable_materials_of_construction_codeColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetSuitable_materials_of_construction_codeNull()
            Me(Me.tableDefaults.Suitable_materials_of_construction_codeColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsUnsuitable_materials_of_construction_codeNull() As Boolean
            Return Me.IsNull(Me.tableDefaults.Unsuitable_materials_of_construction_codeColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetUnsuitable_materials_of_construction_codeNull()
            Me(Me.tableDefaults.Unsuitable_materials_of_construction_codeColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsEye_face_protection_codeNull() As Boolean
            Return Me.IsNull(Me.tableDefaults.Eye_face_protection_codeColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetEye_face_protection_codeNull()
            Me(Me.tableDefaults.Eye_face_protection_codeColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsSkin_protection_codeNull() As Boolean
            Return Me.IsNull(Me.tableDefaults.Skin_protection_codeColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetSkin_protection_codeNull()
            Me(Me.tableDefaults.Skin_protection_codeColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsRespiratory_protection_codeNull() As Boolean
            Return Me.IsNull(Me.tableDefaults.Respiratory_protection_codeColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetRespiratory_protection_codeNull()
            Me(Me.tableDefaults.Respiratory_protection_codeColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsEngineering_controls_codeNull() As Boolean
            Return Me.IsNull(Me.tableDefaults.Engineering_controls_codeColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetEngineering_controls_codeNull()
            Me(Me.tableDefaults.Engineering_controls_codeColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsGeneral_hygiene_considerations_codeNull() As Boolean
            Return Me.IsNull(Me.tableDefaults.General_hygiene_considerations_codeColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetGeneral_hygiene_considerations_codeNull()
            Me(Me.tableDefaults.General_hygiene_considerations_codeColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsChemical_stability_codeNull() As Boolean
            Return Me.IsNull(Me.tableDefaults.Chemical_stability_codeColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetChemical_stability_codeNull()
            Me(Me.tableDefaults.Chemical_stability_codeColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsHazardous_polymerization_codeNull() As Boolean
            Return Me.IsNull(Me.tableDefaults.Hazardous_polymerization_codeColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetHazardous_polymerization_codeNull()
            Me(Me.tableDefaults.Hazardous_polymerization_codeColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsConditions_to_avoid_codeNull() As Boolean
            Return Me.IsNull(Me.tableDefaults.Conditions_to_avoid_codeColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetConditions_to_avoid_codeNull()
            Me(Me.tableDefaults.Conditions_to_avoid_codeColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsIncompatibilities_codeNull() As Boolean
            Return Me.IsNull(Me.tableDefaults.Incompatibilities_codeColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetIncompatibilities_codeNull()
            Me(Me.tableDefaults.Incompatibilities_codeColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsHazardous_decomposition_products_codeNull() As Boolean
            Return Me.IsNull(Me.tableDefaults.Hazardous_decomposition_products_codeColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetHazardous_decomposition_products_codeNull()
            Me(Me.tableDefaults.Hazardous_decomposition_products_codeColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsLikely_routes_of_exposure_codeNull() As Boolean
            Return Me.IsNull(Me.tableDefaults.Likely_routes_of_exposure_codeColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetLikely_routes_of_exposure_codeNull()
            Me(Me.tableDefaults.Likely_routes_of_exposure_codeColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsSkin_contact_codeNull() As Boolean
            Return Me.IsNull(Me.tableDefaults.Skin_contact_codeColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetSkin_contact_codeNull()
            Me(Me.tableDefaults.Skin_contact_codeColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsIngestion_codeNull() As Boolean
            Return Me.IsNull(Me.tableDefaults.Ingestion_codeColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetIngestion_codeNull()
            Me(Me.tableDefaults.Ingestion_codeColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsInhalation_codeNull() As Boolean
            Return Me.IsNull(Me.tableDefaults.Inhalation_codeColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetInhalation_codeNull()
            Me(Me.tableDefaults.Inhalation_codeColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsReproductive_effects_codeNull() As Boolean
            Return Me.IsNull(Me.tableDefaults.Reproductive_effects_codeColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetReproductive_effects_codeNull()
            Me(Me.tableDefaults.Reproductive_effects_codeColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsTeratogenicity_codeNull() As Boolean
            Return Me.IsNull(Me.tableDefaults.Teratogenicity_codeColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetTeratogenicity_codeNull()
            Me(Me.tableDefaults.Teratogenicity_codeColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsMutagenicity_codeNull() As Boolean
            Return Me.IsNull(Me.tableDefaults.Mutagenicity_codeColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetMutagenicity_codeNull()
            Me(Me.tableDefaults.Mutagenicity_codeColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsEmbryotoxicity_codeNull() As Boolean
            Return Me.IsNull(Me.tableDefaults.Embryotoxicity_codeColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetEmbryotoxicity_codeNull()
            Me(Me.tableDefaults.Embryotoxicity_codeColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsSensitization_to_product_codeNull() As Boolean
            Return Me.IsNull(Me.tableDefaults.Sensitization_to_product_codeColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetSensitization_to_product_codeNull()
            Me(Me.tableDefaults.Sensitization_to_product_codeColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsSynergistic_products_codeNull() As Boolean
            Return Me.IsNull(Me.tableDefaults.Synergistic_products_codeColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetSynergistic_products_codeNull()
            Me(Me.tableDefaults.Synergistic_products_codeColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsCarcinogenicity_codeNull() As Boolean
            Return Me.IsNull(Me.tableDefaults.Carcinogenicity_codeColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetCarcinogenicity_codeNull()
            Me(Me.tableDefaults.Carcinogenicity_codeColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsChronic_codeNull() As Boolean
            Return Me.IsNull(Me.tableDefaults.Chronic_codeColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetChronic_codeNull()
            Me(Me.tableDefaults.Chronic_codeColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsPersistence_codeNull() As Boolean
            Return Me.IsNull(Me.tableDefaults.Persistence_codeColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetPersistence_codeNull()
            Me(Me.tableDefaults.Persistence_codeColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsBioaccumulative_potential_codeNull() As Boolean
            Return Me.IsNull(Me.tableDefaults.Bioaccumulative_potential_codeColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetBioaccumulative_potential_codeNull()
            Me(Me.tableDefaults.Bioaccumulative_potential_codeColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsMobility_codeNull() As Boolean
            Return Me.IsNull(Me.tableDefaults.Mobility_codeColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetMobility_codeNull()
            Me(Me.tableDefaults.Mobility_codeColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsDisposal_codeNull() As Boolean
            Return Me.IsNull(Me.tableDefaults.Disposal_codeColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetDisposal_codeNull()
            Me(Me.tableDefaults.Disposal_codeColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsRCRA_status_codeNull() As Boolean
            Return Me.IsNull(Me.tableDefaults.RCRA_status_codeColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetRCRA_status_codeNull()
            Me(Me.tableDefaults.RCRA_status_codeColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsEye_contact_codeNull() As Boolean
            Return Me.IsNull(Me.tableDefaults.Eye_contact_codeColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetEye_contact_codeNull()
            Me(Me.tableDefaults.Eye_contact_codeColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsTSCA_codeNull() As Boolean
            Return Me.IsNull(Me.tableDefaults.TSCA_codeColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetTSCA_codeNull()
            Me(Me.tableDefaults.TSCA_codeColumn) = Global.System.Convert.DBNull
        End Sub
    End Class
    
    '''<summary>
    '''Represents strongly named DataRow class.
    '''</summary>
    Partial Public Class Hazard_LexiconRow
        Inherits Global.System.Data.DataRow
        
        Private tableHazard_Lexicon As Hazard_LexiconDataTable
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Sub New(ByVal rb As Global.System.Data.DataRowBuilder)
            MyBase.New(rb)
            Me.tableHazard_Lexicon = CType(Me.Table,Hazard_LexiconDataTable)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property ID() As Integer
            Get
                Return CType(Me(Me.tableHazard_Lexicon.IDColumn),Integer)
            End Get
            Set
                Me(Me.tableHazard_Lexicon.IDColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property Hazard_class() As String
            Get
                Try 
                    Return CType(Me(Me.tableHazard_Lexicon.Hazard_classColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Hazard_class' in table 'Hazard Lexicon' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableHazard_Lexicon.Hazard_classColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property TypeCrypt() As Integer
            Get
                Try 
                    Return CType(Me(Me.tableHazard_Lexicon.TypeCryptColumn),Integer)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'TypeCrypt' in table 'Hazard Lexicon' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableHazard_Lexicon.TypeCryptColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property ClassCrypt() As Integer
            Get
                Try 
                    Return CType(Me(Me.tableHazard_Lexicon.ClassCryptColumn),Integer)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'ClassCrypt' in table 'Hazard Lexicon' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableHazard_Lexicon.ClassCryptColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property CategoryCrypt() As Integer
            Get
                Try 
                    Return CType(Me(Me.tableHazard_Lexicon.CategoryCryptColumn),Integer)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'CategoryCrypt' in table 'Hazard Lexicon' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableHazard_Lexicon.CategoryCryptColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property Hazard_category() As String
            Get
                Try 
                    Return CType(Me(Me.tableHazard_Lexicon.Hazard_categoryColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Hazard_category' in table 'Hazard Lexicon' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableHazard_Lexicon.Hazard_categoryColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property Sort() As Integer
            Get
                Try 
                    Return CType(Me(Me.tableHazard_Lexicon.SortColumn),Integer)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Sort' in table 'Hazard Lexicon' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableHazard_Lexicon.SortColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property Hazard_code() As String
            Get
                Try 
                    Return CType(Me(Me.tableHazard_Lexicon.Hazard_codeColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Hazard_code' in table 'Hazard Lexicon' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableHazard_Lexicon.Hazard_codeColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property Hazard_statement() As String
            Get
                Try 
                    Return CType(Me(Me.tableHazard_Lexicon.Hazard_statementColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Hazard_statement' in table 'Hazard Lexicon' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableHazard_Lexicon.Hazard_statementColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property Hazard_type() As String
            Get
                Try 
                    Return CType(Me(Me.tableHazard_Lexicon.Hazard_typeColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Hazard_type' in table 'Hazard Lexicon' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableHazard_Lexicon.Hazard_typeColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property Signal_word() As String
            Get
                Try 
                    Return CType(Me(Me.tableHazard_Lexicon.Signal_wordColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Signal_word' in table 'Hazard Lexicon' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableHazard_Lexicon.Signal_wordColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property Symbol() As String
            Get
                Try 
                    Return CType(Me(Me.tableHazard_Lexicon.SymbolColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Symbol' in table 'Hazard Lexicon' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableHazard_Lexicon.SymbolColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property PCodes() As String
            Get
                Try 
                    Return CType(Me(Me.tableHazard_Lexicon.PCodesColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'PCodes' in table 'Hazard Lexicon' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableHazard_Lexicon.PCodesColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property _Haz_Cat() As String
            Get
                Try 
                    Return CType(Me(Me.tableHazard_Lexicon._Haz_CatColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Haz—Cat' in table 'Hazard Lexicon' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableHazard_Lexicon._Haz_CatColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property Pstat() As String
            Get
                Try 
                    Return CType(Me(Me.tableHazard_Lexicon.PstatColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Pstat' in table 'Hazard Lexicon' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableHazard_Lexicon.PstatColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property Hazard_classification() As String
            Get
                Try 
                    Return CType(Me(Me.tableHazard_Lexicon.Hazard_classificationColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Hazard_classification' in table 'Hazard Lexicon' is DBNull."& _ 
                            "", e)
                End Try
            End Get
            Set
                Me(Me.tableHazard_Lexicon.Hazard_classificationColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property Haz_listbox() As String
            Get
                Try 
                    Return CType(Me(Me.tableHazard_Lexicon.Haz_listboxColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Haz_listbox' in table 'Hazard Lexicon' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableHazard_Lexicon.Haz_listboxColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsHazard_classNull() As Boolean
            Return Me.IsNull(Me.tableHazard_Lexicon.Hazard_classColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetHazard_classNull()
            Me(Me.tableHazard_Lexicon.Hazard_classColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsTypeCryptNull() As Boolean
            Return Me.IsNull(Me.tableHazard_Lexicon.TypeCryptColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetTypeCryptNull()
            Me(Me.tableHazard_Lexicon.TypeCryptColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsClassCryptNull() As Boolean
            Return Me.IsNull(Me.tableHazard_Lexicon.ClassCryptColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetClassCryptNull()
            Me(Me.tableHazard_Lexicon.ClassCryptColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsCategoryCryptNull() As Boolean
            Return Me.IsNull(Me.tableHazard_Lexicon.CategoryCryptColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetCategoryCryptNull()
            Me(Me.tableHazard_Lexicon.CategoryCryptColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsHazard_categoryNull() As Boolean
            Return Me.IsNull(Me.tableHazard_Lexicon.Hazard_categoryColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetHazard_categoryNull()
            Me(Me.tableHazard_Lexicon.Hazard_categoryColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsSortNull() As Boolean
            Return Me.IsNull(Me.tableHazard_Lexicon.SortColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetSortNull()
            Me(Me.tableHazard_Lexicon.SortColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsHazard_codeNull() As Boolean
            Return Me.IsNull(Me.tableHazard_Lexicon.Hazard_codeColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetHazard_codeNull()
            Me(Me.tableHazard_Lexicon.Hazard_codeColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsHazard_statementNull() As Boolean
            Return Me.IsNull(Me.tableHazard_Lexicon.Hazard_statementColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetHazard_statementNull()
            Me(Me.tableHazard_Lexicon.Hazard_statementColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsHazard_typeNull() As Boolean
            Return Me.IsNull(Me.tableHazard_Lexicon.Hazard_typeColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetHazard_typeNull()
            Me(Me.tableHazard_Lexicon.Hazard_typeColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsSignal_wordNull() As Boolean
            Return Me.IsNull(Me.tableHazard_Lexicon.Signal_wordColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetSignal_wordNull()
            Me(Me.tableHazard_Lexicon.Signal_wordColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsSymbolNull() As Boolean
            Return Me.IsNull(Me.tableHazard_Lexicon.SymbolColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetSymbolNull()
            Me(Me.tableHazard_Lexicon.SymbolColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsPCodesNull() As Boolean
            Return Me.IsNull(Me.tableHazard_Lexicon.PCodesColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetPCodesNull()
            Me(Me.tableHazard_Lexicon.PCodesColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function Is_Haz_CatNull() As Boolean
            Return Me.IsNull(Me.tableHazard_Lexicon._Haz_CatColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub Set_Haz_CatNull()
            Me(Me.tableHazard_Lexicon._Haz_CatColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsPstatNull() As Boolean
            Return Me.IsNull(Me.tableHazard_Lexicon.PstatColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetPstatNull()
            Me(Me.tableHazard_Lexicon.PstatColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsHazard_classificationNull() As Boolean
            Return Me.IsNull(Me.tableHazard_Lexicon.Hazard_classificationColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetHazard_classificationNull()
            Me(Me.tableHazard_Lexicon.Hazard_classificationColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsHaz_listboxNull() As Boolean
            Return Me.IsNull(Me.tableHazard_Lexicon.Haz_listboxColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetHaz_listboxNull()
            Me(Me.tableHazard_Lexicon.Haz_listboxColumn) = Global.System.Convert.DBNull
        End Sub
    End Class
    
    '''<summary>
    '''Represents strongly named DataRow class.
    '''</summary>
    Partial Public Class Precautionary_LexiconRow
        Inherits Global.System.Data.DataRow
        
        Private tablePrecautionary_Lexicon As Precautionary_LexiconDataTable
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Sub New(ByVal rb As Global.System.Data.DataRowBuilder)
            MyBase.New(rb)
            Me.tablePrecautionary_Lexicon = CType(Me.Table,Precautionary_LexiconDataTable)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property Precautionary_code() As String
            Get
                Return CType(Me(Me.tablePrecautionary_Lexicon.Precautionary_codeColumn),String)
            End Get
            Set
                Me(Me.tablePrecautionary_Lexicon.Precautionary_codeColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property Precautionary_statement() As String
            Get
                Try 
                    Return CType(Me(Me.tablePrecautionary_Lexicon.Precautionary_statementColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Precautionary_statement' in table 'Precautionary Lexicon' i"& _ 
                            "s DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablePrecautionary_Lexicon.Precautionary_statementColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property Precaution_type() As String
            Get
                Try 
                    Return CType(Me(Me.tablePrecautionary_Lexicon.Precaution_typeColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Precaution_type' in table 'Precautionary Lexicon' is DBNull"& _ 
                            ".", e)
                End Try
            End Get
            Set
                Me(Me.tablePrecautionary_Lexicon.Precaution_typeColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property Sorter() As Integer
            Get
                Try 
                    Return CType(Me(Me.tablePrecautionary_Lexicon.SorterColumn),Integer)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Sorter' in table 'Precautionary Lexicon' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablePrecautionary_Lexicon.SorterColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property _Overrides() As String
            Get
                Try 
                    Return CType(Me(Me.tablePrecautionary_Lexicon.OverridesColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Overrides' in table 'Precautionary Lexicon' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablePrecautionary_Lexicon.OverridesColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsPrecautionary_statementNull() As Boolean
            Return Me.IsNull(Me.tablePrecautionary_Lexicon.Precautionary_statementColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetPrecautionary_statementNull()
            Me(Me.tablePrecautionary_Lexicon.Precautionary_statementColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsPrecaution_typeNull() As Boolean
            Return Me.IsNull(Me.tablePrecautionary_Lexicon.Precaution_typeColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetPrecaution_typeNull()
            Me(Me.tablePrecautionary_Lexicon.Precaution_typeColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsSorterNull() As Boolean
            Return Me.IsNull(Me.tablePrecautionary_Lexicon.SorterColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetSorterNull()
            Me(Me.tablePrecautionary_Lexicon.SorterColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function Is_OverridesNull() As Boolean
            Return Me.IsNull(Me.tablePrecautionary_Lexicon.OverridesColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub Set_OverridesNull()
            Me(Me.tablePrecautionary_Lexicon.OverridesColumn) = Global.System.Convert.DBNull
        End Sub
    End Class
    
    '''<summary>
    '''Represents strongly named DataRow class.
    '''</summary>
    Partial Public Class Product_LogRow
        Inherits Global.System.Data.DataRow
        
        Private tableProduct_Log As Product_LogDataTable
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Sub New(ByVal rb As Global.System.Data.DataRowBuilder)
            MyBase.New(rb)
            Me.tableProduct_Log = CType(Me.Table,Product_LogDataTable)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property PID() As Integer
            Get
                Return CType(Me(Me.tableProduct_Log.PIDColumn),Integer)
            End Get
            Set
                Me(Me.tableProduct_Log.PIDColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property Product_name() As String
            Get
                Try 
                    Return CType(Me(Me.tableProduct_Log.Product_nameColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Product_name' in table 'Product Log' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableProduct_Log.Product_nameColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property OldUN() As String
            Get
                Try 
                    Return CType(Me(Me.tableProduct_Log.OldUNColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'OldUN' in table 'Product Log' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableProduct_Log.OldUNColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property Product_description() As String
            Get
                Try 
                    Return CType(Me(Me.tableProduct_Log.Product_descriptionColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Product_description' in table 'Product Log' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableProduct_Log.Product_descriptionColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property Product_class() As String
            Get
                Try 
                    Return CType(Me(Me.tableProduct_Log.Product_classColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Product_class' in table 'Product Log' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableProduct_Log.Product_classColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property Supplier_code() As Integer
            Get
                Try 
                    Return CType(Me(Me.tableProduct_Log.Supplier_codeColumn),Integer)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Supplier_code' in table 'Product Log' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableProduct_Log.Supplier_codeColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property Comp1() As String
            Get
                Try 
                    Return CType(Me(Me.tableProduct_Log.Comp1Column),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Comp1' in table 'Product Log' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableProduct_Log.Comp1Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property WeightRangeLow1() As Single
            Get
                Try 
                    Return CType(Me(Me.tableProduct_Log.WeightRangeLow1Column),Single)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'WeightRangeLow1' in table 'Product Log' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableProduct_Log.WeightRangeLow1Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property WeightRangeHigh1() As Single
            Get
                Try 
                    Return CType(Me(Me.tableProduct_Log.WeightRangeHigh1Column),Single)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'WeightRangeHigh1' in table 'Product Log' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableProduct_Log.WeightRangeHigh1Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property WeightRange1() As String
            Get
                Try 
                    Return CType(Me(Me.tableProduct_Log.WeightRange1Column),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'WeightRange1' in table 'Product Log' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableProduct_Log.WeightRange1Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property Comp2() As String
            Get
                Try 
                    Return CType(Me(Me.tableProduct_Log.Comp2Column),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Comp2' in table 'Product Log' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableProduct_Log.Comp2Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property WeightRangeLow2() As Single
            Get
                Try 
                    Return CType(Me(Me.tableProduct_Log.WeightRangeLow2Column),Single)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'WeightRangeLow2' in table 'Product Log' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableProduct_Log.WeightRangeLow2Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property WeightRangeHigh2() As Single
            Get
                Try 
                    Return CType(Me(Me.tableProduct_Log.WeightRangeHigh2Column),Single)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'WeightRangeHigh2' in table 'Product Log' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableProduct_Log.WeightRangeHigh2Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property WeightRange2() As String
            Get
                Try 
                    Return CType(Me(Me.tableProduct_Log.WeightRange2Column),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'WeightRange2' in table 'Product Log' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableProduct_Log.WeightRange2Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property Comp3() As String
            Get
                Try 
                    Return CType(Me(Me.tableProduct_Log.Comp3Column),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Comp3' in table 'Product Log' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableProduct_Log.Comp3Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property WeightRangeLow3() As Single
            Get
                Try 
                    Return CType(Me(Me.tableProduct_Log.WeightRangeLow3Column),Single)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'WeightRangeLow3' in table 'Product Log' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableProduct_Log.WeightRangeLow3Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property WeightRangeHigh3() As Single
            Get
                Try 
                    Return CType(Me(Me.tableProduct_Log.WeightRangeHigh3Column),Single)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'WeightRangeHigh3' in table 'Product Log' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableProduct_Log.WeightRangeHigh3Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property WeightRange3() As String
            Get
                Try 
                    Return CType(Me(Me.tableProduct_Log.WeightRange3Column),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'WeightRange3' in table 'Product Log' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableProduct_Log.WeightRange3Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property Comp4() As String
            Get
                Try 
                    Return CType(Me(Me.tableProduct_Log.Comp4Column),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Comp4' in table 'Product Log' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableProduct_Log.Comp4Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property WeightRangeLow4() As Single
            Get
                Try 
                    Return CType(Me(Me.tableProduct_Log.WeightRangeLow4Column),Single)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'WeightRangeLow4' in table 'Product Log' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableProduct_Log.WeightRangeLow4Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property WeightRangeHigh4() As Single
            Get
                Try 
                    Return CType(Me(Me.tableProduct_Log.WeightRangeHigh4Column),Single)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'WeightRangeHigh4' in table 'Product Log' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableProduct_Log.WeightRangeHigh4Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property WeightRange4() As String
            Get
                Try 
                    Return CType(Me(Me.tableProduct_Log.WeightRange4Column),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'WeightRange4' in table 'Product Log' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableProduct_Log.WeightRange4Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property Comp5() As String
            Get
                Try 
                    Return CType(Me(Me.tableProduct_Log.Comp5Column),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Comp5' in table 'Product Log' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableProduct_Log.Comp5Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property WeightRangeLow5() As Single
            Get
                Try 
                    Return CType(Me(Me.tableProduct_Log.WeightRangeLow5Column),Single)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'WeightRangeLow5' in table 'Product Log' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableProduct_Log.WeightRangeLow5Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property WeightRangeHigh5() As Single
            Get
                Try 
                    Return CType(Me(Me.tableProduct_Log.WeightRangeHigh5Column),Single)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'WeightRangeHigh5' in table 'Product Log' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableProduct_Log.WeightRangeHigh5Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property WeightRange5() As String
            Get
                Try 
                    Return CType(Me(Me.tableProduct_Log.WeightRange5Column),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'WeightRange5' in table 'Product Log' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableProduct_Log.WeightRange5Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property Comp6() As String
            Get
                Try 
                    Return CType(Me(Me.tableProduct_Log.Comp6Column),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Comp6' in table 'Product Log' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableProduct_Log.Comp6Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property WeightRangeLow6() As Single
            Get
                Try 
                    Return CType(Me(Me.tableProduct_Log.WeightRangeLow6Column),Single)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'WeightRangeLow6' in table 'Product Log' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableProduct_Log.WeightRangeLow6Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property WeightRangeHigh6() As Single
            Get
                Try 
                    Return CType(Me(Me.tableProduct_Log.WeightRangeHigh6Column),Single)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'WeightRangeHigh6' in table 'Product Log' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableProduct_Log.WeightRangeHigh6Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property WeightRange6() As String
            Get
                Try 
                    Return CType(Me(Me.tableProduct_Log.WeightRange6Column),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'WeightRange6' in table 'Product Log' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableProduct_Log.WeightRange6Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property pH() As String
            Get
                Try 
                    Return CType(Me(Me.tableProduct_Log.pHColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'pH' in table 'Product Log' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableProduct_Log.pHColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property Specific_gravity() As String
            Get
                Try 
                    Return CType(Me(Me.tableProduct_Log.Specific_gravityColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Specific_gravity' in table 'Product Log' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableProduct_Log.Specific_gravityColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property Boiling_point() As String
            Get
                Try 
                    Return CType(Me(Me.tableProduct_Log.Boiling_pointColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Boiling_point' in table 'Product Log' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableProduct_Log.Boiling_pointColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property Freezing_point() As String
            Get
                Try 
                    Return CType(Me(Me.tableProduct_Log.Freezing_pointColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Freezing_point' in table 'Product Log' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableProduct_Log.Freezing_pointColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property Solubility() As String
            Get
                Try 
                    Return CType(Me(Me.tableProduct_Log.SolubilityColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Solubility' in table 'Product Log' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableProduct_Log.SolubilityColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property Vapor_density() As String
            Get
                Try 
                    Return CType(Me(Me.tableProduct_Log.Vapor_densityColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Vapor_density' in table 'Product Log' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableProduct_Log.Vapor_densityColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property Vapor_pressure() As String
            Get
                Try 
                    Return CType(Me(Me.tableProduct_Log.Vapor_pressureColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Vapor_pressure' in table 'Product Log' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableProduct_Log.Vapor_pressureColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property Appearance() As String
            Get
                Try 
                    Return CType(Me(Me.tableProduct_Log.AppearanceColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Appearance' in table 'Product Log' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableProduct_Log.AppearanceColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property Odor() As String
            Get
                Try 
                    Return CType(Me(Me.tableProduct_Log.OdorColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Odor' in table 'Product Log' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableProduct_Log.OdorColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property Flash_point() As String
            Get
                Try 
                    Return CType(Me(Me.tableProduct_Log.Flash_pointColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Flash_point' in table 'Product Log' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableProduct_Log.Flash_pointColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property Explosive_limits() As String
            Get
                Try 
                    Return CType(Me(Me.tableProduct_Log.Explosive_limitsColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Explosive_limits' in table 'Product Log' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableProduct_Log.Explosive_limitsColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property Autoignition_temperature() As String
            Get
                Try 
                    Return CType(Me(Me.tableProduct_Log.Autoignition_temperatureColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Autoignition_temperature' in table 'Product Log' is DBNull."& _ 
                            "", e)
                End Try
            End Get
            Set
                Me(Me.tableProduct_Log.Autoignition_temperatureColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property EPA_number() As String
            Get
                Try 
                    Return CType(Me(Me.tableProduct_Log.EPA_numberColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'EPA_number' in table 'Product Log' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableProduct_Log.EPA_numberColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property Decomposition_temperature() As String
            Get
                Try 
                    Return CType(Me(Me.tableProduct_Log.Decomposition_temperatureColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Decomposition_temperature' in table 'Product Log' is DBNull"& _ 
                            ".", e)
                End Try
            End Get
            Set
                Me(Me.tableProduct_Log.Decomposition_temperatureColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property Product_RQ() As String
            Get
                Try 
                    Return CType(Me(Me.tableProduct_Log.Product_RQColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Product_RQ' in table 'Product Log' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableProduct_Log.Product_RQColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property Odor_threshold() As String
            Get
                Try 
                    Return CType(Me(Me.tableProduct_Log.Odor_thresholdColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Odor_threshold' in table 'Product Log' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableProduct_Log.Odor_thresholdColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property Evaporation_rate() As String
            Get
                Try 
                    Return CType(Me(Me.tableProduct_Log.Evaporation_rateColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Evaporation_rate' in table 'Product Log' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableProduct_Log.Evaporation_rateColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property Partition_coefficient() As String
            Get
                Try 
                    Return CType(Me(Me.tableProduct_Log.Partition_coefficientColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Partition_coefficient' in table 'Product Log' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableProduct_Log.Partition_coefficientColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property VOC_content() As String
            Get
                Try 
                    Return CType(Me(Me.tableProduct_Log.VOC_contentColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'VOC_content' in table 'Product Log' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableProduct_Log.VOC_contentColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property Viscosity() As String
            Get
                Try 
                    Return CType(Me(Me.tableProduct_Log.ViscosityColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Viscosity' in table 'Product Log' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableProduct_Log.ViscosityColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property HMIS() As String
            Get
                Try 
                    Return CType(Me(Me.tableProduct_Log.HMISColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'HMIS' in table 'Product Log' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableProduct_Log.HMISColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property NFPA() As String
            Get
                Try 
                    Return CType(Me(Me.tableProduct_Log.NFPAColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'NFPA' in table 'Product Log' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableProduct_Log.NFPAColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property CAS1() As String
            Get
                Try 
                    Return CType(Me(Me.tableProduct_Log.CAS1Column),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'CAS1' in table 'Product Log' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableProduct_Log.CAS1Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property CAS2() As String
            Get
                Try 
                    Return CType(Me(Me.tableProduct_Log.CAS2Column),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'CAS2' in table 'Product Log' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableProduct_Log.CAS2Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property CAS3() As String
            Get
                Try 
                    Return CType(Me(Me.tableProduct_Log.CAS3Column),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'CAS3' in table 'Product Log' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableProduct_Log.CAS3Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property CAS4() As String
            Get
                Try 
                    Return CType(Me(Me.tableProduct_Log.CAS4Column),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'CAS4' in table 'Product Log' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableProduct_Log.CAS4Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property CAS5() As String
            Get
                Try 
                    Return CType(Me(Me.tableProduct_Log.CAS5Column),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'CAS5' in table 'Product Log' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableProduct_Log.CAS5Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property CAS6() As String
            Get
                Try 
                    Return CType(Me(Me.tableProduct_Log.CAS6Column),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'CAS6' in table 'Product Log' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableProduct_Log.CAS6Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property OSHA_PEL1() As String
            Get
                Try 
                    Return CType(Me(Me.tableProduct_Log.OSHA_PEL1Column),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'OSHA_PEL1' in table 'Product Log' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableProduct_Log.OSHA_PEL1Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property OSHA_PEL2() As String
            Get
                Try 
                    Return CType(Me(Me.tableProduct_Log.OSHA_PEL2Column),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'OSHA_PEL2' in table 'Product Log' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableProduct_Log.OSHA_PEL2Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property OSHA_PEL3() As String
            Get
                Try 
                    Return CType(Me(Me.tableProduct_Log.OSHA_PEL3Column),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'OSHA_PEL3' in table 'Product Log' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableProduct_Log.OSHA_PEL3Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property OSHA_PEL4() As String
            Get
                Try 
                    Return CType(Me(Me.tableProduct_Log.OSHA_PEL4Column),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'OSHA_PEL4' in table 'Product Log' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableProduct_Log.OSHA_PEL4Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property OSHA_PEL5() As String
            Get
                Try 
                    Return CType(Me(Me.tableProduct_Log.OSHA_PEL5Column),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'OSHA_PEL5' in table 'Product Log' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableProduct_Log.OSHA_PEL5Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property OSHA_PEL6() As String
            Get
                Try 
                    Return CType(Me(Me.tableProduct_Log.OSHA_PEL6Column),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'OSHA_PEL6' in table 'Product Log' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableProduct_Log.OSHA_PEL6Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property ACGIH_TLV1() As String
            Get
                Try 
                    Return CType(Me(Me.tableProduct_Log.ACGIH_TLV1Column),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'ACGIH_TLV1' in table 'Product Log' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableProduct_Log.ACGIH_TLV1Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property ACGIH_TLV2() As String
            Get
                Try 
                    Return CType(Me(Me.tableProduct_Log.ACGIH_TLV2Column),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'ACGIH_TLV2' in table 'Product Log' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableProduct_Log.ACGIH_TLV2Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property ACGIH_TLV3() As String
            Get
                Try 
                    Return CType(Me(Me.tableProduct_Log.ACGIH_TLV3Column),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'ACGIH_TLV3' in table 'Product Log' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableProduct_Log.ACGIH_TLV3Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property ACGIH_TLV4() As String
            Get
                Try 
                    Return CType(Me(Me.tableProduct_Log.ACGIH_TLV4Column),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'ACGIH_TLV4' in table 'Product Log' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableProduct_Log.ACGIH_TLV4Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property ACGIH_TLV5() As String
            Get
                Try 
                    Return CType(Me(Me.tableProduct_Log.ACGIH_TLV5Column),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'ACGIH_TLV5' in table 'Product Log' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableProduct_Log.ACGIH_TLV5Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property ACGIH_TLV6() As String
            Get
                Try 
                    Return CType(Me(Me.tableProduct_Log.ACGIH_TLV6Column),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'ACGIH_TLV6' in table 'Product Log' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableProduct_Log.ACGIH_TLV6Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property Health2() As String
            Get
                Try 
                    Return CType(Me(Me.tableProduct_Log.Health2Column),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Health2' in table 'Product Log' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableProduct_Log.Health2Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property Physical2() As String
            Get
                Try 
                    Return CType(Me(Me.tableProduct_Log.Physical2Column),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Physical2' in table 'Product Log' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableProduct_Log.Physical2Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property Environmental2() As String
            Get
                Try 
                    Return CType(Me(Me.tableProduct_Log.Environmental2Column),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Environmental2' in table 'Product Log' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableProduct_Log.Environmental2Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property goTime() As Date
            Get
                Try 
                    Return CType(Me(Me.tableProduct_Log.goTimeColumn),Date)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'goTime' in table 'Product Log' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableProduct_Log.goTimeColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property Clones() As String
            Get
                Try 
                    Return CType(Me(Me.tableProduct_Log.ClonesColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Clones' in table 'Product Log' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableProduct_Log.ClonesColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property Issue_date() As Date
            Get
                Try 
                    Return CType(Me(Me.tableProduct_Log.Issue_dateColumn),Date)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Issue_date' in table 'Product Log' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableProduct_Log.Issue_dateColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property Revision_date() As Date
            Get
                Try 
                    Return CType(Me(Me.tableProduct_Log.Revision_dateColumn),Date)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Revision_date' in table 'Product Log' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableProduct_Log.Revision_dateColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property Version() As Integer
            Get
                Try 
                    Return CType(Me(Me.tableProduct_Log.VersionColumn),Integer)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Version' in table 'Product Log' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableProduct_Log.VersionColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property Note() As String
            Get
                Try 
                    Return CType(Me(Me.tableProduct_Log.NoteColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Note' in table 'Product Log' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableProduct_Log.NoteColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsProduct_nameNull() As Boolean
            Return Me.IsNull(Me.tableProduct_Log.Product_nameColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetProduct_nameNull()
            Me(Me.tableProduct_Log.Product_nameColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsOldUNNull() As Boolean
            Return Me.IsNull(Me.tableProduct_Log.OldUNColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetOldUNNull()
            Me(Me.tableProduct_Log.OldUNColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsProduct_descriptionNull() As Boolean
            Return Me.IsNull(Me.tableProduct_Log.Product_descriptionColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetProduct_descriptionNull()
            Me(Me.tableProduct_Log.Product_descriptionColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsProduct_classNull() As Boolean
            Return Me.IsNull(Me.tableProduct_Log.Product_classColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetProduct_classNull()
            Me(Me.tableProduct_Log.Product_classColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsSupplier_codeNull() As Boolean
            Return Me.IsNull(Me.tableProduct_Log.Supplier_codeColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetSupplier_codeNull()
            Me(Me.tableProduct_Log.Supplier_codeColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsComp1Null() As Boolean
            Return Me.IsNull(Me.tableProduct_Log.Comp1Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetComp1Null()
            Me(Me.tableProduct_Log.Comp1Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsWeightRangeLow1Null() As Boolean
            Return Me.IsNull(Me.tableProduct_Log.WeightRangeLow1Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetWeightRangeLow1Null()
            Me(Me.tableProduct_Log.WeightRangeLow1Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsWeightRangeHigh1Null() As Boolean
            Return Me.IsNull(Me.tableProduct_Log.WeightRangeHigh1Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetWeightRangeHigh1Null()
            Me(Me.tableProduct_Log.WeightRangeHigh1Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsWeightRange1Null() As Boolean
            Return Me.IsNull(Me.tableProduct_Log.WeightRange1Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetWeightRange1Null()
            Me(Me.tableProduct_Log.WeightRange1Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsComp2Null() As Boolean
            Return Me.IsNull(Me.tableProduct_Log.Comp2Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetComp2Null()
            Me(Me.tableProduct_Log.Comp2Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsWeightRangeLow2Null() As Boolean
            Return Me.IsNull(Me.tableProduct_Log.WeightRangeLow2Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetWeightRangeLow2Null()
            Me(Me.tableProduct_Log.WeightRangeLow2Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsWeightRangeHigh2Null() As Boolean
            Return Me.IsNull(Me.tableProduct_Log.WeightRangeHigh2Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetWeightRangeHigh2Null()
            Me(Me.tableProduct_Log.WeightRangeHigh2Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsWeightRange2Null() As Boolean
            Return Me.IsNull(Me.tableProduct_Log.WeightRange2Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetWeightRange2Null()
            Me(Me.tableProduct_Log.WeightRange2Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsComp3Null() As Boolean
            Return Me.IsNull(Me.tableProduct_Log.Comp3Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetComp3Null()
            Me(Me.tableProduct_Log.Comp3Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsWeightRangeLow3Null() As Boolean
            Return Me.IsNull(Me.tableProduct_Log.WeightRangeLow3Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetWeightRangeLow3Null()
            Me(Me.tableProduct_Log.WeightRangeLow3Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsWeightRangeHigh3Null() As Boolean
            Return Me.IsNull(Me.tableProduct_Log.WeightRangeHigh3Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetWeightRangeHigh3Null()
            Me(Me.tableProduct_Log.WeightRangeHigh3Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsWeightRange3Null() As Boolean
            Return Me.IsNull(Me.tableProduct_Log.WeightRange3Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetWeightRange3Null()
            Me(Me.tableProduct_Log.WeightRange3Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsComp4Null() As Boolean
            Return Me.IsNull(Me.tableProduct_Log.Comp4Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetComp4Null()
            Me(Me.tableProduct_Log.Comp4Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsWeightRangeLow4Null() As Boolean
            Return Me.IsNull(Me.tableProduct_Log.WeightRangeLow4Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetWeightRangeLow4Null()
            Me(Me.tableProduct_Log.WeightRangeLow4Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsWeightRangeHigh4Null() As Boolean
            Return Me.IsNull(Me.tableProduct_Log.WeightRangeHigh4Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetWeightRangeHigh4Null()
            Me(Me.tableProduct_Log.WeightRangeHigh4Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsWeightRange4Null() As Boolean
            Return Me.IsNull(Me.tableProduct_Log.WeightRange4Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetWeightRange4Null()
            Me(Me.tableProduct_Log.WeightRange4Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsComp5Null() As Boolean
            Return Me.IsNull(Me.tableProduct_Log.Comp5Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetComp5Null()
            Me(Me.tableProduct_Log.Comp5Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsWeightRangeLow5Null() As Boolean
            Return Me.IsNull(Me.tableProduct_Log.WeightRangeLow5Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetWeightRangeLow5Null()
            Me(Me.tableProduct_Log.WeightRangeLow5Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsWeightRangeHigh5Null() As Boolean
            Return Me.IsNull(Me.tableProduct_Log.WeightRangeHigh5Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetWeightRangeHigh5Null()
            Me(Me.tableProduct_Log.WeightRangeHigh5Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsWeightRange5Null() As Boolean
            Return Me.IsNull(Me.tableProduct_Log.WeightRange5Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetWeightRange5Null()
            Me(Me.tableProduct_Log.WeightRange5Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsComp6Null() As Boolean
            Return Me.IsNull(Me.tableProduct_Log.Comp6Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetComp6Null()
            Me(Me.tableProduct_Log.Comp6Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsWeightRangeLow6Null() As Boolean
            Return Me.IsNull(Me.tableProduct_Log.WeightRangeLow6Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetWeightRangeLow6Null()
            Me(Me.tableProduct_Log.WeightRangeLow6Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsWeightRangeHigh6Null() As Boolean
            Return Me.IsNull(Me.tableProduct_Log.WeightRangeHigh6Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetWeightRangeHigh6Null()
            Me(Me.tableProduct_Log.WeightRangeHigh6Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsWeightRange6Null() As Boolean
            Return Me.IsNull(Me.tableProduct_Log.WeightRange6Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetWeightRange6Null()
            Me(Me.tableProduct_Log.WeightRange6Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IspHNull() As Boolean
            Return Me.IsNull(Me.tableProduct_Log.pHColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetpHNull()
            Me(Me.tableProduct_Log.pHColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsSpecific_gravityNull() As Boolean
            Return Me.IsNull(Me.tableProduct_Log.Specific_gravityColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetSpecific_gravityNull()
            Me(Me.tableProduct_Log.Specific_gravityColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsBoiling_pointNull() As Boolean
            Return Me.IsNull(Me.tableProduct_Log.Boiling_pointColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetBoiling_pointNull()
            Me(Me.tableProduct_Log.Boiling_pointColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsFreezing_pointNull() As Boolean
            Return Me.IsNull(Me.tableProduct_Log.Freezing_pointColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetFreezing_pointNull()
            Me(Me.tableProduct_Log.Freezing_pointColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsSolubilityNull() As Boolean
            Return Me.IsNull(Me.tableProduct_Log.SolubilityColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetSolubilityNull()
            Me(Me.tableProduct_Log.SolubilityColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsVapor_densityNull() As Boolean
            Return Me.IsNull(Me.tableProduct_Log.Vapor_densityColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetVapor_densityNull()
            Me(Me.tableProduct_Log.Vapor_densityColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsVapor_pressureNull() As Boolean
            Return Me.IsNull(Me.tableProduct_Log.Vapor_pressureColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetVapor_pressureNull()
            Me(Me.tableProduct_Log.Vapor_pressureColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsAppearanceNull() As Boolean
            Return Me.IsNull(Me.tableProduct_Log.AppearanceColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetAppearanceNull()
            Me(Me.tableProduct_Log.AppearanceColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsOdorNull() As Boolean
            Return Me.IsNull(Me.tableProduct_Log.OdorColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetOdorNull()
            Me(Me.tableProduct_Log.OdorColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsFlash_pointNull() As Boolean
            Return Me.IsNull(Me.tableProduct_Log.Flash_pointColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetFlash_pointNull()
            Me(Me.tableProduct_Log.Flash_pointColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsExplosive_limitsNull() As Boolean
            Return Me.IsNull(Me.tableProduct_Log.Explosive_limitsColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetExplosive_limitsNull()
            Me(Me.tableProduct_Log.Explosive_limitsColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsAutoignition_temperatureNull() As Boolean
            Return Me.IsNull(Me.tableProduct_Log.Autoignition_temperatureColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetAutoignition_temperatureNull()
            Me(Me.tableProduct_Log.Autoignition_temperatureColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsEPA_numberNull() As Boolean
            Return Me.IsNull(Me.tableProduct_Log.EPA_numberColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetEPA_numberNull()
            Me(Me.tableProduct_Log.EPA_numberColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsDecomposition_temperatureNull() As Boolean
            Return Me.IsNull(Me.tableProduct_Log.Decomposition_temperatureColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetDecomposition_temperatureNull()
            Me(Me.tableProduct_Log.Decomposition_temperatureColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsProduct_RQNull() As Boolean
            Return Me.IsNull(Me.tableProduct_Log.Product_RQColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetProduct_RQNull()
            Me(Me.tableProduct_Log.Product_RQColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsOdor_thresholdNull() As Boolean
            Return Me.IsNull(Me.tableProduct_Log.Odor_thresholdColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetOdor_thresholdNull()
            Me(Me.tableProduct_Log.Odor_thresholdColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsEvaporation_rateNull() As Boolean
            Return Me.IsNull(Me.tableProduct_Log.Evaporation_rateColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetEvaporation_rateNull()
            Me(Me.tableProduct_Log.Evaporation_rateColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsPartition_coefficientNull() As Boolean
            Return Me.IsNull(Me.tableProduct_Log.Partition_coefficientColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetPartition_coefficientNull()
            Me(Me.tableProduct_Log.Partition_coefficientColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsVOC_contentNull() As Boolean
            Return Me.IsNull(Me.tableProduct_Log.VOC_contentColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetVOC_contentNull()
            Me(Me.tableProduct_Log.VOC_contentColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsViscosityNull() As Boolean
            Return Me.IsNull(Me.tableProduct_Log.ViscosityColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetViscosityNull()
            Me(Me.tableProduct_Log.ViscosityColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsHMISNull() As Boolean
            Return Me.IsNull(Me.tableProduct_Log.HMISColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetHMISNull()
            Me(Me.tableProduct_Log.HMISColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsNFPANull() As Boolean
            Return Me.IsNull(Me.tableProduct_Log.NFPAColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetNFPANull()
            Me(Me.tableProduct_Log.NFPAColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsCAS1Null() As Boolean
            Return Me.IsNull(Me.tableProduct_Log.CAS1Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetCAS1Null()
            Me(Me.tableProduct_Log.CAS1Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsCAS2Null() As Boolean
            Return Me.IsNull(Me.tableProduct_Log.CAS2Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetCAS2Null()
            Me(Me.tableProduct_Log.CAS2Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsCAS3Null() As Boolean
            Return Me.IsNull(Me.tableProduct_Log.CAS3Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetCAS3Null()
            Me(Me.tableProduct_Log.CAS3Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsCAS4Null() As Boolean
            Return Me.IsNull(Me.tableProduct_Log.CAS4Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetCAS4Null()
            Me(Me.tableProduct_Log.CAS4Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsCAS5Null() As Boolean
            Return Me.IsNull(Me.tableProduct_Log.CAS5Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetCAS5Null()
            Me(Me.tableProduct_Log.CAS5Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsCAS6Null() As Boolean
            Return Me.IsNull(Me.tableProduct_Log.CAS6Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetCAS6Null()
            Me(Me.tableProduct_Log.CAS6Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsOSHA_PEL1Null() As Boolean
            Return Me.IsNull(Me.tableProduct_Log.OSHA_PEL1Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetOSHA_PEL1Null()
            Me(Me.tableProduct_Log.OSHA_PEL1Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsOSHA_PEL2Null() As Boolean
            Return Me.IsNull(Me.tableProduct_Log.OSHA_PEL2Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetOSHA_PEL2Null()
            Me(Me.tableProduct_Log.OSHA_PEL2Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsOSHA_PEL3Null() As Boolean
            Return Me.IsNull(Me.tableProduct_Log.OSHA_PEL3Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetOSHA_PEL3Null()
            Me(Me.tableProduct_Log.OSHA_PEL3Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsOSHA_PEL4Null() As Boolean
            Return Me.IsNull(Me.tableProduct_Log.OSHA_PEL4Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetOSHA_PEL4Null()
            Me(Me.tableProduct_Log.OSHA_PEL4Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsOSHA_PEL5Null() As Boolean
            Return Me.IsNull(Me.tableProduct_Log.OSHA_PEL5Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetOSHA_PEL5Null()
            Me(Me.tableProduct_Log.OSHA_PEL5Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsOSHA_PEL6Null() As Boolean
            Return Me.IsNull(Me.tableProduct_Log.OSHA_PEL6Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetOSHA_PEL6Null()
            Me(Me.tableProduct_Log.OSHA_PEL6Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsACGIH_TLV1Null() As Boolean
            Return Me.IsNull(Me.tableProduct_Log.ACGIH_TLV1Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetACGIH_TLV1Null()
            Me(Me.tableProduct_Log.ACGIH_TLV1Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsACGIH_TLV2Null() As Boolean
            Return Me.IsNull(Me.tableProduct_Log.ACGIH_TLV2Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetACGIH_TLV2Null()
            Me(Me.tableProduct_Log.ACGIH_TLV2Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsACGIH_TLV3Null() As Boolean
            Return Me.IsNull(Me.tableProduct_Log.ACGIH_TLV3Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetACGIH_TLV3Null()
            Me(Me.tableProduct_Log.ACGIH_TLV3Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsACGIH_TLV4Null() As Boolean
            Return Me.IsNull(Me.tableProduct_Log.ACGIH_TLV4Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetACGIH_TLV4Null()
            Me(Me.tableProduct_Log.ACGIH_TLV4Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsACGIH_TLV5Null() As Boolean
            Return Me.IsNull(Me.tableProduct_Log.ACGIH_TLV5Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetACGIH_TLV5Null()
            Me(Me.tableProduct_Log.ACGIH_TLV5Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsACGIH_TLV6Null() As Boolean
            Return Me.IsNull(Me.tableProduct_Log.ACGIH_TLV6Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetACGIH_TLV6Null()
            Me(Me.tableProduct_Log.ACGIH_TLV6Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsHealth2Null() As Boolean
            Return Me.IsNull(Me.tableProduct_Log.Health2Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetHealth2Null()
            Me(Me.tableProduct_Log.Health2Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsPhysical2Null() As Boolean
            Return Me.IsNull(Me.tableProduct_Log.Physical2Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetPhysical2Null()
            Me(Me.tableProduct_Log.Physical2Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsEnvironmental2Null() As Boolean
            Return Me.IsNull(Me.tableProduct_Log.Environmental2Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetEnvironmental2Null()
            Me(Me.tableProduct_Log.Environmental2Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsgoTimeNull() As Boolean
            Return Me.IsNull(Me.tableProduct_Log.goTimeColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetgoTimeNull()
            Me(Me.tableProduct_Log.goTimeColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsClonesNull() As Boolean
            Return Me.IsNull(Me.tableProduct_Log.ClonesColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetClonesNull()
            Me(Me.tableProduct_Log.ClonesColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsIssue_dateNull() As Boolean
            Return Me.IsNull(Me.tableProduct_Log.Issue_dateColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetIssue_dateNull()
            Me(Me.tableProduct_Log.Issue_dateColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsRevision_dateNull() As Boolean
            Return Me.IsNull(Me.tableProduct_Log.Revision_dateColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetRevision_dateNull()
            Me(Me.tableProduct_Log.Revision_dateColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsVersionNull() As Boolean
            Return Me.IsNull(Me.tableProduct_Log.VersionColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetVersionNull()
            Me(Me.tableProduct_Log.VersionColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsNoteNull() As Boolean
            Return Me.IsNull(Me.tableProduct_Log.NoteColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetNoteNull()
            Me(Me.tableProduct_Log.NoteColumn) = Global.System.Convert.DBNull
        End Sub
    End Class
    
    '''<summary>
    '''Represents strongly named DataRow class.
    '''</summary>
    Partial Public Class Safety_DanceRow
        Inherits Global.System.Data.DataRow
        
        Private tableSafety_Dance As Safety_DanceDataTable
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Sub New(ByVal rb As Global.System.Data.DataRowBuilder)
            MyBase.New(rb)
            Me.tableSafety_Dance = CType(Me.Table,Safety_DanceDataTable)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property SDID() As Integer
            Get
                Try 
                    Return CType(Me(Me.tableSafety_Dance.SDIDColumn),Integer)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'SDID' in table 'Safety Dance' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableSafety_Dance.SDIDColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property DOTContains() As String
            Get
                Try 
                    Return CType(Me(Me.tableSafety_Dance.DOTContainsColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'DOTContains' in table 'Safety Dance' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableSafety_Dance.DOTContainsColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property UN_number() As String
            Get
                Try 
                    Return CType(Me(Me.tableSafety_Dance.UN_numberColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'UN_number' in table 'Safety Dance' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableSafety_Dance.UN_numberColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property Proper_shipping_name() As String
            Get
                Try 
                    Return CType(Me(Me.tableSafety_Dance.Proper_shipping_nameColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Proper_shipping_name' in table 'Safety Dance' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableSafety_Dance.Proper_shipping_nameColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property Primary_haz() As String
            Get
                Try 
                    Return CType(Me(Me.tableSafety_Dance.Primary_hazColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Primary_haz' in table 'Safety Dance' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableSafety_Dance.Primary_hazColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property Secondary_haz() As String
            Get
                Try 
                    Return CType(Me(Me.tableSafety_Dance.Secondary_hazColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Secondary_haz' in table 'Safety Dance' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableSafety_Dance.Secondary_hazColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property Packing_group() As String
            Get
                Try 
                    Return CType(Me(Me.tableSafety_Dance.Packing_groupColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Packing_group' in table 'Safety Dance' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableSafety_Dance.Packing_groupColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property DOT() As String
            Get
                Try 
                    Return CType(Me(Me.tableSafety_Dance.DOTColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'DOT' in table 'Safety Dance' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableSafety_Dance.DOTColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property DOT_label() As String
            Get
                Try 
                    Return CType(Me(Me.tableSafety_Dance.DOT_labelColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'DOT_label' in table 'Safety Dance' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableSafety_Dance.DOT_labelColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property Hazard_classification() As String
            Get
                Try 
                    Return CType(Me(Me.tableSafety_Dance.Hazard_classificationColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Hazard_classification' in table 'Safety Dance' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableSafety_Dance.Hazard_classificationColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property fucky() As String
            Get
                Try 
                    Return CType(Me(Me.tableSafety_Dance.fuckyColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'fucky' in table 'Safety Dance' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableSafety_Dance.fuckyColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property Signal_word() As String
            Get
                Try 
                    Return CType(Me(Me.tableSafety_Dance.Signal_wordColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Signal_word' in table 'Safety Dance' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableSafety_Dance.Signal_wordColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property Hazard_statement() As String
            Get
                Try 
                    Return CType(Me(Me.tableSafety_Dance.Hazard_statementColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Hazard_statement' in table 'Safety Dance' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableSafety_Dance.Hazard_statementColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property Pict1() As String
            Get
                Try 
                    Return CType(Me(Me.tableSafety_Dance.Pict1Column),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Pict1' in table 'Safety Dance' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableSafety_Dance.Pict1Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property Pict2() As String
            Get
                Try 
                    Return CType(Me(Me.tableSafety_Dance.Pict2Column),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Pict2' in table 'Safety Dance' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableSafety_Dance.Pict2Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property Pict3() As String
            Get
                Try 
                    Return CType(Me(Me.tableSafety_Dance.Pict3Column),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Pict3' in table 'Safety Dance' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableSafety_Dance.Pict3Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property Pict4() As String
            Get
                Try 
                    Return CType(Me(Me.tableSafety_Dance.Pict4Column),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Pict4' in table 'Safety Dance' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableSafety_Dance.Pict4Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property Pict5() As String
            Get
                Try 
                    Return CType(Me(Me.tableSafety_Dance.Pict5Column),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Pict5' in table 'Safety Dance' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableSafety_Dance.Pict5Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property Pre_prevention() As String
            Get
                Try 
                    Return CType(Me(Me.tableSafety_Dance.Pre_preventionColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Pre_prevention' in table 'Safety Dance' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableSafety_Dance.Pre_preventionColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property Pre_response() As String
            Get
                Try 
                    Return CType(Me(Me.tableSafety_Dance.Pre_responseColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Pre_response' in table 'Safety Dance' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableSafety_Dance.Pre_responseColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property Pre_storage() As String
            Get
                Try 
                    Return CType(Me(Me.tableSafety_Dance.Pre_storageColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Pre_storage' in table 'Safety Dance' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableSafety_Dance.Pre_storageColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property Pre_disposal() As String
            Get
                Try 
                    Return CType(Me(Me.tableSafety_Dance.Pre_disposalColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Pre_disposal' in table 'Safety Dance' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableSafety_Dance.Pre_disposalColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property FA_eye_contact() As String
            Get
                Try 
                    Return CType(Me(Me.tableSafety_Dance.FA_eye_contactColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'FA_eye_contact' in table 'Safety Dance' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableSafety_Dance.FA_eye_contactColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property FA_skin_contact() As String
            Get
                Try 
                    Return CType(Me(Me.tableSafety_Dance.FA_skin_contactColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'FA_skin_contact' in table 'Safety Dance' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableSafety_Dance.FA_skin_contactColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property FA_ingestion() As String
            Get
                Try 
                    Return CType(Me(Me.tableSafety_Dance.FA_ingestionColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'FA_ingestion' in table 'Safety Dance' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableSafety_Dance.FA_ingestionColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property FA_inhalation() As String
            Get
                Try 
                    Return CType(Me(Me.tableSafety_Dance.FA_inhalationColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'FA_inhalation' in table 'Safety Dance' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableSafety_Dance.FA_inhalationColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property Note_to_HCP() As String
            Get
                Try 
                    Return CType(Me(Me.tableSafety_Dance.Note_to_HCPColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Note_to_HCP' in table 'Safety Dance' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableSafety_Dance.Note_to_HCPColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property Suitable_extinguishing_media() As String
            Get
                Try 
                    Return CType(Me(Me.tableSafety_Dance.Suitable_extinguishing_mediaColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Suitable_extinguishing_media' in table 'Safety Dance' is DB"& _ 
                            "Null.", e)
                End Try
            End Get
            Set
                Me(Me.tableSafety_Dance.Suitable_extinguishing_mediaColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property Unsuitable_extinguishing_media() As String
            Get
                Try 
                    Return CType(Me(Me.tableSafety_Dance.Unsuitable_extinguishing_mediaColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Unsuitable_extinguishing_media' in table 'Safety Dance' is "& _ 
                            "DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableSafety_Dance.Unsuitable_extinguishing_mediaColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property Precautions_for_firefighters() As String
            Get
                Try 
                    Return CType(Me(Me.tableSafety_Dance.Precautions_for_firefightersColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Precautions_for_firefighters' in table 'Safety Dance' is DB"& _ 
                            "Null.", e)
                End Try
            End Get
            Set
                Me(Me.tableSafety_Dance.Precautions_for_firefightersColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property Specific_hazards() As String
            Get
                Try 
                    Return CType(Me(Me.tableSafety_Dance.Specific_hazardsColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Specific_hazards' in table 'Safety Dance' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableSafety_Dance.Specific_hazardsColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property Hazardous_combustion_products() As String
            Get
                Try 
                    Return CType(Me(Me.tableSafety_Dance.Hazardous_combustion_productsColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Hazardous_combustion_products' in table 'Safety Dance' is D"& _ 
                            "BNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableSafety_Dance.Hazardous_combustion_productsColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property Personal_precautions() As String
            Get
                Try 
                    Return CType(Me(Me.tableSafety_Dance.Personal_precautionsColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Personal_precautions' in table 'Safety Dance' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableSafety_Dance.Personal_precautionsColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property Small_spills() As String
            Get
                Try 
                    Return CType(Me(Me.tableSafety_Dance.Small_spillsColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Small_spills' in table 'Safety Dance' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableSafety_Dance.Small_spillsColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property Large_spills() As String
            Get
                Try 
                    Return CType(Me(Me.tableSafety_Dance.Large_spillsColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Large_spills' in table 'Safety Dance' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableSafety_Dance.Large_spillsColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property Advice_on_safe_handling() As String
            Get
                Try 
                    Return CType(Me(Me.tableSafety_Dance.Advice_on_safe_handlingColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Advice_on_safe_handling' in table 'Safety Dance' is DBNull."& _ 
                            "", e)
                End Try
            End Get
            Set
                Me(Me.tableSafety_Dance.Advice_on_safe_handlingColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property Storage_conditions() As String
            Get
                Try 
                    Return CType(Me(Me.tableSafety_Dance.Storage_conditionsColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Storage_conditions' in table 'Safety Dance' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableSafety_Dance.Storage_conditionsColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property Suitable_materials_of_construction() As String
            Get
                Try 
                    Return CType(Me(Me.tableSafety_Dance.Suitable_materials_of_constructionColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Suitable_materials_of_construction' in table 'Safety Dance'"& _ 
                            " is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableSafety_Dance.Suitable_materials_of_constructionColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property Unsuitable_materials_of_construction() As String
            Get
                Try 
                    Return CType(Me(Me.tableSafety_Dance.Unsuitable_materials_of_constructionColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Unsuitable_materials_of_construction' in table 'Safety Danc"& _ 
                            "e' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableSafety_Dance.Unsuitable_materials_of_constructionColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property Eye_face_protection() As String
            Get
                Try 
                    Return CType(Me(Me.tableSafety_Dance.Eye_face_protectionColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Eye_face_protection' in table 'Safety Dance' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableSafety_Dance.Eye_face_protectionColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property Skin_protection() As String
            Get
                Try 
                    Return CType(Me(Me.tableSafety_Dance.Skin_protectionColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Skin_protection' in table 'Safety Dance' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableSafety_Dance.Skin_protectionColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property Respiratory_protection() As String
            Get
                Try 
                    Return CType(Me(Me.tableSafety_Dance.Respiratory_protectionColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Respiratory_protection' in table 'Safety Dance' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableSafety_Dance.Respiratory_protectionColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property Engineering_controls() As String
            Get
                Try 
                    Return CType(Me(Me.tableSafety_Dance.Engineering_controlsColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Engineering_controls' in table 'Safety Dance' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableSafety_Dance.Engineering_controlsColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property General_hygiene_considerations() As String
            Get
                Try 
                    Return CType(Me(Me.tableSafety_Dance.General_hygiene_considerationsColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'General_hygiene_considerations' in table 'Safety Dance' is "& _ 
                            "DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableSafety_Dance.General_hygiene_considerationsColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property Chemical_stability() As String
            Get
                Try 
                    Return CType(Me(Me.tableSafety_Dance.Chemical_stabilityColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Chemical_stability' in table 'Safety Dance' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableSafety_Dance.Chemical_stabilityColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property Hazardous_polymerization() As String
            Get
                Try 
                    Return CType(Me(Me.tableSafety_Dance.Hazardous_polymerizationColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Hazardous_polymerization' in table 'Safety Dance' is DBNull"& _ 
                            ".", e)
                End Try
            End Get
            Set
                Me(Me.tableSafety_Dance.Hazardous_polymerizationColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property Conditions_to_avoid() As String
            Get
                Try 
                    Return CType(Me(Me.tableSafety_Dance.Conditions_to_avoidColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Conditions_to_avoid' in table 'Safety Dance' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableSafety_Dance.Conditions_to_avoidColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property Incompatibilities() As String
            Get
                Try 
                    Return CType(Me(Me.tableSafety_Dance.IncompatibilitiesColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Incompatibilities' in table 'Safety Dance' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableSafety_Dance.IncompatibilitiesColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property Hazardous_decomposition_products() As String
            Get
                Try 
                    Return CType(Me(Me.tableSafety_Dance.Hazardous_decomposition_productsColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Hazardous_decomposition_products' in table 'Safety Dance' i"& _ 
                            "s DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableSafety_Dance.Hazardous_decomposition_productsColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property Likely_routes_of_exposure() As String
            Get
                Try 
                    Return CType(Me(Me.tableSafety_Dance.Likely_routes_of_exposureColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Likely_routes_of_exposure' in table 'Safety Dance' is DBNul"& _ 
                            "l.", e)
                End Try
            End Get
            Set
                Me(Me.tableSafety_Dance.Likely_routes_of_exposureColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property Eye_contact() As String
            Get
                Try 
                    Return CType(Me(Me.tableSafety_Dance.Eye_contactColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Eye_contact' in table 'Safety Dance' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableSafety_Dance.Eye_contactColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property Skin_contact() As String
            Get
                Try 
                    Return CType(Me(Me.tableSafety_Dance.Skin_contactColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Skin_contact' in table 'Safety Dance' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableSafety_Dance.Skin_contactColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property Ingestion() As String
            Get
                Try 
                    Return CType(Me(Me.tableSafety_Dance.IngestionColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Ingestion' in table 'Safety Dance' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableSafety_Dance.IngestionColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property Inhalation() As String
            Get
                Try 
                    Return CType(Me(Me.tableSafety_Dance.InhalationColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Inhalation' in table 'Safety Dance' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableSafety_Dance.InhalationColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property Reproductive_effects() As String
            Get
                Try 
                    Return CType(Me(Me.tableSafety_Dance.Reproductive_effectsColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Reproductive_effects' in table 'Safety Dance' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableSafety_Dance.Reproductive_effectsColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property Teratogenicity() As String
            Get
                Try 
                    Return CType(Me(Me.tableSafety_Dance.TeratogenicityColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Teratogenicity' in table 'Safety Dance' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableSafety_Dance.TeratogenicityColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property Mutagenicity() As String
            Get
                Try 
                    Return CType(Me(Me.tableSafety_Dance.MutagenicityColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Mutagenicity' in table 'Safety Dance' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableSafety_Dance.MutagenicityColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property Embryotoxicity() As String
            Get
                Try 
                    Return CType(Me(Me.tableSafety_Dance.EmbryotoxicityColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Embryotoxicity' in table 'Safety Dance' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableSafety_Dance.EmbryotoxicityColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property Sensitization_to_product() As String
            Get
                Try 
                    Return CType(Me(Me.tableSafety_Dance.Sensitization_to_productColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Sensitization_to_product' in table 'Safety Dance' is DBNull"& _ 
                            ".", e)
                End Try
            End Get
            Set
                Me(Me.tableSafety_Dance.Sensitization_to_productColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property Synergistic_products() As String
            Get
                Try 
                    Return CType(Me(Me.tableSafety_Dance.Synergistic_productsColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Synergistic_products' in table 'Safety Dance' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableSafety_Dance.Synergistic_productsColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property Carcinogenicity() As String
            Get
                Try 
                    Return CType(Me(Me.tableSafety_Dance.CarcinogenicityColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Carcinogenicity' in table 'Safety Dance' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableSafety_Dance.CarcinogenicityColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property Chronic() As String
            Get
                Try 
                    Return CType(Me(Me.tableSafety_Dance.ChronicColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Chronic' in table 'Safety Dance' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableSafety_Dance.ChronicColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property Persistence() As String
            Get
                Try 
                    Return CType(Me(Me.tableSafety_Dance.PersistenceColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Persistence' in table 'Safety Dance' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableSafety_Dance.PersistenceColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property Bioaccumulative_potential() As String
            Get
                Try 
                    Return CType(Me(Me.tableSafety_Dance.Bioaccumulative_potentialColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Bioaccumulative_potential' in table 'Safety Dance' is DBNul"& _ 
                            "l.", e)
                End Try
            End Get
            Set
                Me(Me.tableSafety_Dance.Bioaccumulative_potentialColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property Mobility() As String
            Get
                Try 
                    Return CType(Me(Me.tableSafety_Dance.MobilityColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Mobility' in table 'Safety Dance' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableSafety_Dance.MobilityColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property Disposal() As String
            Get
                Try 
                    Return CType(Me(Me.tableSafety_Dance.DisposalColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Disposal' in table 'Safety Dance' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableSafety_Dance.DisposalColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property RCRA_status() As String
            Get
                Try 
                    Return CType(Me(Me.tableSafety_Dance.RCRA_statusColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'RCRA_status' in table 'Safety Dance' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableSafety_Dance.RCRA_statusColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property TSCA() As String
            Get
                Try 
                    Return CType(Me(Me.tableSafety_Dance.TSCAColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'TSCA' in table 'Safety Dance' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableSafety_Dance.TSCAColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property SARA311I() As Boolean
            Get
                Try 
                    Return CType(Me(Me.tableSafety_Dance.SARA311IColumn),Boolean)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'SARA311I' in table 'Safety Dance' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableSafety_Dance.SARA311IColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property SARA311D() As Boolean
            Get
                Try 
                    Return CType(Me(Me.tableSafety_Dance.SARA311DColumn),Boolean)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'SARA311D' in table 'Safety Dance' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableSafety_Dance.SARA311DColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property SARA311F() As Boolean
            Get
                Try 
                    Return CType(Me(Me.tableSafety_Dance.SARA311FColumn),Boolean)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'SARA311F' in table 'Safety Dance' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableSafety_Dance.SARA311FColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property SARA311P() As Boolean
            Get
                Try 
                    Return CType(Me(Me.tableSafety_Dance.SARA311PColumn),Boolean)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'SARA311P' in table 'Safety Dance' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableSafety_Dance.SARA311PColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property SARA311R() As Boolean
            Get
                Try 
                    Return CType(Me(Me.tableSafety_Dance.SARA311RColumn),Boolean)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'SARA311R' in table 'Safety Dance' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableSafety_Dance.SARA311RColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property HMISH() As String
            Get
                Try 
                    Return CType(Me(Me.tableSafety_Dance.HMISHColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'HMISH' in table 'Safety Dance' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableSafety_Dance.HMISHColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property HMISF() As String
            Get
                Try 
                    Return CType(Me(Me.tableSafety_Dance.HMISFColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'HMISF' in table 'Safety Dance' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableSafety_Dance.HMISFColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property HMISR() As String
            Get
                Try 
                    Return CType(Me(Me.tableSafety_Dance.HMISRColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'HMISR' in table 'Safety Dance' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableSafety_Dance.HMISRColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property HMISS() As String
            Get
                Try 
                    Return CType(Me(Me.tableSafety_Dance.HMISSColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'HMISS' in table 'Safety Dance' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableSafety_Dance.HMISSColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property NFPAH() As String
            Get
                Try 
                    Return CType(Me(Me.tableSafety_Dance.NFPAHColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'NFPAH' in table 'Safety Dance' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableSafety_Dance.NFPAHColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property NFPAF() As String
            Get
                Try 
                    Return CType(Me(Me.tableSafety_Dance.NFPAFColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'NFPAF' in table 'Safety Dance' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableSafety_Dance.NFPAFColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property NFPAR() As String
            Get
                Try 
                    Return CType(Me(Me.tableSafety_Dance.NFPARColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'NFPAR' in table 'Safety Dance' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableSafety_Dance.NFPARColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property NFPAS() As String
            Get
                Try 
                    Return CType(Me(Me.tableSafety_Dance.NFPASColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'NFPAS' in table 'Safety Dance' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableSafety_Dance.NFPASColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property FA_Eye_Contact_code() As Integer
            Get
                Try 
                    Return CType(Me(Me.tableSafety_Dance.FA_Eye_Contact_codeColumn),Integer)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'FA_Eye_Contact_code' in table 'Safety Dance' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableSafety_Dance.FA_Eye_Contact_codeColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property FA_skin_contact_code() As Integer
            Get
                Try 
                    Return CType(Me(Me.tableSafety_Dance.FA_skin_contact_codeColumn),Integer)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'FA_skin_contact_code' in table 'Safety Dance' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableSafety_Dance.FA_skin_contact_codeColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property FA_inhalation_code() As Integer
            Get
                Try 
                    Return CType(Me(Me.tableSafety_Dance.FA_inhalation_codeColumn),Integer)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'FA_inhalation_code' in table 'Safety Dance' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableSafety_Dance.FA_inhalation_codeColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property FA_ingestion_code() As Integer
            Get
                Try 
                    Return CType(Me(Me.tableSafety_Dance.FA_ingestion_codeColumn),Integer)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'FA_ingestion_code' in table 'Safety Dance' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableSafety_Dance.FA_ingestion_codeColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property Note_to_hcp_code() As Integer
            Get
                Try 
                    Return CType(Me(Me.tableSafety_Dance.Note_to_hcp_codeColumn),Integer)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Note_to_hcp_code' in table 'Safety Dance' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableSafety_Dance.Note_to_hcp_codeColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property Suitable_extinguishing_media_code() As Integer
            Get
                Try 
                    Return CType(Me(Me.tableSafety_Dance.Suitable_extinguishing_media_codeColumn),Integer)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Suitable_extinguishing_media_code' in table 'Safety Dance' "& _ 
                            "is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableSafety_Dance.Suitable_extinguishing_media_codeColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property Unsuitable_extinguishing_media_code() As Integer
            Get
                Try 
                    Return CType(Me(Me.tableSafety_Dance.Unsuitable_extinguishing_media_codeColumn),Integer)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Unsuitable_extinguishing_media_code' in table 'Safety Dance"& _ 
                            "' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableSafety_Dance.Unsuitable_extinguishing_media_codeColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property Precautions_for_firefighters_code() As Integer
            Get
                Try 
                    Return CType(Me(Me.tableSafety_Dance.Precautions_for_firefighters_codeColumn),Integer)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Precautions_for_firefighters_code' in table 'Safety Dance' "& _ 
                            "is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableSafety_Dance.Precautions_for_firefighters_codeColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property Specific_hazards_code() As Integer
            Get
                Try 
                    Return CType(Me(Me.tableSafety_Dance.Specific_hazards_codeColumn),Integer)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Specific_hazards_code' in table 'Safety Dance' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableSafety_Dance.Specific_hazards_codeColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property Hazardous_combustion_products_code() As Integer
            Get
                Try 
                    Return CType(Me(Me.tableSafety_Dance.Hazardous_combustion_products_codeColumn),Integer)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Hazardous_combustion_products_code' in table 'Safety Dance'"& _ 
                            " is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableSafety_Dance.Hazardous_combustion_products_codeColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property Personal_precautions_code() As Integer
            Get
                Try 
                    Return CType(Me(Me.tableSafety_Dance.Personal_precautions_codeColumn),Integer)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Personal_precautions_code' in table 'Safety Dance' is DBNul"& _ 
                            "l.", e)
                End Try
            End Get
            Set
                Me(Me.tableSafety_Dance.Personal_precautions_codeColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property Small_spills_code() As Integer
            Get
                Try 
                    Return CType(Me(Me.tableSafety_Dance.Small_spills_codeColumn),Integer)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Small_spills_code' in table 'Safety Dance' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableSafety_Dance.Small_spills_codeColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property Large_spills_code() As Integer
            Get
                Try 
                    Return CType(Me(Me.tableSafety_Dance.Large_spills_codeColumn),Integer)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Large_spills_code' in table 'Safety Dance' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableSafety_Dance.Large_spills_codeColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property Advice_on_safe_handling_code() As Integer
            Get
                Try 
                    Return CType(Me(Me.tableSafety_Dance.Advice_on_safe_handling_codeColumn),Integer)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Advice_on_safe_handling_code' in table 'Safety Dance' is DB"& _ 
                            "Null.", e)
                End Try
            End Get
            Set
                Me(Me.tableSafety_Dance.Advice_on_safe_handling_codeColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property Storage_conditions_code() As Integer
            Get
                Try 
                    Return CType(Me(Me.tableSafety_Dance.Storage_conditions_codeColumn),Integer)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Storage_conditions_code' in table 'Safety Dance' is DBNull."& _ 
                            "", e)
                End Try
            End Get
            Set
                Me(Me.tableSafety_Dance.Storage_conditions_codeColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property Suitable_materials_of_construction_code() As Integer
            Get
                Try 
                    Return CType(Me(Me.tableSafety_Dance.Suitable_materials_of_construction_codeColumn),Integer)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Suitable_materials_of_construction_code' in table 'Safety D"& _ 
                            "ance' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableSafety_Dance.Suitable_materials_of_construction_codeColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property Unsuitable_materials_of_construction_code() As Integer
            Get
                Try 
                    Return CType(Me(Me.tableSafety_Dance.Unsuitable_materials_of_construction_codeColumn),Integer)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Unsuitable_materials_of_construction_code' in table 'Safety"& _ 
                            " Dance' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableSafety_Dance.Unsuitable_materials_of_construction_codeColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property Eye_face_protection_code() As Integer
            Get
                Try 
                    Return CType(Me(Me.tableSafety_Dance.Eye_face_protection_codeColumn),Integer)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Eye_face_protection_code' in table 'Safety Dance' is DBNull"& _ 
                            ".", e)
                End Try
            End Get
            Set
                Me(Me.tableSafety_Dance.Eye_face_protection_codeColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property Skin_protection_code() As Integer
            Get
                Try 
                    Return CType(Me(Me.tableSafety_Dance.Skin_protection_codeColumn),Integer)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Skin_protection_code' in table 'Safety Dance' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableSafety_Dance.Skin_protection_codeColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property Respiratory_protection_code() As Integer
            Get
                Try 
                    Return CType(Me(Me.tableSafety_Dance.Respiratory_protection_codeColumn),Integer)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Respiratory_protection_code' in table 'Safety Dance' is DBN"& _ 
                            "ull.", e)
                End Try
            End Get
            Set
                Me(Me.tableSafety_Dance.Respiratory_protection_codeColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property Engineering_controls_code() As Integer
            Get
                Try 
                    Return CType(Me(Me.tableSafety_Dance.Engineering_controls_codeColumn),Integer)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Engineering_controls_code' in table 'Safety Dance' is DBNul"& _ 
                            "l.", e)
                End Try
            End Get
            Set
                Me(Me.tableSafety_Dance.Engineering_controls_codeColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property General_hygiene_considerations_code() As Integer
            Get
                Try 
                    Return CType(Me(Me.tableSafety_Dance.General_hygiene_considerations_codeColumn),Integer)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'General_hygiene_considerations_code' in table 'Safety Dance"& _ 
                            "' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableSafety_Dance.General_hygiene_considerations_codeColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property Chemical_stability_code() As Integer
            Get
                Try 
                    Return CType(Me(Me.tableSafety_Dance.Chemical_stability_codeColumn),Integer)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Chemical_stability_code' in table 'Safety Dance' is DBNull."& _ 
                            "", e)
                End Try
            End Get
            Set
                Me(Me.tableSafety_Dance.Chemical_stability_codeColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property Hazardous_polymerization_code() As Integer
            Get
                Try 
                    Return CType(Me(Me.tableSafety_Dance.Hazardous_polymerization_codeColumn),Integer)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Hazardous_polymerization_code' in table 'Safety Dance' is D"& _ 
                            "BNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableSafety_Dance.Hazardous_polymerization_codeColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property Conditions_to_avoid_code() As Integer
            Get
                Try 
                    Return CType(Me(Me.tableSafety_Dance.Conditions_to_avoid_codeColumn),Integer)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Conditions_to_avoid_code' in table 'Safety Dance' is DBNull"& _ 
                            ".", e)
                End Try
            End Get
            Set
                Me(Me.tableSafety_Dance.Conditions_to_avoid_codeColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property Incompatibilities_code() As Integer
            Get
                Try 
                    Return CType(Me(Me.tableSafety_Dance.Incompatibilities_codeColumn),Integer)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Incompatibilities_code' in table 'Safety Dance' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableSafety_Dance.Incompatibilities_codeColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property Hazardous_decomposition_products_code() As Integer
            Get
                Try 
                    Return CType(Me(Me.tableSafety_Dance.Hazardous_decomposition_products_codeColumn),Integer)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Hazardous_decomposition_products_code' in table 'Safety Dan"& _ 
                            "ce' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableSafety_Dance.Hazardous_decomposition_products_codeColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property Likely_routes_of_exposure_code() As Integer
            Get
                Try 
                    Return CType(Me(Me.tableSafety_Dance.Likely_routes_of_exposure_codeColumn),Integer)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Likely_routes_of_exposure_code' in table 'Safety Dance' is "& _ 
                            "DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableSafety_Dance.Likely_routes_of_exposure_codeColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property Skin_contact_code() As Integer
            Get
                Try 
                    Return CType(Me(Me.tableSafety_Dance.Skin_contact_codeColumn),Integer)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Skin_contact_code' in table 'Safety Dance' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableSafety_Dance.Skin_contact_codeColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property Ingestion_code() As Integer
            Get
                Try 
                    Return CType(Me(Me.tableSafety_Dance.Ingestion_codeColumn),Integer)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Ingestion_code' in table 'Safety Dance' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableSafety_Dance.Ingestion_codeColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property Inhalation_code() As Integer
            Get
                Try 
                    Return CType(Me(Me.tableSafety_Dance.Inhalation_codeColumn),Integer)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Inhalation_code' in table 'Safety Dance' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableSafety_Dance.Inhalation_codeColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property Reproductive_effects_code() As Integer
            Get
                Try 
                    Return CType(Me(Me.tableSafety_Dance.Reproductive_effects_codeColumn),Integer)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Reproductive_effects_code' in table 'Safety Dance' is DBNul"& _ 
                            "l.", e)
                End Try
            End Get
            Set
                Me(Me.tableSafety_Dance.Reproductive_effects_codeColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property Teratogenicity_code() As Integer
            Get
                Try 
                    Return CType(Me(Me.tableSafety_Dance.Teratogenicity_codeColumn),Integer)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Teratogenicity_code' in table 'Safety Dance' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableSafety_Dance.Teratogenicity_codeColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property Mutagenicity_code() As Integer
            Get
                Try 
                    Return CType(Me(Me.tableSafety_Dance.Mutagenicity_codeColumn),Integer)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Mutagenicity_code' in table 'Safety Dance' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableSafety_Dance.Mutagenicity_codeColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property Embryotoxicity_code() As Integer
            Get
                Try 
                    Return CType(Me(Me.tableSafety_Dance.Embryotoxicity_codeColumn),Integer)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Embryotoxicity_code' in table 'Safety Dance' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableSafety_Dance.Embryotoxicity_codeColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property Sensitization_to_product_code() As Integer
            Get
                Try 
                    Return CType(Me(Me.tableSafety_Dance.Sensitization_to_product_codeColumn),Integer)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Sensitization_to_product_code' in table 'Safety Dance' is D"& _ 
                            "BNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableSafety_Dance.Sensitization_to_product_codeColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property Synergistic_products_code() As Integer
            Get
                Try 
                    Return CType(Me(Me.tableSafety_Dance.Synergistic_products_codeColumn),Integer)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Synergistic_products_code' in table 'Safety Dance' is DBNul"& _ 
                            "l.", e)
                End Try
            End Get
            Set
                Me(Me.tableSafety_Dance.Synergistic_products_codeColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property Carcinogenicity_code() As Integer
            Get
                Try 
                    Return CType(Me(Me.tableSafety_Dance.Carcinogenicity_codeColumn),Integer)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Carcinogenicity_code' in table 'Safety Dance' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableSafety_Dance.Carcinogenicity_codeColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property Chronic_code() As Integer
            Get
                Try 
                    Return CType(Me(Me.tableSafety_Dance.Chronic_codeColumn),Integer)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Chronic_code' in table 'Safety Dance' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableSafety_Dance.Chronic_codeColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property Persistence_code() As Integer
            Get
                Try 
                    Return CType(Me(Me.tableSafety_Dance.Persistence_codeColumn),Integer)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Persistence_code' in table 'Safety Dance' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableSafety_Dance.Persistence_codeColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property Bioaccumulative_potential_code() As Integer
            Get
                Try 
                    Return CType(Me(Me.tableSafety_Dance.Bioaccumulative_potential_codeColumn),Integer)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Bioaccumulative_potential_code' in table 'Safety Dance' is "& _ 
                            "DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableSafety_Dance.Bioaccumulative_potential_codeColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property Mobility_code() As Integer
            Get
                Try 
                    Return CType(Me(Me.tableSafety_Dance.Mobility_codeColumn),Integer)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Mobility_code' in table 'Safety Dance' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableSafety_Dance.Mobility_codeColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property Disposal_code() As Integer
            Get
                Try 
                    Return CType(Me(Me.tableSafety_Dance.Disposal_codeColumn),Integer)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Disposal_code' in table 'Safety Dance' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableSafety_Dance.Disposal_codeColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property RCRA_status_code() As Integer
            Get
                Try 
                    Return CType(Me(Me.tableSafety_Dance.RCRA_status_codeColumn),Integer)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'RCRA_status_code' in table 'Safety Dance' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableSafety_Dance.RCRA_status_codeColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property Eye_contact_code() As Integer
            Get
                Try 
                    Return CType(Me(Me.tableSafety_Dance.Eye_contact_codeColumn),Integer)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Eye_contact_code' in table 'Safety Dance' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableSafety_Dance.Eye_contact_codeColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property TSCA_code() As Integer
            Get
                Try 
                    Return CType(Me(Me.tableSafety_Dance.TSCA_codeColumn),Integer)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'TSCA_code' in table 'Safety Dance' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableSafety_Dance.TSCA_codeColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsSDIDNull() As Boolean
            Return Me.IsNull(Me.tableSafety_Dance.SDIDColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetSDIDNull()
            Me(Me.tableSafety_Dance.SDIDColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsDOTContainsNull() As Boolean
            Return Me.IsNull(Me.tableSafety_Dance.DOTContainsColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetDOTContainsNull()
            Me(Me.tableSafety_Dance.DOTContainsColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsUN_numberNull() As Boolean
            Return Me.IsNull(Me.tableSafety_Dance.UN_numberColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetUN_numberNull()
            Me(Me.tableSafety_Dance.UN_numberColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsProper_shipping_nameNull() As Boolean
            Return Me.IsNull(Me.tableSafety_Dance.Proper_shipping_nameColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetProper_shipping_nameNull()
            Me(Me.tableSafety_Dance.Proper_shipping_nameColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsPrimary_hazNull() As Boolean
            Return Me.IsNull(Me.tableSafety_Dance.Primary_hazColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetPrimary_hazNull()
            Me(Me.tableSafety_Dance.Primary_hazColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsSecondary_hazNull() As Boolean
            Return Me.IsNull(Me.tableSafety_Dance.Secondary_hazColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetSecondary_hazNull()
            Me(Me.tableSafety_Dance.Secondary_hazColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsPacking_groupNull() As Boolean
            Return Me.IsNull(Me.tableSafety_Dance.Packing_groupColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetPacking_groupNull()
            Me(Me.tableSafety_Dance.Packing_groupColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsDOTNull() As Boolean
            Return Me.IsNull(Me.tableSafety_Dance.DOTColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetDOTNull()
            Me(Me.tableSafety_Dance.DOTColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsDOT_labelNull() As Boolean
            Return Me.IsNull(Me.tableSafety_Dance.DOT_labelColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetDOT_labelNull()
            Me(Me.tableSafety_Dance.DOT_labelColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsHazard_classificationNull() As Boolean
            Return Me.IsNull(Me.tableSafety_Dance.Hazard_classificationColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetHazard_classificationNull()
            Me(Me.tableSafety_Dance.Hazard_classificationColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsfuckyNull() As Boolean
            Return Me.IsNull(Me.tableSafety_Dance.fuckyColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetfuckyNull()
            Me(Me.tableSafety_Dance.fuckyColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsSignal_wordNull() As Boolean
            Return Me.IsNull(Me.tableSafety_Dance.Signal_wordColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetSignal_wordNull()
            Me(Me.tableSafety_Dance.Signal_wordColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsHazard_statementNull() As Boolean
            Return Me.IsNull(Me.tableSafety_Dance.Hazard_statementColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetHazard_statementNull()
            Me(Me.tableSafety_Dance.Hazard_statementColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsPict1Null() As Boolean
            Return Me.IsNull(Me.tableSafety_Dance.Pict1Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetPict1Null()
            Me(Me.tableSafety_Dance.Pict1Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsPict2Null() As Boolean
            Return Me.IsNull(Me.tableSafety_Dance.Pict2Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetPict2Null()
            Me(Me.tableSafety_Dance.Pict2Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsPict3Null() As Boolean
            Return Me.IsNull(Me.tableSafety_Dance.Pict3Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetPict3Null()
            Me(Me.tableSafety_Dance.Pict3Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsPict4Null() As Boolean
            Return Me.IsNull(Me.tableSafety_Dance.Pict4Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetPict4Null()
            Me(Me.tableSafety_Dance.Pict4Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsPict5Null() As Boolean
            Return Me.IsNull(Me.tableSafety_Dance.Pict5Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetPict5Null()
            Me(Me.tableSafety_Dance.Pict5Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsPre_preventionNull() As Boolean
            Return Me.IsNull(Me.tableSafety_Dance.Pre_preventionColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetPre_preventionNull()
            Me(Me.tableSafety_Dance.Pre_preventionColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsPre_responseNull() As Boolean
            Return Me.IsNull(Me.tableSafety_Dance.Pre_responseColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetPre_responseNull()
            Me(Me.tableSafety_Dance.Pre_responseColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsPre_storageNull() As Boolean
            Return Me.IsNull(Me.tableSafety_Dance.Pre_storageColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetPre_storageNull()
            Me(Me.tableSafety_Dance.Pre_storageColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsPre_disposalNull() As Boolean
            Return Me.IsNull(Me.tableSafety_Dance.Pre_disposalColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetPre_disposalNull()
            Me(Me.tableSafety_Dance.Pre_disposalColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsFA_eye_contactNull() As Boolean
            Return Me.IsNull(Me.tableSafety_Dance.FA_eye_contactColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetFA_eye_contactNull()
            Me(Me.tableSafety_Dance.FA_eye_contactColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsFA_skin_contactNull() As Boolean
            Return Me.IsNull(Me.tableSafety_Dance.FA_skin_contactColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetFA_skin_contactNull()
            Me(Me.tableSafety_Dance.FA_skin_contactColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsFA_ingestionNull() As Boolean
            Return Me.IsNull(Me.tableSafety_Dance.FA_ingestionColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetFA_ingestionNull()
            Me(Me.tableSafety_Dance.FA_ingestionColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsFA_inhalationNull() As Boolean
            Return Me.IsNull(Me.tableSafety_Dance.FA_inhalationColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetFA_inhalationNull()
            Me(Me.tableSafety_Dance.FA_inhalationColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsNote_to_HCPNull() As Boolean
            Return Me.IsNull(Me.tableSafety_Dance.Note_to_HCPColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetNote_to_HCPNull()
            Me(Me.tableSafety_Dance.Note_to_HCPColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsSuitable_extinguishing_mediaNull() As Boolean
            Return Me.IsNull(Me.tableSafety_Dance.Suitable_extinguishing_mediaColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetSuitable_extinguishing_mediaNull()
            Me(Me.tableSafety_Dance.Suitable_extinguishing_mediaColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsUnsuitable_extinguishing_mediaNull() As Boolean
            Return Me.IsNull(Me.tableSafety_Dance.Unsuitable_extinguishing_mediaColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetUnsuitable_extinguishing_mediaNull()
            Me(Me.tableSafety_Dance.Unsuitable_extinguishing_mediaColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsPrecautions_for_firefightersNull() As Boolean
            Return Me.IsNull(Me.tableSafety_Dance.Precautions_for_firefightersColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetPrecautions_for_firefightersNull()
            Me(Me.tableSafety_Dance.Precautions_for_firefightersColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsSpecific_hazardsNull() As Boolean
            Return Me.IsNull(Me.tableSafety_Dance.Specific_hazardsColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetSpecific_hazardsNull()
            Me(Me.tableSafety_Dance.Specific_hazardsColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsHazardous_combustion_productsNull() As Boolean
            Return Me.IsNull(Me.tableSafety_Dance.Hazardous_combustion_productsColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetHazardous_combustion_productsNull()
            Me(Me.tableSafety_Dance.Hazardous_combustion_productsColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsPersonal_precautionsNull() As Boolean
            Return Me.IsNull(Me.tableSafety_Dance.Personal_precautionsColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetPersonal_precautionsNull()
            Me(Me.tableSafety_Dance.Personal_precautionsColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsSmall_spillsNull() As Boolean
            Return Me.IsNull(Me.tableSafety_Dance.Small_spillsColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetSmall_spillsNull()
            Me(Me.tableSafety_Dance.Small_spillsColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsLarge_spillsNull() As Boolean
            Return Me.IsNull(Me.tableSafety_Dance.Large_spillsColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetLarge_spillsNull()
            Me(Me.tableSafety_Dance.Large_spillsColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsAdvice_on_safe_handlingNull() As Boolean
            Return Me.IsNull(Me.tableSafety_Dance.Advice_on_safe_handlingColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetAdvice_on_safe_handlingNull()
            Me(Me.tableSafety_Dance.Advice_on_safe_handlingColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsStorage_conditionsNull() As Boolean
            Return Me.IsNull(Me.tableSafety_Dance.Storage_conditionsColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetStorage_conditionsNull()
            Me(Me.tableSafety_Dance.Storage_conditionsColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsSuitable_materials_of_constructionNull() As Boolean
            Return Me.IsNull(Me.tableSafety_Dance.Suitable_materials_of_constructionColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetSuitable_materials_of_constructionNull()
            Me(Me.tableSafety_Dance.Suitable_materials_of_constructionColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsUnsuitable_materials_of_constructionNull() As Boolean
            Return Me.IsNull(Me.tableSafety_Dance.Unsuitable_materials_of_constructionColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetUnsuitable_materials_of_constructionNull()
            Me(Me.tableSafety_Dance.Unsuitable_materials_of_constructionColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsEye_face_protectionNull() As Boolean
            Return Me.IsNull(Me.tableSafety_Dance.Eye_face_protectionColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetEye_face_protectionNull()
            Me(Me.tableSafety_Dance.Eye_face_protectionColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsSkin_protectionNull() As Boolean
            Return Me.IsNull(Me.tableSafety_Dance.Skin_protectionColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetSkin_protectionNull()
            Me(Me.tableSafety_Dance.Skin_protectionColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsRespiratory_protectionNull() As Boolean
            Return Me.IsNull(Me.tableSafety_Dance.Respiratory_protectionColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetRespiratory_protectionNull()
            Me(Me.tableSafety_Dance.Respiratory_protectionColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsEngineering_controlsNull() As Boolean
            Return Me.IsNull(Me.tableSafety_Dance.Engineering_controlsColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetEngineering_controlsNull()
            Me(Me.tableSafety_Dance.Engineering_controlsColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsGeneral_hygiene_considerationsNull() As Boolean
            Return Me.IsNull(Me.tableSafety_Dance.General_hygiene_considerationsColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetGeneral_hygiene_considerationsNull()
            Me(Me.tableSafety_Dance.General_hygiene_considerationsColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsChemical_stabilityNull() As Boolean
            Return Me.IsNull(Me.tableSafety_Dance.Chemical_stabilityColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetChemical_stabilityNull()
            Me(Me.tableSafety_Dance.Chemical_stabilityColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsHazardous_polymerizationNull() As Boolean
            Return Me.IsNull(Me.tableSafety_Dance.Hazardous_polymerizationColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetHazardous_polymerizationNull()
            Me(Me.tableSafety_Dance.Hazardous_polymerizationColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsConditions_to_avoidNull() As Boolean
            Return Me.IsNull(Me.tableSafety_Dance.Conditions_to_avoidColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetConditions_to_avoidNull()
            Me(Me.tableSafety_Dance.Conditions_to_avoidColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsIncompatibilitiesNull() As Boolean
            Return Me.IsNull(Me.tableSafety_Dance.IncompatibilitiesColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetIncompatibilitiesNull()
            Me(Me.tableSafety_Dance.IncompatibilitiesColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsHazardous_decomposition_productsNull() As Boolean
            Return Me.IsNull(Me.tableSafety_Dance.Hazardous_decomposition_productsColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetHazardous_decomposition_productsNull()
            Me(Me.tableSafety_Dance.Hazardous_decomposition_productsColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsLikely_routes_of_exposureNull() As Boolean
            Return Me.IsNull(Me.tableSafety_Dance.Likely_routes_of_exposureColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetLikely_routes_of_exposureNull()
            Me(Me.tableSafety_Dance.Likely_routes_of_exposureColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsEye_contactNull() As Boolean
            Return Me.IsNull(Me.tableSafety_Dance.Eye_contactColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetEye_contactNull()
            Me(Me.tableSafety_Dance.Eye_contactColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsSkin_contactNull() As Boolean
            Return Me.IsNull(Me.tableSafety_Dance.Skin_contactColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetSkin_contactNull()
            Me(Me.tableSafety_Dance.Skin_contactColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsIngestionNull() As Boolean
            Return Me.IsNull(Me.tableSafety_Dance.IngestionColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetIngestionNull()
            Me(Me.tableSafety_Dance.IngestionColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsInhalationNull() As Boolean
            Return Me.IsNull(Me.tableSafety_Dance.InhalationColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetInhalationNull()
            Me(Me.tableSafety_Dance.InhalationColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsReproductive_effectsNull() As Boolean
            Return Me.IsNull(Me.tableSafety_Dance.Reproductive_effectsColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetReproductive_effectsNull()
            Me(Me.tableSafety_Dance.Reproductive_effectsColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsTeratogenicityNull() As Boolean
            Return Me.IsNull(Me.tableSafety_Dance.TeratogenicityColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetTeratogenicityNull()
            Me(Me.tableSafety_Dance.TeratogenicityColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsMutagenicityNull() As Boolean
            Return Me.IsNull(Me.tableSafety_Dance.MutagenicityColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetMutagenicityNull()
            Me(Me.tableSafety_Dance.MutagenicityColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsEmbryotoxicityNull() As Boolean
            Return Me.IsNull(Me.tableSafety_Dance.EmbryotoxicityColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetEmbryotoxicityNull()
            Me(Me.tableSafety_Dance.EmbryotoxicityColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsSensitization_to_productNull() As Boolean
            Return Me.IsNull(Me.tableSafety_Dance.Sensitization_to_productColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetSensitization_to_productNull()
            Me(Me.tableSafety_Dance.Sensitization_to_productColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsSynergistic_productsNull() As Boolean
            Return Me.IsNull(Me.tableSafety_Dance.Synergistic_productsColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetSynergistic_productsNull()
            Me(Me.tableSafety_Dance.Synergistic_productsColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsCarcinogenicityNull() As Boolean
            Return Me.IsNull(Me.tableSafety_Dance.CarcinogenicityColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetCarcinogenicityNull()
            Me(Me.tableSafety_Dance.CarcinogenicityColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsChronicNull() As Boolean
            Return Me.IsNull(Me.tableSafety_Dance.ChronicColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetChronicNull()
            Me(Me.tableSafety_Dance.ChronicColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsPersistenceNull() As Boolean
            Return Me.IsNull(Me.tableSafety_Dance.PersistenceColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetPersistenceNull()
            Me(Me.tableSafety_Dance.PersistenceColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsBioaccumulative_potentialNull() As Boolean
            Return Me.IsNull(Me.tableSafety_Dance.Bioaccumulative_potentialColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetBioaccumulative_potentialNull()
            Me(Me.tableSafety_Dance.Bioaccumulative_potentialColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsMobilityNull() As Boolean
            Return Me.IsNull(Me.tableSafety_Dance.MobilityColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetMobilityNull()
            Me(Me.tableSafety_Dance.MobilityColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsDisposalNull() As Boolean
            Return Me.IsNull(Me.tableSafety_Dance.DisposalColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetDisposalNull()
            Me(Me.tableSafety_Dance.DisposalColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsRCRA_statusNull() As Boolean
            Return Me.IsNull(Me.tableSafety_Dance.RCRA_statusColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetRCRA_statusNull()
            Me(Me.tableSafety_Dance.RCRA_statusColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsTSCANull() As Boolean
            Return Me.IsNull(Me.tableSafety_Dance.TSCAColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetTSCANull()
            Me(Me.tableSafety_Dance.TSCAColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsSARA311INull() As Boolean
            Return Me.IsNull(Me.tableSafety_Dance.SARA311IColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetSARA311INull()
            Me(Me.tableSafety_Dance.SARA311IColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsSARA311DNull() As Boolean
            Return Me.IsNull(Me.tableSafety_Dance.SARA311DColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetSARA311DNull()
            Me(Me.tableSafety_Dance.SARA311DColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsSARA311FNull() As Boolean
            Return Me.IsNull(Me.tableSafety_Dance.SARA311FColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetSARA311FNull()
            Me(Me.tableSafety_Dance.SARA311FColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsSARA311PNull() As Boolean
            Return Me.IsNull(Me.tableSafety_Dance.SARA311PColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetSARA311PNull()
            Me(Me.tableSafety_Dance.SARA311PColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsSARA311RNull() As Boolean
            Return Me.IsNull(Me.tableSafety_Dance.SARA311RColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetSARA311RNull()
            Me(Me.tableSafety_Dance.SARA311RColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsHMISHNull() As Boolean
            Return Me.IsNull(Me.tableSafety_Dance.HMISHColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetHMISHNull()
            Me(Me.tableSafety_Dance.HMISHColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsHMISFNull() As Boolean
            Return Me.IsNull(Me.tableSafety_Dance.HMISFColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetHMISFNull()
            Me(Me.tableSafety_Dance.HMISFColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsHMISRNull() As Boolean
            Return Me.IsNull(Me.tableSafety_Dance.HMISRColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetHMISRNull()
            Me(Me.tableSafety_Dance.HMISRColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsHMISSNull() As Boolean
            Return Me.IsNull(Me.tableSafety_Dance.HMISSColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetHMISSNull()
            Me(Me.tableSafety_Dance.HMISSColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsNFPAHNull() As Boolean
            Return Me.IsNull(Me.tableSafety_Dance.NFPAHColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetNFPAHNull()
            Me(Me.tableSafety_Dance.NFPAHColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsNFPAFNull() As Boolean
            Return Me.IsNull(Me.tableSafety_Dance.NFPAFColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetNFPAFNull()
            Me(Me.tableSafety_Dance.NFPAFColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsNFPARNull() As Boolean
            Return Me.IsNull(Me.tableSafety_Dance.NFPARColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetNFPARNull()
            Me(Me.tableSafety_Dance.NFPARColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsNFPASNull() As Boolean
            Return Me.IsNull(Me.tableSafety_Dance.NFPASColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetNFPASNull()
            Me(Me.tableSafety_Dance.NFPASColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsFA_Eye_Contact_codeNull() As Boolean
            Return Me.IsNull(Me.tableSafety_Dance.FA_Eye_Contact_codeColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetFA_Eye_Contact_codeNull()
            Me(Me.tableSafety_Dance.FA_Eye_Contact_codeColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsFA_skin_contact_codeNull() As Boolean
            Return Me.IsNull(Me.tableSafety_Dance.FA_skin_contact_codeColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetFA_skin_contact_codeNull()
            Me(Me.tableSafety_Dance.FA_skin_contact_codeColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsFA_inhalation_codeNull() As Boolean
            Return Me.IsNull(Me.tableSafety_Dance.FA_inhalation_codeColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetFA_inhalation_codeNull()
            Me(Me.tableSafety_Dance.FA_inhalation_codeColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsFA_ingestion_codeNull() As Boolean
            Return Me.IsNull(Me.tableSafety_Dance.FA_ingestion_codeColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetFA_ingestion_codeNull()
            Me(Me.tableSafety_Dance.FA_ingestion_codeColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsNote_to_hcp_codeNull() As Boolean
            Return Me.IsNull(Me.tableSafety_Dance.Note_to_hcp_codeColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetNote_to_hcp_codeNull()
            Me(Me.tableSafety_Dance.Note_to_hcp_codeColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsSuitable_extinguishing_media_codeNull() As Boolean
            Return Me.IsNull(Me.tableSafety_Dance.Suitable_extinguishing_media_codeColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetSuitable_extinguishing_media_codeNull()
            Me(Me.tableSafety_Dance.Suitable_extinguishing_media_codeColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsUnsuitable_extinguishing_media_codeNull() As Boolean
            Return Me.IsNull(Me.tableSafety_Dance.Unsuitable_extinguishing_media_codeColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetUnsuitable_extinguishing_media_codeNull()
            Me(Me.tableSafety_Dance.Unsuitable_extinguishing_media_codeColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsPrecautions_for_firefighters_codeNull() As Boolean
            Return Me.IsNull(Me.tableSafety_Dance.Precautions_for_firefighters_codeColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetPrecautions_for_firefighters_codeNull()
            Me(Me.tableSafety_Dance.Precautions_for_firefighters_codeColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsSpecific_hazards_codeNull() As Boolean
            Return Me.IsNull(Me.tableSafety_Dance.Specific_hazards_codeColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetSpecific_hazards_codeNull()
            Me(Me.tableSafety_Dance.Specific_hazards_codeColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsHazardous_combustion_products_codeNull() As Boolean
            Return Me.IsNull(Me.tableSafety_Dance.Hazardous_combustion_products_codeColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetHazardous_combustion_products_codeNull()
            Me(Me.tableSafety_Dance.Hazardous_combustion_products_codeColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsPersonal_precautions_codeNull() As Boolean
            Return Me.IsNull(Me.tableSafety_Dance.Personal_precautions_codeColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetPersonal_precautions_codeNull()
            Me(Me.tableSafety_Dance.Personal_precautions_codeColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsSmall_spills_codeNull() As Boolean
            Return Me.IsNull(Me.tableSafety_Dance.Small_spills_codeColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetSmall_spills_codeNull()
            Me(Me.tableSafety_Dance.Small_spills_codeColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsLarge_spills_codeNull() As Boolean
            Return Me.IsNull(Me.tableSafety_Dance.Large_spills_codeColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetLarge_spills_codeNull()
            Me(Me.tableSafety_Dance.Large_spills_codeColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsAdvice_on_safe_handling_codeNull() As Boolean
            Return Me.IsNull(Me.tableSafety_Dance.Advice_on_safe_handling_codeColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetAdvice_on_safe_handling_codeNull()
            Me(Me.tableSafety_Dance.Advice_on_safe_handling_codeColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsStorage_conditions_codeNull() As Boolean
            Return Me.IsNull(Me.tableSafety_Dance.Storage_conditions_codeColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetStorage_conditions_codeNull()
            Me(Me.tableSafety_Dance.Storage_conditions_codeColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsSuitable_materials_of_construction_codeNull() As Boolean
            Return Me.IsNull(Me.tableSafety_Dance.Suitable_materials_of_construction_codeColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetSuitable_materials_of_construction_codeNull()
            Me(Me.tableSafety_Dance.Suitable_materials_of_construction_codeColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsUnsuitable_materials_of_construction_codeNull() As Boolean
            Return Me.IsNull(Me.tableSafety_Dance.Unsuitable_materials_of_construction_codeColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetUnsuitable_materials_of_construction_codeNull()
            Me(Me.tableSafety_Dance.Unsuitable_materials_of_construction_codeColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsEye_face_protection_codeNull() As Boolean
            Return Me.IsNull(Me.tableSafety_Dance.Eye_face_protection_codeColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetEye_face_protection_codeNull()
            Me(Me.tableSafety_Dance.Eye_face_protection_codeColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsSkin_protection_codeNull() As Boolean
            Return Me.IsNull(Me.tableSafety_Dance.Skin_protection_codeColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetSkin_protection_codeNull()
            Me(Me.tableSafety_Dance.Skin_protection_codeColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsRespiratory_protection_codeNull() As Boolean
            Return Me.IsNull(Me.tableSafety_Dance.Respiratory_protection_codeColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetRespiratory_protection_codeNull()
            Me(Me.tableSafety_Dance.Respiratory_protection_codeColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsEngineering_controls_codeNull() As Boolean
            Return Me.IsNull(Me.tableSafety_Dance.Engineering_controls_codeColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetEngineering_controls_codeNull()
            Me(Me.tableSafety_Dance.Engineering_controls_codeColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsGeneral_hygiene_considerations_codeNull() As Boolean
            Return Me.IsNull(Me.tableSafety_Dance.General_hygiene_considerations_codeColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetGeneral_hygiene_considerations_codeNull()
            Me(Me.tableSafety_Dance.General_hygiene_considerations_codeColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsChemical_stability_codeNull() As Boolean
            Return Me.IsNull(Me.tableSafety_Dance.Chemical_stability_codeColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetChemical_stability_codeNull()
            Me(Me.tableSafety_Dance.Chemical_stability_codeColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsHazardous_polymerization_codeNull() As Boolean
            Return Me.IsNull(Me.tableSafety_Dance.Hazardous_polymerization_codeColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetHazardous_polymerization_codeNull()
            Me(Me.tableSafety_Dance.Hazardous_polymerization_codeColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsConditions_to_avoid_codeNull() As Boolean
            Return Me.IsNull(Me.tableSafety_Dance.Conditions_to_avoid_codeColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetConditions_to_avoid_codeNull()
            Me(Me.tableSafety_Dance.Conditions_to_avoid_codeColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsIncompatibilities_codeNull() As Boolean
            Return Me.IsNull(Me.tableSafety_Dance.Incompatibilities_codeColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetIncompatibilities_codeNull()
            Me(Me.tableSafety_Dance.Incompatibilities_codeColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsHazardous_decomposition_products_codeNull() As Boolean
            Return Me.IsNull(Me.tableSafety_Dance.Hazardous_decomposition_products_codeColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetHazardous_decomposition_products_codeNull()
            Me(Me.tableSafety_Dance.Hazardous_decomposition_products_codeColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsLikely_routes_of_exposure_codeNull() As Boolean
            Return Me.IsNull(Me.tableSafety_Dance.Likely_routes_of_exposure_codeColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetLikely_routes_of_exposure_codeNull()
            Me(Me.tableSafety_Dance.Likely_routes_of_exposure_codeColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsSkin_contact_codeNull() As Boolean
            Return Me.IsNull(Me.tableSafety_Dance.Skin_contact_codeColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetSkin_contact_codeNull()
            Me(Me.tableSafety_Dance.Skin_contact_codeColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsIngestion_codeNull() As Boolean
            Return Me.IsNull(Me.tableSafety_Dance.Ingestion_codeColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetIngestion_codeNull()
            Me(Me.tableSafety_Dance.Ingestion_codeColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsInhalation_codeNull() As Boolean
            Return Me.IsNull(Me.tableSafety_Dance.Inhalation_codeColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetInhalation_codeNull()
            Me(Me.tableSafety_Dance.Inhalation_codeColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsReproductive_effects_codeNull() As Boolean
            Return Me.IsNull(Me.tableSafety_Dance.Reproductive_effects_codeColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetReproductive_effects_codeNull()
            Me(Me.tableSafety_Dance.Reproductive_effects_codeColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsTeratogenicity_codeNull() As Boolean
            Return Me.IsNull(Me.tableSafety_Dance.Teratogenicity_codeColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetTeratogenicity_codeNull()
            Me(Me.tableSafety_Dance.Teratogenicity_codeColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsMutagenicity_codeNull() As Boolean
            Return Me.IsNull(Me.tableSafety_Dance.Mutagenicity_codeColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetMutagenicity_codeNull()
            Me(Me.tableSafety_Dance.Mutagenicity_codeColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsEmbryotoxicity_codeNull() As Boolean
            Return Me.IsNull(Me.tableSafety_Dance.Embryotoxicity_codeColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetEmbryotoxicity_codeNull()
            Me(Me.tableSafety_Dance.Embryotoxicity_codeColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsSensitization_to_product_codeNull() As Boolean
            Return Me.IsNull(Me.tableSafety_Dance.Sensitization_to_product_codeColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetSensitization_to_product_codeNull()
            Me(Me.tableSafety_Dance.Sensitization_to_product_codeColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsSynergistic_products_codeNull() As Boolean
            Return Me.IsNull(Me.tableSafety_Dance.Synergistic_products_codeColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetSynergistic_products_codeNull()
            Me(Me.tableSafety_Dance.Synergistic_products_codeColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsCarcinogenicity_codeNull() As Boolean
            Return Me.IsNull(Me.tableSafety_Dance.Carcinogenicity_codeColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetCarcinogenicity_codeNull()
            Me(Me.tableSafety_Dance.Carcinogenicity_codeColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsChronic_codeNull() As Boolean
            Return Me.IsNull(Me.tableSafety_Dance.Chronic_codeColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetChronic_codeNull()
            Me(Me.tableSafety_Dance.Chronic_codeColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsPersistence_codeNull() As Boolean
            Return Me.IsNull(Me.tableSafety_Dance.Persistence_codeColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetPersistence_codeNull()
            Me(Me.tableSafety_Dance.Persistence_codeColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsBioaccumulative_potential_codeNull() As Boolean
            Return Me.IsNull(Me.tableSafety_Dance.Bioaccumulative_potential_codeColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetBioaccumulative_potential_codeNull()
            Me(Me.tableSafety_Dance.Bioaccumulative_potential_codeColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsMobility_codeNull() As Boolean
            Return Me.IsNull(Me.tableSafety_Dance.Mobility_codeColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetMobility_codeNull()
            Me(Me.tableSafety_Dance.Mobility_codeColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsDisposal_codeNull() As Boolean
            Return Me.IsNull(Me.tableSafety_Dance.Disposal_codeColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetDisposal_codeNull()
            Me(Me.tableSafety_Dance.Disposal_codeColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsRCRA_status_codeNull() As Boolean
            Return Me.IsNull(Me.tableSafety_Dance.RCRA_status_codeColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetRCRA_status_codeNull()
            Me(Me.tableSafety_Dance.RCRA_status_codeColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsEye_contact_codeNull() As Boolean
            Return Me.IsNull(Me.tableSafety_Dance.Eye_contact_codeColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetEye_contact_codeNull()
            Me(Me.tableSafety_Dance.Eye_contact_codeColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsTSCA_codeNull() As Boolean
            Return Me.IsNull(Me.tableSafety_Dance.TSCA_codeColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetTSCA_codeNull()
            Me(Me.tableSafety_Dance.TSCA_codeColumn) = Global.System.Convert.DBNull
        End Sub
    End Class
    
    '''<summary>
    '''Represents strongly named DataRow class.
    '''</summary>
    Partial Public Class Safety_LexiconRow
        Inherits Global.System.Data.DataRow
        
        Private tableSafety_Lexicon As Safety_LexiconDataTable
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Sub New(ByVal rb As Global.System.Data.DataRowBuilder)
            MyBase.New(rb)
            Me.tableSafety_Lexicon = CType(Me.Table,Safety_LexiconDataTable)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property SAFLEXID() As Integer
            Get
                Try 
                    Return CType(Me(Me.tableSafety_Lexicon.SAFLEXIDColumn),Integer)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'SAFLEXID' in table 'Safety Lexicon' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableSafety_Lexicon.SAFLEXIDColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property FA_eye_contact() As String
            Get
                Try 
                    Return CType(Me(Me.tableSafety_Lexicon.FA_eye_contactColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'FA_eye_contact' in table 'Safety Lexicon' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableSafety_Lexicon.FA_eye_contactColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property FA_skin_contact() As String
            Get
                Try 
                    Return CType(Me(Me.tableSafety_Lexicon.FA_skin_contactColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'FA_skin_contact' in table 'Safety Lexicon' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableSafety_Lexicon.FA_skin_contactColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property FA_ingestion() As String
            Get
                Try 
                    Return CType(Me(Me.tableSafety_Lexicon.FA_ingestionColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'FA_ingestion' in table 'Safety Lexicon' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableSafety_Lexicon.FA_ingestionColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property FA_inhalation() As String
            Get
                Try 
                    Return CType(Me(Me.tableSafety_Lexicon.FA_inhalationColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'FA_inhalation' in table 'Safety Lexicon' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableSafety_Lexicon.FA_inhalationColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property Note_to_HCP() As String
            Get
                Try 
                    Return CType(Me(Me.tableSafety_Lexicon.Note_to_HCPColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Note_to_HCP' in table 'Safety Lexicon' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableSafety_Lexicon.Note_to_HCPColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property Suitable_extinguishing_media() As String
            Get
                Try 
                    Return CType(Me(Me.tableSafety_Lexicon.Suitable_extinguishing_mediaColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Suitable_extinguishing_media' in table 'Safety Lexicon' is "& _ 
                            "DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableSafety_Lexicon.Suitable_extinguishing_mediaColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property Unsuitable_extinguishing_media() As String
            Get
                Try 
                    Return CType(Me(Me.tableSafety_Lexicon.Unsuitable_extinguishing_mediaColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Unsuitable_extinguishing_media' in table 'Safety Lexicon' i"& _ 
                            "s DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableSafety_Lexicon.Unsuitable_extinguishing_mediaColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property Precautions_for_firefighters() As String
            Get
                Try 
                    Return CType(Me(Me.tableSafety_Lexicon.Precautions_for_firefightersColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Precautions_for_firefighters' in table 'Safety Lexicon' is "& _ 
                            "DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableSafety_Lexicon.Precautions_for_firefightersColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property Specific_hazards() As String
            Get
                Try 
                    Return CType(Me(Me.tableSafety_Lexicon.Specific_hazardsColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Specific_hazards' in table 'Safety Lexicon' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableSafety_Lexicon.Specific_hazardsColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property Hazardous_combustion_products() As String
            Get
                Try 
                    Return CType(Me(Me.tableSafety_Lexicon.Hazardous_combustion_productsColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Hazardous_combustion_products' in table 'Safety Lexicon' is"& _ 
                            " DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableSafety_Lexicon.Hazardous_combustion_productsColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property Personal_precautions() As String
            Get
                Try 
                    Return CType(Me(Me.tableSafety_Lexicon.Personal_precautionsColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Personal_precautions' in table 'Safety Lexicon' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableSafety_Lexicon.Personal_precautionsColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property Small_spills() As String
            Get
                Try 
                    Return CType(Me(Me.tableSafety_Lexicon.Small_spillsColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Small_spills' in table 'Safety Lexicon' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableSafety_Lexicon.Small_spillsColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property Large_spills() As String
            Get
                Try 
                    Return CType(Me(Me.tableSafety_Lexicon.Large_spillsColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Large_spills' in table 'Safety Lexicon' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableSafety_Lexicon.Large_spillsColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property Advice_on_safe_handling() As String
            Get
                Try 
                    Return CType(Me(Me.tableSafety_Lexicon.Advice_on_safe_handlingColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Advice_on_safe_handling' in table 'Safety Lexicon' is DBNul"& _ 
                            "l.", e)
                End Try
            End Get
            Set
                Me(Me.tableSafety_Lexicon.Advice_on_safe_handlingColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property Storage_conditions() As String
            Get
                Try 
                    Return CType(Me(Me.tableSafety_Lexicon.Storage_conditionsColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Storage_conditions' in table 'Safety Lexicon' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableSafety_Lexicon.Storage_conditionsColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property Suitable_materials_of_construction() As String
            Get
                Try 
                    Return CType(Me(Me.tableSafety_Lexicon.Suitable_materials_of_constructionColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Suitable_materials_of_construction' in table 'Safety Lexico"& _ 
                            "n' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableSafety_Lexicon.Suitable_materials_of_constructionColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property Unsuitable_materials_of_construction() As String
            Get
                Try 
                    Return CType(Me(Me.tableSafety_Lexicon.Unsuitable_materials_of_constructionColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Unsuitable_materials_of_construction' in table 'Safety Lexi"& _ 
                            "con' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableSafety_Lexicon.Unsuitable_materials_of_constructionColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property Eye_face_protection() As String
            Get
                Try 
                    Return CType(Me(Me.tableSafety_Lexicon.Eye_face_protectionColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Eye_face_protection' in table 'Safety Lexicon' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableSafety_Lexicon.Eye_face_protectionColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property Skin_protection() As String
            Get
                Try 
                    Return CType(Me(Me.tableSafety_Lexicon.Skin_protectionColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Skin_protection' in table 'Safety Lexicon' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableSafety_Lexicon.Skin_protectionColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property Respiratory_protection() As String
            Get
                Try 
                    Return CType(Me(Me.tableSafety_Lexicon.Respiratory_protectionColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Respiratory_protection' in table 'Safety Lexicon' is DBNull"& _ 
                            ".", e)
                End Try
            End Get
            Set
                Me(Me.tableSafety_Lexicon.Respiratory_protectionColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property Engineering_controls() As String
            Get
                Try 
                    Return CType(Me(Me.tableSafety_Lexicon.Engineering_controlsColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Engineering_controls' in table 'Safety Lexicon' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableSafety_Lexicon.Engineering_controlsColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property General_hygiene_considerations() As String
            Get
                Try 
                    Return CType(Me(Me.tableSafety_Lexicon.General_hygiene_considerationsColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'General_hygiene_considerations' in table 'Safety Lexicon' i"& _ 
                            "s DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableSafety_Lexicon.General_hygiene_considerationsColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property Chemical_stability() As String
            Get
                Try 
                    Return CType(Me(Me.tableSafety_Lexicon.Chemical_stabilityColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Chemical_stability' in table 'Safety Lexicon' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableSafety_Lexicon.Chemical_stabilityColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property Hazardous_polymerization() As String
            Get
                Try 
                    Return CType(Me(Me.tableSafety_Lexicon.Hazardous_polymerizationColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Hazardous_polymerization' in table 'Safety Lexicon' is DBNu"& _ 
                            "ll.", e)
                End Try
            End Get
            Set
                Me(Me.tableSafety_Lexicon.Hazardous_polymerizationColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property Conditions_to_avoid() As String
            Get
                Try 
                    Return CType(Me(Me.tableSafety_Lexicon.Conditions_to_avoidColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Conditions_to_avoid' in table 'Safety Lexicon' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableSafety_Lexicon.Conditions_to_avoidColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property Incompatibilities() As String
            Get
                Try 
                    Return CType(Me(Me.tableSafety_Lexicon.IncompatibilitiesColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Incompatibilities' in table 'Safety Lexicon' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableSafety_Lexicon.IncompatibilitiesColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property Hazardous_decomposition_products() As String
            Get
                Try 
                    Return CType(Me(Me.tableSafety_Lexicon.Hazardous_decomposition_productsColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Hazardous_decomposition_products' in table 'Safety Lexicon'"& _ 
                            " is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableSafety_Lexicon.Hazardous_decomposition_productsColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property Likely_routes_of_exposure() As String
            Get
                Try 
                    Return CType(Me(Me.tableSafety_Lexicon.Likely_routes_of_exposureColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Likely_routes_of_exposure' in table 'Safety Lexicon' is DBN"& _ 
                            "ull.", e)
                End Try
            End Get
            Set
                Me(Me.tableSafety_Lexicon.Likely_routes_of_exposureColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property Eye_contact() As String
            Get
                Try 
                    Return CType(Me(Me.tableSafety_Lexicon.Eye_contactColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Eye_contact' in table 'Safety Lexicon' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableSafety_Lexicon.Eye_contactColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property Skin_contact() As String
            Get
                Try 
                    Return CType(Me(Me.tableSafety_Lexicon.Skin_contactColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Skin_contact' in table 'Safety Lexicon' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableSafety_Lexicon.Skin_contactColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property Ingestion() As String
            Get
                Try 
                    Return CType(Me(Me.tableSafety_Lexicon.IngestionColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Ingestion' in table 'Safety Lexicon' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableSafety_Lexicon.IngestionColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property Inhalation() As String
            Get
                Try 
                    Return CType(Me(Me.tableSafety_Lexicon.InhalationColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Inhalation' in table 'Safety Lexicon' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableSafety_Lexicon.InhalationColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property Reproductive_effects() As String
            Get
                Try 
                    Return CType(Me(Me.tableSafety_Lexicon.Reproductive_effectsColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Reproductive_effects' in table 'Safety Lexicon' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableSafety_Lexicon.Reproductive_effectsColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property Teratogenicity() As String
            Get
                Try 
                    Return CType(Me(Me.tableSafety_Lexicon.TeratogenicityColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Teratogenicity' in table 'Safety Lexicon' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableSafety_Lexicon.TeratogenicityColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property Mutagenicity() As String
            Get
                Try 
                    Return CType(Me(Me.tableSafety_Lexicon.MutagenicityColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Mutagenicity' in table 'Safety Lexicon' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableSafety_Lexicon.MutagenicityColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property Embryotoxicity() As String
            Get
                Try 
                    Return CType(Me(Me.tableSafety_Lexicon.EmbryotoxicityColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Embryotoxicity' in table 'Safety Lexicon' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableSafety_Lexicon.EmbryotoxicityColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property Sensitization_to_product() As String
            Get
                Try 
                    Return CType(Me(Me.tableSafety_Lexicon.Sensitization_to_productColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Sensitization_to_product' in table 'Safety Lexicon' is DBNu"& _ 
                            "ll.", e)
                End Try
            End Get
            Set
                Me(Me.tableSafety_Lexicon.Sensitization_to_productColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property Synergistic_products() As String
            Get
                Try 
                    Return CType(Me(Me.tableSafety_Lexicon.Synergistic_productsColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Synergistic_products' in table 'Safety Lexicon' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableSafety_Lexicon.Synergistic_productsColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property Carcinogenicity() As String
            Get
                Try 
                    Return CType(Me(Me.tableSafety_Lexicon.CarcinogenicityColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Carcinogenicity' in table 'Safety Lexicon' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableSafety_Lexicon.CarcinogenicityColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property Chronic() As String
            Get
                Try 
                    Return CType(Me(Me.tableSafety_Lexicon.ChronicColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Chronic' in table 'Safety Lexicon' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableSafety_Lexicon.ChronicColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property Persistence() As String
            Get
                Try 
                    Return CType(Me(Me.tableSafety_Lexicon.PersistenceColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Persistence' in table 'Safety Lexicon' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableSafety_Lexicon.PersistenceColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property Bioaccumulative_potential() As String
            Get
                Try 
                    Return CType(Me(Me.tableSafety_Lexicon.Bioaccumulative_potentialColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Bioaccumulative_potential' in table 'Safety Lexicon' is DBN"& _ 
                            "ull.", e)
                End Try
            End Get
            Set
                Me(Me.tableSafety_Lexicon.Bioaccumulative_potentialColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property Mobility() As String
            Get
                Try 
                    Return CType(Me(Me.tableSafety_Lexicon.MobilityColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Mobility' in table 'Safety Lexicon' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableSafety_Lexicon.MobilityColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property Disposal() As String
            Get
                Try 
                    Return CType(Me(Me.tableSafety_Lexicon.DisposalColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Disposal' in table 'Safety Lexicon' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableSafety_Lexicon.DisposalColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property RCRA_status() As String
            Get
                Try 
                    Return CType(Me(Me.tableSafety_Lexicon.RCRA_statusColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'RCRA_status' in table 'Safety Lexicon' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableSafety_Lexicon.RCRA_statusColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property TSCA() As String
            Get
                Try 
                    Return CType(Me(Me.tableSafety_Lexicon.TSCAColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'TSCA' in table 'Safety Lexicon' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableSafety_Lexicon.TSCAColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsSAFLEXIDNull() As Boolean
            Return Me.IsNull(Me.tableSafety_Lexicon.SAFLEXIDColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetSAFLEXIDNull()
            Me(Me.tableSafety_Lexicon.SAFLEXIDColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsFA_eye_contactNull() As Boolean
            Return Me.IsNull(Me.tableSafety_Lexicon.FA_eye_contactColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetFA_eye_contactNull()
            Me(Me.tableSafety_Lexicon.FA_eye_contactColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsFA_skin_contactNull() As Boolean
            Return Me.IsNull(Me.tableSafety_Lexicon.FA_skin_contactColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetFA_skin_contactNull()
            Me(Me.tableSafety_Lexicon.FA_skin_contactColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsFA_ingestionNull() As Boolean
            Return Me.IsNull(Me.tableSafety_Lexicon.FA_ingestionColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetFA_ingestionNull()
            Me(Me.tableSafety_Lexicon.FA_ingestionColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsFA_inhalationNull() As Boolean
            Return Me.IsNull(Me.tableSafety_Lexicon.FA_inhalationColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetFA_inhalationNull()
            Me(Me.tableSafety_Lexicon.FA_inhalationColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsNote_to_HCPNull() As Boolean
            Return Me.IsNull(Me.tableSafety_Lexicon.Note_to_HCPColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetNote_to_HCPNull()
            Me(Me.tableSafety_Lexicon.Note_to_HCPColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsSuitable_extinguishing_mediaNull() As Boolean
            Return Me.IsNull(Me.tableSafety_Lexicon.Suitable_extinguishing_mediaColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetSuitable_extinguishing_mediaNull()
            Me(Me.tableSafety_Lexicon.Suitable_extinguishing_mediaColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsUnsuitable_extinguishing_mediaNull() As Boolean
            Return Me.IsNull(Me.tableSafety_Lexicon.Unsuitable_extinguishing_mediaColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetUnsuitable_extinguishing_mediaNull()
            Me(Me.tableSafety_Lexicon.Unsuitable_extinguishing_mediaColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsPrecautions_for_firefightersNull() As Boolean
            Return Me.IsNull(Me.tableSafety_Lexicon.Precautions_for_firefightersColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetPrecautions_for_firefightersNull()
            Me(Me.tableSafety_Lexicon.Precautions_for_firefightersColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsSpecific_hazardsNull() As Boolean
            Return Me.IsNull(Me.tableSafety_Lexicon.Specific_hazardsColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetSpecific_hazardsNull()
            Me(Me.tableSafety_Lexicon.Specific_hazardsColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsHazardous_combustion_productsNull() As Boolean
            Return Me.IsNull(Me.tableSafety_Lexicon.Hazardous_combustion_productsColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetHazardous_combustion_productsNull()
            Me(Me.tableSafety_Lexicon.Hazardous_combustion_productsColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsPersonal_precautionsNull() As Boolean
            Return Me.IsNull(Me.tableSafety_Lexicon.Personal_precautionsColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetPersonal_precautionsNull()
            Me(Me.tableSafety_Lexicon.Personal_precautionsColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsSmall_spillsNull() As Boolean
            Return Me.IsNull(Me.tableSafety_Lexicon.Small_spillsColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetSmall_spillsNull()
            Me(Me.tableSafety_Lexicon.Small_spillsColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsLarge_spillsNull() As Boolean
            Return Me.IsNull(Me.tableSafety_Lexicon.Large_spillsColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetLarge_spillsNull()
            Me(Me.tableSafety_Lexicon.Large_spillsColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsAdvice_on_safe_handlingNull() As Boolean
            Return Me.IsNull(Me.tableSafety_Lexicon.Advice_on_safe_handlingColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetAdvice_on_safe_handlingNull()
            Me(Me.tableSafety_Lexicon.Advice_on_safe_handlingColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsStorage_conditionsNull() As Boolean
            Return Me.IsNull(Me.tableSafety_Lexicon.Storage_conditionsColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetStorage_conditionsNull()
            Me(Me.tableSafety_Lexicon.Storage_conditionsColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsSuitable_materials_of_constructionNull() As Boolean
            Return Me.IsNull(Me.tableSafety_Lexicon.Suitable_materials_of_constructionColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetSuitable_materials_of_constructionNull()
            Me(Me.tableSafety_Lexicon.Suitable_materials_of_constructionColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsUnsuitable_materials_of_constructionNull() As Boolean
            Return Me.IsNull(Me.tableSafety_Lexicon.Unsuitable_materials_of_constructionColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetUnsuitable_materials_of_constructionNull()
            Me(Me.tableSafety_Lexicon.Unsuitable_materials_of_constructionColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsEye_face_protectionNull() As Boolean
            Return Me.IsNull(Me.tableSafety_Lexicon.Eye_face_protectionColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetEye_face_protectionNull()
            Me(Me.tableSafety_Lexicon.Eye_face_protectionColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsSkin_protectionNull() As Boolean
            Return Me.IsNull(Me.tableSafety_Lexicon.Skin_protectionColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetSkin_protectionNull()
            Me(Me.tableSafety_Lexicon.Skin_protectionColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsRespiratory_protectionNull() As Boolean
            Return Me.IsNull(Me.tableSafety_Lexicon.Respiratory_protectionColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetRespiratory_protectionNull()
            Me(Me.tableSafety_Lexicon.Respiratory_protectionColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsEngineering_controlsNull() As Boolean
            Return Me.IsNull(Me.tableSafety_Lexicon.Engineering_controlsColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetEngineering_controlsNull()
            Me(Me.tableSafety_Lexicon.Engineering_controlsColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsGeneral_hygiene_considerationsNull() As Boolean
            Return Me.IsNull(Me.tableSafety_Lexicon.General_hygiene_considerationsColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetGeneral_hygiene_considerationsNull()
            Me(Me.tableSafety_Lexicon.General_hygiene_considerationsColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsChemical_stabilityNull() As Boolean
            Return Me.IsNull(Me.tableSafety_Lexicon.Chemical_stabilityColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetChemical_stabilityNull()
            Me(Me.tableSafety_Lexicon.Chemical_stabilityColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsHazardous_polymerizationNull() As Boolean
            Return Me.IsNull(Me.tableSafety_Lexicon.Hazardous_polymerizationColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetHazardous_polymerizationNull()
            Me(Me.tableSafety_Lexicon.Hazardous_polymerizationColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsConditions_to_avoidNull() As Boolean
            Return Me.IsNull(Me.tableSafety_Lexicon.Conditions_to_avoidColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetConditions_to_avoidNull()
            Me(Me.tableSafety_Lexicon.Conditions_to_avoidColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsIncompatibilitiesNull() As Boolean
            Return Me.IsNull(Me.tableSafety_Lexicon.IncompatibilitiesColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetIncompatibilitiesNull()
            Me(Me.tableSafety_Lexicon.IncompatibilitiesColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsHazardous_decomposition_productsNull() As Boolean
            Return Me.IsNull(Me.tableSafety_Lexicon.Hazardous_decomposition_productsColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetHazardous_decomposition_productsNull()
            Me(Me.tableSafety_Lexicon.Hazardous_decomposition_productsColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsLikely_routes_of_exposureNull() As Boolean
            Return Me.IsNull(Me.tableSafety_Lexicon.Likely_routes_of_exposureColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetLikely_routes_of_exposureNull()
            Me(Me.tableSafety_Lexicon.Likely_routes_of_exposureColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsEye_contactNull() As Boolean
            Return Me.IsNull(Me.tableSafety_Lexicon.Eye_contactColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetEye_contactNull()
            Me(Me.tableSafety_Lexicon.Eye_contactColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsSkin_contactNull() As Boolean
            Return Me.IsNull(Me.tableSafety_Lexicon.Skin_contactColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetSkin_contactNull()
            Me(Me.tableSafety_Lexicon.Skin_contactColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsIngestionNull() As Boolean
            Return Me.IsNull(Me.tableSafety_Lexicon.IngestionColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetIngestionNull()
            Me(Me.tableSafety_Lexicon.IngestionColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsInhalationNull() As Boolean
            Return Me.IsNull(Me.tableSafety_Lexicon.InhalationColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetInhalationNull()
            Me(Me.tableSafety_Lexicon.InhalationColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsReproductive_effectsNull() As Boolean
            Return Me.IsNull(Me.tableSafety_Lexicon.Reproductive_effectsColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetReproductive_effectsNull()
            Me(Me.tableSafety_Lexicon.Reproductive_effectsColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsTeratogenicityNull() As Boolean
            Return Me.IsNull(Me.tableSafety_Lexicon.TeratogenicityColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetTeratogenicityNull()
            Me(Me.tableSafety_Lexicon.TeratogenicityColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsMutagenicityNull() As Boolean
            Return Me.IsNull(Me.tableSafety_Lexicon.MutagenicityColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetMutagenicityNull()
            Me(Me.tableSafety_Lexicon.MutagenicityColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsEmbryotoxicityNull() As Boolean
            Return Me.IsNull(Me.tableSafety_Lexicon.EmbryotoxicityColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetEmbryotoxicityNull()
            Me(Me.tableSafety_Lexicon.EmbryotoxicityColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsSensitization_to_productNull() As Boolean
            Return Me.IsNull(Me.tableSafety_Lexicon.Sensitization_to_productColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetSensitization_to_productNull()
            Me(Me.tableSafety_Lexicon.Sensitization_to_productColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsSynergistic_productsNull() As Boolean
            Return Me.IsNull(Me.tableSafety_Lexicon.Synergistic_productsColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetSynergistic_productsNull()
            Me(Me.tableSafety_Lexicon.Synergistic_productsColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsCarcinogenicityNull() As Boolean
            Return Me.IsNull(Me.tableSafety_Lexicon.CarcinogenicityColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetCarcinogenicityNull()
            Me(Me.tableSafety_Lexicon.CarcinogenicityColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsChronicNull() As Boolean
            Return Me.IsNull(Me.tableSafety_Lexicon.ChronicColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetChronicNull()
            Me(Me.tableSafety_Lexicon.ChronicColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsPersistenceNull() As Boolean
            Return Me.IsNull(Me.tableSafety_Lexicon.PersistenceColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetPersistenceNull()
            Me(Me.tableSafety_Lexicon.PersistenceColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsBioaccumulative_potentialNull() As Boolean
            Return Me.IsNull(Me.tableSafety_Lexicon.Bioaccumulative_potentialColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetBioaccumulative_potentialNull()
            Me(Me.tableSafety_Lexicon.Bioaccumulative_potentialColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsMobilityNull() As Boolean
            Return Me.IsNull(Me.tableSafety_Lexicon.MobilityColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetMobilityNull()
            Me(Me.tableSafety_Lexicon.MobilityColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsDisposalNull() As Boolean
            Return Me.IsNull(Me.tableSafety_Lexicon.DisposalColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetDisposalNull()
            Me(Me.tableSafety_Lexicon.DisposalColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsRCRA_statusNull() As Boolean
            Return Me.IsNull(Me.tableSafety_Lexicon.RCRA_statusColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetRCRA_statusNull()
            Me(Me.tableSafety_Lexicon.RCRA_statusColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsTSCANull() As Boolean
            Return Me.IsNull(Me.tableSafety_Lexicon.TSCAColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetTSCANull()
            Me(Me.tableSafety_Lexicon.TSCAColumn) = Global.System.Convert.DBNull
        End Sub
    End Class
    
    '''<summary>
    '''Row event argument class
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Public Class Acute_ToxicityRowChangeEvent
        Inherits Global.System.EventArgs
        
        Private eventRow As Acute_ToxicityRow
        
        Private eventAction As Global.System.Data.DataRowAction
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub New(ByVal row As Acute_ToxicityRow, ByVal action As Global.System.Data.DataRowAction)
            MyBase.New
            Me.eventRow = row
            Me.eventAction = action
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property Row() As Acute_ToxicityRow
            Get
                Return Me.eventRow
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property Action() As Global.System.Data.DataRowAction
            Get
                Return Me.eventAction
            End Get
        End Property
    End Class
    
    '''<summary>
    '''Row event argument class
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Public Class Aquatic_ToxicityRowChangeEvent
        Inherits Global.System.EventArgs
        
        Private eventRow As Aquatic_ToxicityRow
        
        Private eventAction As Global.System.Data.DataRowAction
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub New(ByVal row As Aquatic_ToxicityRow, ByVal action As Global.System.Data.DataRowAction)
            MyBase.New
            Me.eventRow = row
            Me.eventAction = action
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property Row() As Aquatic_ToxicityRow
            Get
                Return Me.eventRow
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property Action() As Global.System.Data.DataRowAction
            Get
                Return Me.eventAction
            End Get
        End Property
    End Class
    
    '''<summary>
    '''Row event argument class
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Public Class BrandingRowChangeEvent
        Inherits Global.System.EventArgs
        
        Private eventRow As BrandingRow
        
        Private eventAction As Global.System.Data.DataRowAction
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub New(ByVal row As BrandingRow, ByVal action As Global.System.Data.DataRowAction)
            MyBase.New
            Me.eventRow = row
            Me.eventAction = action
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property Row() As BrandingRow
            Get
                Return Me.eventRow
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property Action() As Global.System.Data.DataRowAction
            Get
                Return Me.eventAction
            End Get
        End Property
    End Class
    
    '''<summary>
    '''Row event argument class
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Public Class ClassificationsRowChangeEvent
        Inherits Global.System.EventArgs
        
        Private eventRow As ClassificationsRow
        
        Private eventAction As Global.System.Data.DataRowAction
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub New(ByVal row As ClassificationsRow, ByVal action As Global.System.Data.DataRowAction)
            MyBase.New
            Me.eventRow = row
            Me.eventAction = action
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property Row() As ClassificationsRow
            Get
                Return Me.eventRow
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property Action() As Global.System.Data.DataRowAction
            Get
                Return Me.eventAction
            End Get
        End Property
    End Class
    
    '''<summary>
    '''Row event argument class
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Public Class ComponentsRowChangeEvent
        Inherits Global.System.EventArgs
        
        Private eventRow As ComponentsRow
        
        Private eventAction As Global.System.Data.DataRowAction
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub New(ByVal row As ComponentsRow, ByVal action As Global.System.Data.DataRowAction)
            MyBase.New
            Me.eventRow = row
            Me.eventAction = action
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property Row() As ComponentsRow
            Get
                Return Me.eventRow
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property Action() As Global.System.Data.DataRowAction
            Get
                Return Me.eventAction
            End Get
        End Property
    End Class
    
    '''<summary>
    '''Row event argument class
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Public Class DefaultsRowChangeEvent
        Inherits Global.System.EventArgs
        
        Private eventRow As DefaultsRow
        
        Private eventAction As Global.System.Data.DataRowAction
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub New(ByVal row As DefaultsRow, ByVal action As Global.System.Data.DataRowAction)
            MyBase.New
            Me.eventRow = row
            Me.eventAction = action
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property Row() As DefaultsRow
            Get
                Return Me.eventRow
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property Action() As Global.System.Data.DataRowAction
            Get
                Return Me.eventAction
            End Get
        End Property
    End Class
    
    '''<summary>
    '''Row event argument class
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Public Class Hazard_LexiconRowChangeEvent
        Inherits Global.System.EventArgs
        
        Private eventRow As Hazard_LexiconRow
        
        Private eventAction As Global.System.Data.DataRowAction
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub New(ByVal row As Hazard_LexiconRow, ByVal action As Global.System.Data.DataRowAction)
            MyBase.New
            Me.eventRow = row
            Me.eventAction = action
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property Row() As Hazard_LexiconRow
            Get
                Return Me.eventRow
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property Action() As Global.System.Data.DataRowAction
            Get
                Return Me.eventAction
            End Get
        End Property
    End Class
    
    '''<summary>
    '''Row event argument class
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Public Class Precautionary_LexiconRowChangeEvent
        Inherits Global.System.EventArgs
        
        Private eventRow As Precautionary_LexiconRow
        
        Private eventAction As Global.System.Data.DataRowAction
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub New(ByVal row As Precautionary_LexiconRow, ByVal action As Global.System.Data.DataRowAction)
            MyBase.New
            Me.eventRow = row
            Me.eventAction = action
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property Row() As Precautionary_LexiconRow
            Get
                Return Me.eventRow
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property Action() As Global.System.Data.DataRowAction
            Get
                Return Me.eventAction
            End Get
        End Property
    End Class
    
    '''<summary>
    '''Row event argument class
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Public Class Product_LogRowChangeEvent
        Inherits Global.System.EventArgs
        
        Private eventRow As Product_LogRow
        
        Private eventAction As Global.System.Data.DataRowAction
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub New(ByVal row As Product_LogRow, ByVal action As Global.System.Data.DataRowAction)
            MyBase.New
            Me.eventRow = row
            Me.eventAction = action
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property Row() As Product_LogRow
            Get
                Return Me.eventRow
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property Action() As Global.System.Data.DataRowAction
            Get
                Return Me.eventAction
            End Get
        End Property
    End Class
    
    '''<summary>
    '''Row event argument class
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Public Class Safety_DanceRowChangeEvent
        Inherits Global.System.EventArgs
        
        Private eventRow As Safety_DanceRow
        
        Private eventAction As Global.System.Data.DataRowAction
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub New(ByVal row As Safety_DanceRow, ByVal action As Global.System.Data.DataRowAction)
            MyBase.New
            Me.eventRow = row
            Me.eventAction = action
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property Row() As Safety_DanceRow
            Get
                Return Me.eventRow
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property Action() As Global.System.Data.DataRowAction
            Get
                Return Me.eventAction
            End Get
        End Property
    End Class
    
    '''<summary>
    '''Row event argument class
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Public Class Safety_LexiconRowChangeEvent
        Inherits Global.System.EventArgs
        
        Private eventRow As Safety_LexiconRow
        
        Private eventAction As Global.System.Data.DataRowAction
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub New(ByVal row As Safety_LexiconRow, ByVal action As Global.System.Data.DataRowAction)
            MyBase.New
            Me.eventRow = row
            Me.eventAction = action
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property Row() As Safety_LexiconRow
            Get
                Return Me.eventRow
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property Action() As Global.System.Data.DataRowAction
            Get
                Return Me.eventAction
            End Get
        End Property
    End Class
End Class

Namespace DossierTableAdapters
    
    '''<summary>
    '''Represents the connection and commands used to retrieve and save data.
    '''</summary>
    <Global.System.ComponentModel.DesignerCategoryAttribute("code"),  _
     Global.System.ComponentModel.ToolboxItem(true),  _
     Global.System.ComponentModel.DataObjectAttribute(true),  _
     Global.System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner"& _ 
        ", Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a"),  _
     Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
    Partial Public Class Acute_ToxicityTableAdapter
        Inherits Global.System.ComponentModel.Component
        
        Private WithEvents _adapter As Global.System.Data.OleDb.OleDbDataAdapter
        
        Private _connection As Global.System.Data.OleDb.OleDbConnection
        
        Private _transaction As Global.System.Data.OleDb.OleDbTransaction
        
        Private _commandCollection() As Global.System.Data.OleDb.OleDbCommand
        
        Private _clearBeforeFill As Boolean
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub New()
            MyBase.New
            Me.ClearBeforeFill = true
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Friend ReadOnly Property Adapter() As Global.System.Data.OleDb.OleDbDataAdapter
            Get
                If (Me._adapter Is Nothing) Then
                    Me.InitAdapter
                End If
                Return Me._adapter
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Property Connection() As Global.System.Data.OleDb.OleDbConnection
            Get
                If (Me._connection Is Nothing) Then
                    Me.InitConnection
                End If
                Return Me._connection
            End Get
            Set
                Me._connection = value
                If (Not (Me.Adapter.InsertCommand) Is Nothing) Then
                    Me.Adapter.InsertCommand.Connection = value
                End If
                If (Not (Me.Adapter.DeleteCommand) Is Nothing) Then
                    Me.Adapter.DeleteCommand.Connection = value
                End If
                If (Not (Me.Adapter.UpdateCommand) Is Nothing) Then
                    Me.Adapter.UpdateCommand.Connection = value
                End If
                Dim i As Integer = 0
                Do While (i < Me.CommandCollection.Length)
                    If (Not (Me.CommandCollection(i)) Is Nothing) Then
                        CType(Me.CommandCollection(i),Global.System.Data.OleDb.OleDbCommand).Connection = value
                    End If
                    i = (i + 1)
                Loop
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Property Transaction() As Global.System.Data.OleDb.OleDbTransaction
            Get
                Return Me._transaction
            End Get
            Set
                Me._transaction = value
                Dim i As Integer = 0
                Do While (i < Me.CommandCollection.Length)
                    Me.CommandCollection(i).Transaction = Me._transaction
                    i = (i + 1)
                Loop
                If ((Not (Me.Adapter) Is Nothing)  _
                            AndAlso (Not (Me.Adapter.DeleteCommand) Is Nothing)) Then
                    Me.Adapter.DeleteCommand.Transaction = Me._transaction
                End If
                If ((Not (Me.Adapter) Is Nothing)  _
                            AndAlso (Not (Me.Adapter.InsertCommand) Is Nothing)) Then
                    Me.Adapter.InsertCommand.Transaction = Me._transaction
                End If
                If ((Not (Me.Adapter) Is Nothing)  _
                            AndAlso (Not (Me.Adapter.UpdateCommand) Is Nothing)) Then
                    Me.Adapter.UpdateCommand.Transaction = Me._transaction
                End If
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected ReadOnly Property CommandCollection() As Global.System.Data.OleDb.OleDbCommand()
            Get
                If (Me._commandCollection Is Nothing) Then
                    Me.InitCommandCollection
                End If
                Return Me._commandCollection
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property ClearBeforeFill() As Boolean
            Get
                Return Me._clearBeforeFill
            End Get
            Set
                Me._clearBeforeFill = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Private Sub InitAdapter()
            Me._adapter = New Global.System.Data.OleDb.OleDbDataAdapter()
            Dim tableMapping As Global.System.Data.Common.DataTableMapping = New Global.System.Data.Common.DataTableMapping()
            tableMapping.SourceTable = "Table"
            tableMapping.DataSetTable = "Acute Toxicity"
            tableMapping.ColumnMappings.Add("ACTID", "ACTID")
            tableMapping.ColumnMappings.Add("Subsort", "Subsort")
            tableMapping.ColumnMappings.Add("Substance", "Substance")
            tableMapping.ColumnMappings.Add("Concentration", "Concentration")
            tableMapping.ColumnMappings.Add("CAS", "CAS")
            tableMapping.ColumnMappings.Add("Test", "Test")
            tableMapping.ColumnMappings.Add("Result", "Result")
            tableMapping.ColumnMappings.Add("Notes", "Notes")
            tableMapping.ColumnMappings.Add("Source", "Source")
            tableMapping.ColumnMappings.Add("Source embed", "Source embed")
            tableMapping.ColumnMappings.Add("Type", "Type")
            Me._adapter.TableMappings.Add(tableMapping)
            Me._adapter.InsertCommand = New Global.System.Data.OleDb.OleDbCommand()
            Me._adapter.InsertCommand.Connection = Me.Connection
            Me._adapter.InsertCommand.CommandText = "INSERT INTO `Acute Toxicity` (`Subsort`, `Substance`, `Concentration`, `CAS`, `Te"& _ 
                "st`, `Result`, `Notes`, `Source`, `Source embed`, `Type`) VALUES (?, ?, ?, ?, ?,"& _ 
                " ?, ?, ?, ?, ?)"
            Me._adapter.InsertCommand.CommandType = Global.System.Data.CommandType.Text
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("Subsort", Global.System.Data.OleDb.OleDbType.[Integer], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "Subsort", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("Substance", Global.System.Data.OleDb.OleDbType.VarWChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "Substance", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("Concentration", Global.System.Data.OleDb.OleDbType.VarWChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "Concentration", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("CAS", Global.System.Data.OleDb.OleDbType.VarWChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "CAS", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("Test", Global.System.Data.OleDb.OleDbType.VarWChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "Test", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("Result", Global.System.Data.OleDb.OleDbType.VarWChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "Result", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("Notes", Global.System.Data.OleDb.OleDbType.LongVarWChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "Notes", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("Source", Global.System.Data.OleDb.OleDbType.VarWChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "Source", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("Source_embed", Global.System.Data.OleDb.OleDbType.LongVarWChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "Source embed", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("Type", Global.System.Data.OleDb.OleDbType.LongVarWChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "Type", Global.System.Data.DataRowVersion.Current, false, Nothing))
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Private Sub InitConnection()
            Me._connection = New Global.System.Data.OleDb.OleDbConnection()
            Me._connection.ConnectionString = Global.Interfacer5.MySettings.Default.Dossier
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Private Sub InitCommandCollection()
            Me._commandCollection = New Global.System.Data.OleDb.OleDbCommand(1) {}
            Me._commandCollection(0) = New Global.System.Data.OleDb.OleDbCommand()
            Me._commandCollection(0).Connection = Me.Connection
            Me._commandCollection(0).CommandText = "SELECT ACTID, Subsort, Substance, Concentration, CAS, Test, Result, Notes, Source"& _ 
                ", [Source embed], Type FROM [Acute Toxicity]"
            Me._commandCollection(0).CommandType = Global.System.Data.CommandType.Text
            Me._commandCollection(1) = New Global.System.Data.OleDb.OleDbCommand()
            Me._commandCollection(1).Connection = Me.Connection
            Me._commandCollection(1).CommandText = "SELECT        ACTID, Subsort, Substance, Concentration, CAS, Test, Result, Notes,"& _ 
                " Source, `Source embed`, Type"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"FROM            `Acute Toxicity`"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"WHERE Substance"& _ 
                " = ?"
            Me._commandCollection(1).CommandType = Global.System.Data.CommandType.Text
            Me._commandCollection(1).Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("Substance", Global.System.Data.OleDb.OleDbType.WChar, 255, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "Substance", Global.System.Data.DataRowVersion.Current, false, Nothing))
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Fill, true)>  _
        Public Overloads Overridable Function Fill(ByVal dataTable As Dossier.Acute_ToxicityDataTable) As Integer
            Me.Adapter.SelectCommand = Me.CommandCollection(0)
            If (Me.ClearBeforeFill = true) Then
                dataTable.Clear
            End If
            Dim returnValue As Integer = Me.Adapter.Fill(dataTable)
            Return returnValue
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.[Select], true)>  _
        Public Overloads Overridable Function GetData() As Dossier.Acute_ToxicityDataTable
            Me.Adapter.SelectCommand = Me.CommandCollection(0)
            Dim dataTable As Dossier.Acute_ToxicityDataTable = New Dossier.Acute_ToxicityDataTable()
            Me.Adapter.Fill(dataTable)
            Return dataTable
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Fill, false)>  _
        Public Overloads Overridable Function FillByFiltSub(ByVal dataTable As Dossier.Acute_ToxicityDataTable, ByVal Substance As String) As Integer
            Me.Adapter.SelectCommand = Me.CommandCollection(1)
            If (Substance Is Nothing) Then
                Me.Adapter.SelectCommand.Parameters(0).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.SelectCommand.Parameters(0).Value = CType(Substance,String)
            End If
            If (Me.ClearBeforeFill = true) Then
                dataTable.Clear
            End If
            Dim returnValue As Integer = Me.Adapter.Fill(dataTable)
            Return returnValue
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.[Select], false)>  _
        Public Overloads Overridable Function GetDataByFiltSub(ByVal Substance As String) As Dossier.Acute_ToxicityDataTable
            Me.Adapter.SelectCommand = Me.CommandCollection(1)
            If (Substance Is Nothing) Then
                Me.Adapter.SelectCommand.Parameters(0).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.SelectCommand.Parameters(0).Value = CType(Substance,String)
            End If
            Dim dataTable As Dossier.Acute_ToxicityDataTable = New Dossier.Acute_ToxicityDataTable()
            Me.Adapter.Fill(dataTable)
            Return dataTable
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function Update(ByVal dataTable As Dossier.Acute_ToxicityDataTable) As Integer
            Return Me.Adapter.Update(dataTable)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function Update(ByVal dataSet As Dossier) As Integer
            Return Me.Adapter.Update(dataSet, "Acute Toxicity")
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function Update(ByVal dataRow As Global.System.Data.DataRow) As Integer
            Return Me.Adapter.Update(New Global.System.Data.DataRow() {dataRow})
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function Update(ByVal dataRows() As Global.System.Data.DataRow) As Integer
            Return Me.Adapter.Update(dataRows)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Insert, true)>  _
        Public Overloads Overridable Function Insert(ByVal Subsort As Global.System.Nullable(Of Integer), ByVal Substance As String, ByVal Concentration As String, ByVal CAS As String, ByVal Test As String, ByVal Result As String, ByVal Notes As String, ByVal Source As String, ByVal Source_embed As String, ByVal Type As String) As Integer
            If (Subsort.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(0).Value = CType(Subsort.Value,Integer)
            Else
                Me.Adapter.InsertCommand.Parameters(0).Value = Global.System.DBNull.Value
            End If
            If (Substance Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(1).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(1).Value = CType(Substance,String)
            End If
            If (Concentration Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(2).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(2).Value = CType(Concentration,String)
            End If
            If (CAS Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(3).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(3).Value = CType(CAS,String)
            End If
            If (Test Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(4).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(4).Value = CType(Test,String)
            End If
            If (Result Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(5).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(5).Value = CType(Result,String)
            End If
            If (Notes Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(6).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(6).Value = CType(Notes,String)
            End If
            If (Source Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(7).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(7).Value = CType(Source,String)
            End If
            If (Source_embed Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(8).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(8).Value = CType(Source_embed,String)
            End If
            If (Type Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(9).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(9).Value = CType(Type,String)
            End If
            Dim previousConnectionState As Global.System.Data.ConnectionState = Me.Adapter.InsertCommand.Connection.State
            If ((Me.Adapter.InsertCommand.Connection.State And Global.System.Data.ConnectionState.Open)  _
                        <> Global.System.Data.ConnectionState.Open) Then
                Me.Adapter.InsertCommand.Connection.Open
            End If
            Try 
                Dim returnValue As Integer = Me.Adapter.InsertCommand.ExecuteNonQuery
                Return returnValue
            Finally
                If (previousConnectionState = Global.System.Data.ConnectionState.Closed) Then
                    Me.Adapter.InsertCommand.Connection.Close
                End If
            End Try
        End Function
    End Class
    
    '''<summary>
    '''Represents the connection and commands used to retrieve and save data.
    '''</summary>
    <Global.System.ComponentModel.DesignerCategoryAttribute("code"),  _
     Global.System.ComponentModel.ToolboxItem(true),  _
     Global.System.ComponentModel.DataObjectAttribute(true),  _
     Global.System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner"& _ 
        ", Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a"),  _
     Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
    Partial Public Class Aquatic_ToxicityTableAdapter
        Inherits Global.System.ComponentModel.Component
        
        Private WithEvents _adapter As Global.System.Data.OleDb.OleDbDataAdapter
        
        Private _connection As Global.System.Data.OleDb.OleDbConnection
        
        Private _transaction As Global.System.Data.OleDb.OleDbTransaction
        
        Private _commandCollection() As Global.System.Data.OleDb.OleDbCommand
        
        Private _clearBeforeFill As Boolean
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub New()
            MyBase.New
            Me.ClearBeforeFill = true
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Friend ReadOnly Property Adapter() As Global.System.Data.OleDb.OleDbDataAdapter
            Get
                If (Me._adapter Is Nothing) Then
                    Me.InitAdapter
                End If
                Return Me._adapter
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Property Connection() As Global.System.Data.OleDb.OleDbConnection
            Get
                If (Me._connection Is Nothing) Then
                    Me.InitConnection
                End If
                Return Me._connection
            End Get
            Set
                Me._connection = value
                If (Not (Me.Adapter.InsertCommand) Is Nothing) Then
                    Me.Adapter.InsertCommand.Connection = value
                End If
                If (Not (Me.Adapter.DeleteCommand) Is Nothing) Then
                    Me.Adapter.DeleteCommand.Connection = value
                End If
                If (Not (Me.Adapter.UpdateCommand) Is Nothing) Then
                    Me.Adapter.UpdateCommand.Connection = value
                End If
                Dim i As Integer = 0
                Do While (i < Me.CommandCollection.Length)
                    If (Not (Me.CommandCollection(i)) Is Nothing) Then
                        CType(Me.CommandCollection(i),Global.System.Data.OleDb.OleDbCommand).Connection = value
                    End If
                    i = (i + 1)
                Loop
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Property Transaction() As Global.System.Data.OleDb.OleDbTransaction
            Get
                Return Me._transaction
            End Get
            Set
                Me._transaction = value
                Dim i As Integer = 0
                Do While (i < Me.CommandCollection.Length)
                    Me.CommandCollection(i).Transaction = Me._transaction
                    i = (i + 1)
                Loop
                If ((Not (Me.Adapter) Is Nothing)  _
                            AndAlso (Not (Me.Adapter.DeleteCommand) Is Nothing)) Then
                    Me.Adapter.DeleteCommand.Transaction = Me._transaction
                End If
                If ((Not (Me.Adapter) Is Nothing)  _
                            AndAlso (Not (Me.Adapter.InsertCommand) Is Nothing)) Then
                    Me.Adapter.InsertCommand.Transaction = Me._transaction
                End If
                If ((Not (Me.Adapter) Is Nothing)  _
                            AndAlso (Not (Me.Adapter.UpdateCommand) Is Nothing)) Then
                    Me.Adapter.UpdateCommand.Transaction = Me._transaction
                End If
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected ReadOnly Property CommandCollection() As Global.System.Data.OleDb.OleDbCommand()
            Get
                If (Me._commandCollection Is Nothing) Then
                    Me.InitCommandCollection
                End If
                Return Me._commandCollection
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property ClearBeforeFill() As Boolean
            Get
                Return Me._clearBeforeFill
            End Get
            Set
                Me._clearBeforeFill = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Private Sub InitAdapter()
            Me._adapter = New Global.System.Data.OleDb.OleDbDataAdapter()
            Dim tableMapping As Global.System.Data.Common.DataTableMapping = New Global.System.Data.Common.DataTableMapping()
            tableMapping.SourceTable = "Table"
            tableMapping.DataSetTable = "Aquatic Toxicity"
            tableMapping.ColumnMappings.Add("AQTIDID", "AQTIDID")
            tableMapping.ColumnMappings.Add("Subsort", "Subsort")
            tableMapping.ColumnMappings.Add("IsProduct", "IsProduct")
            tableMapping.ColumnMappings.Add("Substance", "Substance")
            tableMapping.ColumnMappings.Add("Concentration", "Concentration")
            tableMapping.ColumnMappings.Add("Test", "Test")
            tableMapping.ColumnMappings.Add("Result", "Result")
            tableMapping.ColumnMappings.Add("Notes", "Notes")
            tableMapping.ColumnMappings.Add("Source", "Source")
            tableMapping.ColumnMappings.Add("Source embed", "Source embed")
            tableMapping.ColumnMappings.Add("Type", "Type")
            Me._adapter.TableMappings.Add(tableMapping)
            Me._adapter.InsertCommand = New Global.System.Data.OleDb.OleDbCommand()
            Me._adapter.InsertCommand.Connection = Me.Connection
            Me._adapter.InsertCommand.CommandText = "INSERT INTO `Aquatic Toxicity` (`Subsort`, `IsProduct`, `Substance`, `Concentrati"& _ 
                "on`, `Test`, `Result`, `Notes`, `Source`, `Source embed`, `Type`) VALUES (?, ?, "& _ 
                "?, ?, ?, ?, ?, ?, ?, ?)"
            Me._adapter.InsertCommand.CommandType = Global.System.Data.CommandType.Text
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("Subsort", Global.System.Data.OleDb.OleDbType.[Integer], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "Subsort", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("IsProduct", Global.System.Data.OleDb.OleDbType.[Boolean], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "IsProduct", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("Substance", Global.System.Data.OleDb.OleDbType.VarWChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "Substance", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("Concentration", Global.System.Data.OleDb.OleDbType.VarWChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "Concentration", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("Test", Global.System.Data.OleDb.OleDbType.VarWChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "Test", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("Result", Global.System.Data.OleDb.OleDbType.VarWChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "Result", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("Notes", Global.System.Data.OleDb.OleDbType.LongVarWChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "Notes", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("Source", Global.System.Data.OleDb.OleDbType.LongVarWChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "Source", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("Source_embed", Global.System.Data.OleDb.OleDbType.VarWChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "Source embed", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("Type", Global.System.Data.OleDb.OleDbType.LongVarWChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "Type", Global.System.Data.DataRowVersion.Current, false, Nothing))
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Private Sub InitConnection()
            Me._connection = New Global.System.Data.OleDb.OleDbConnection()
            Me._connection.ConnectionString = Global.Interfacer5.MySettings.Default.Dossier
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Private Sub InitCommandCollection()
            Me._commandCollection = New Global.System.Data.OleDb.OleDbCommand(0) {}
            Me._commandCollection(0) = New Global.System.Data.OleDb.OleDbCommand()
            Me._commandCollection(0).Connection = Me.Connection
            Me._commandCollection(0).CommandText = "SELECT AQTIDID, Subsort, IsProduct, Substance, Concentration, Test, Result, Notes"& _ 
                ", Source, [Source embed], Type FROM [Aquatic Toxicity]"
            Me._commandCollection(0).CommandType = Global.System.Data.CommandType.Text
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Fill, true)>  _
        Public Overloads Overridable Function Fill(ByVal dataTable As Dossier.Aquatic_ToxicityDataTable) As Integer
            Me.Adapter.SelectCommand = Me.CommandCollection(0)
            If (Me.ClearBeforeFill = true) Then
                dataTable.Clear
            End If
            Dim returnValue As Integer = Me.Adapter.Fill(dataTable)
            Return returnValue
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.[Select], true)>  _
        Public Overloads Overridable Function GetData() As Dossier.Aquatic_ToxicityDataTable
            Me.Adapter.SelectCommand = Me.CommandCollection(0)
            Dim dataTable As Dossier.Aquatic_ToxicityDataTable = New Dossier.Aquatic_ToxicityDataTable()
            Me.Adapter.Fill(dataTable)
            Return dataTable
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function Update(ByVal dataTable As Dossier.Aquatic_ToxicityDataTable) As Integer
            Return Me.Adapter.Update(dataTable)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function Update(ByVal dataSet As Dossier) As Integer
            Return Me.Adapter.Update(dataSet, "Aquatic Toxicity")
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function Update(ByVal dataRow As Global.System.Data.DataRow) As Integer
            Return Me.Adapter.Update(New Global.System.Data.DataRow() {dataRow})
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function Update(ByVal dataRows() As Global.System.Data.DataRow) As Integer
            Return Me.Adapter.Update(dataRows)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Insert, true)>  _
        Public Overloads Overridable Function Insert(ByVal Subsort As Global.System.Nullable(Of Integer), ByVal IsProduct As Boolean, ByVal Substance As String, ByVal Concentration As String, ByVal Test As String, ByVal Result As String, ByVal Notes As String, ByVal Source As String, ByVal Source_embed As String, ByVal Type As String) As Integer
            If (Subsort.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(0).Value = CType(Subsort.Value,Integer)
            Else
                Me.Adapter.InsertCommand.Parameters(0).Value = Global.System.DBNull.Value
            End If
            Me.Adapter.InsertCommand.Parameters(1).Value = CType(IsProduct,Boolean)
            If (Substance Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(2).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(2).Value = CType(Substance,String)
            End If
            If (Concentration Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(3).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(3).Value = CType(Concentration,String)
            End If
            If (Test Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(4).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(4).Value = CType(Test,String)
            End If
            If (Result Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(5).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(5).Value = CType(Result,String)
            End If
            If (Notes Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(6).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(6).Value = CType(Notes,String)
            End If
            If (Source Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(7).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(7).Value = CType(Source,String)
            End If
            If (Source_embed Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(8).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(8).Value = CType(Source_embed,String)
            End If
            If (Type Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(9).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(9).Value = CType(Type,String)
            End If
            Dim previousConnectionState As Global.System.Data.ConnectionState = Me.Adapter.InsertCommand.Connection.State
            If ((Me.Adapter.InsertCommand.Connection.State And Global.System.Data.ConnectionState.Open)  _
                        <> Global.System.Data.ConnectionState.Open) Then
                Me.Adapter.InsertCommand.Connection.Open
            End If
            Try 
                Dim returnValue As Integer = Me.Adapter.InsertCommand.ExecuteNonQuery
                Return returnValue
            Finally
                If (previousConnectionState = Global.System.Data.ConnectionState.Closed) Then
                    Me.Adapter.InsertCommand.Connection.Close
                End If
            End Try
        End Function
    End Class
    
    '''<summary>
    '''Represents the connection and commands used to retrieve and save data.
    '''</summary>
    <Global.System.ComponentModel.DesignerCategoryAttribute("code"),  _
     Global.System.ComponentModel.ToolboxItem(true),  _
     Global.System.ComponentModel.DataObjectAttribute(true),  _
     Global.System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner"& _ 
        ", Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a"),  _
     Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
    Partial Public Class BrandingTableAdapter
        Inherits Global.System.ComponentModel.Component
        
        Private WithEvents _adapter As Global.System.Data.OleDb.OleDbDataAdapter
        
        Private _connection As Global.System.Data.OleDb.OleDbConnection
        
        Private _transaction As Global.System.Data.OleDb.OleDbTransaction
        
        Private _commandCollection() As Global.System.Data.OleDb.OleDbCommand
        
        Private _clearBeforeFill As Boolean
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub New()
            MyBase.New
            Me.ClearBeforeFill = true
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Friend ReadOnly Property Adapter() As Global.System.Data.OleDb.OleDbDataAdapter
            Get
                If (Me._adapter Is Nothing) Then
                    Me.InitAdapter
                End If
                Return Me._adapter
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Property Connection() As Global.System.Data.OleDb.OleDbConnection
            Get
                If (Me._connection Is Nothing) Then
                    Me.InitConnection
                End If
                Return Me._connection
            End Get
            Set
                Me._connection = value
                If (Not (Me.Adapter.InsertCommand) Is Nothing) Then
                    Me.Adapter.InsertCommand.Connection = value
                End If
                If (Not (Me.Adapter.DeleteCommand) Is Nothing) Then
                    Me.Adapter.DeleteCommand.Connection = value
                End If
                If (Not (Me.Adapter.UpdateCommand) Is Nothing) Then
                    Me.Adapter.UpdateCommand.Connection = value
                End If
                Dim i As Integer = 0
                Do While (i < Me.CommandCollection.Length)
                    If (Not (Me.CommandCollection(i)) Is Nothing) Then
                        CType(Me.CommandCollection(i),Global.System.Data.OleDb.OleDbCommand).Connection = value
                    End If
                    i = (i + 1)
                Loop
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Property Transaction() As Global.System.Data.OleDb.OleDbTransaction
            Get
                Return Me._transaction
            End Get
            Set
                Me._transaction = value
                Dim i As Integer = 0
                Do While (i < Me.CommandCollection.Length)
                    Me.CommandCollection(i).Transaction = Me._transaction
                    i = (i + 1)
                Loop
                If ((Not (Me.Adapter) Is Nothing)  _
                            AndAlso (Not (Me.Adapter.DeleteCommand) Is Nothing)) Then
                    Me.Adapter.DeleteCommand.Transaction = Me._transaction
                End If
                If ((Not (Me.Adapter) Is Nothing)  _
                            AndAlso (Not (Me.Adapter.InsertCommand) Is Nothing)) Then
                    Me.Adapter.InsertCommand.Transaction = Me._transaction
                End If
                If ((Not (Me.Adapter) Is Nothing)  _
                            AndAlso (Not (Me.Adapter.UpdateCommand) Is Nothing)) Then
                    Me.Adapter.UpdateCommand.Transaction = Me._transaction
                End If
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected ReadOnly Property CommandCollection() As Global.System.Data.OleDb.OleDbCommand()
            Get
                If (Me._commandCollection Is Nothing) Then
                    Me.InitCommandCollection
                End If
                Return Me._commandCollection
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property ClearBeforeFill() As Boolean
            Get
                Return Me._clearBeforeFill
            End Get
            Set
                Me._clearBeforeFill = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Private Sub InitAdapter()
            Me._adapter = New Global.System.Data.OleDb.OleDbDataAdapter()
            Dim tableMapping As Global.System.Data.Common.DataTableMapping = New Global.System.Data.Common.DataTableMapping()
            tableMapping.SourceTable = "Table"
            tableMapping.DataSetTable = "Branding"
            tableMapping.ColumnMappings.Add("CID", "CID")
            tableMapping.ColumnMappings.Add("Supplier_fullname", "Supplier_fullname")
            tableMapping.ColumnMappings.Add("Supplier", "Supplier")
            tableMapping.ColumnMappings.Add("Supplier_address_1", "Supplier_address_1")
            tableMapping.ColumnMappings.Add("Supplier_address_2", "Supplier_address_2")
            tableMapping.ColumnMappings.Add("Supplier_address_3", "Supplier_address_3")
            tableMapping.ColumnMappings.Add("Supplier_city", "Supplier_city")
            tableMapping.ColumnMappings.Add("Supplier_state", "Supplier_state")
            tableMapping.ColumnMappings.Add("Supplier_zip", "Supplier_zip")
            tableMapping.ColumnMappings.Add("Supplier_phone", "Supplier_phone")
            tableMapping.ColumnMappings.Add("Supplier_ec", "Supplier_ec")
            tableMapping.ColumnMappings.Add("Website", "Website")
            tableMapping.ColumnMappings.Add("Supplier_address", "Supplier_address")
            Me._adapter.TableMappings.Add(tableMapping)
            Me._adapter.DeleteCommand = New Global.System.Data.OleDb.OleDbCommand()
            Me._adapter.DeleteCommand.Connection = Me.Connection
            Me._adapter.DeleteCommand.CommandText = "DELETE FROM `Branding` WHERE ((`CID` = ?))"
            Me._adapter.DeleteCommand.CommandType = Global.System.Data.CommandType.Text
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("Original_CID", Global.System.Data.OleDb.OleDbType.[Integer], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "CID", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.InsertCommand = New Global.System.Data.OleDb.OleDbCommand()
            Me._adapter.InsertCommand.Connection = Me.Connection
            Me._adapter.InsertCommand.CommandText = "INSERT INTO `Branding` (`Supplier_fullname`, `Supplier`, `Supplier_address_1`, `S"& _ 
                "upplier_address_2`, `Supplier_address_3`, `Supplier_city`, `Supplier_state`, `Su"& _ 
                "pplier_zip`, `Supplier_phone`, `Supplier_ec`, `Website`, `Supplier_address`) VAL"& _ 
                "UES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)"
            Me._adapter.InsertCommand.CommandType = Global.System.Data.CommandType.Text
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("Supplier_fullname", Global.System.Data.OleDb.OleDbType.VarWChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "Supplier_fullname", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("Supplier", Global.System.Data.OleDb.OleDbType.VarWChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "Supplier", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("Supplier_address_1", Global.System.Data.OleDb.OleDbType.VarWChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "Supplier_address_1", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("Supplier_address_2", Global.System.Data.OleDb.OleDbType.VarWChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "Supplier_address_2", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("Supplier_address_3", Global.System.Data.OleDb.OleDbType.VarWChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "Supplier_address_3", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("Supplier_city", Global.System.Data.OleDb.OleDbType.VarWChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "Supplier_city", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("Supplier_state", Global.System.Data.OleDb.OleDbType.VarWChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "Supplier_state", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("Supplier_zip", Global.System.Data.OleDb.OleDbType.VarWChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "Supplier_zip", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("Supplier_phone", Global.System.Data.OleDb.OleDbType.VarWChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "Supplier_phone", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("Supplier_ec", Global.System.Data.OleDb.OleDbType.VarWChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "Supplier_ec", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("Website", Global.System.Data.OleDb.OleDbType.VarWChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "Website", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("Supplier_address", Global.System.Data.OleDb.OleDbType.LongVarWChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "Supplier_address", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.UpdateCommand = New Global.System.Data.OleDb.OleDbCommand()
            Me._adapter.UpdateCommand.Connection = Me.Connection
            Me._adapter.UpdateCommand.CommandText = "UPDATE `Branding` SET `Supplier_fullname` = ?, `Supplier` = ?, `Supplier_address_"& _ 
                "1` = ?, `Supplier_address_2` = ?, `Supplier_address_3` = ?, `Supplier_city` = ?,"& _ 
                " `Supplier_state` = ?, `Supplier_zip` = ?, `Supplier_phone` = ?, `Supplier_ec` ="& _ 
                " ?, `Website` = ?, `Supplier_address` = ? WHERE ((`CID` = ?))"
            Me._adapter.UpdateCommand.CommandType = Global.System.Data.CommandType.Text
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("Supplier_fullname", Global.System.Data.OleDb.OleDbType.VarWChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "Supplier_fullname", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("Supplier", Global.System.Data.OleDb.OleDbType.VarWChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "Supplier", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("Supplier_address_1", Global.System.Data.OleDb.OleDbType.VarWChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "Supplier_address_1", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("Supplier_address_2", Global.System.Data.OleDb.OleDbType.VarWChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "Supplier_address_2", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("Supplier_address_3", Global.System.Data.OleDb.OleDbType.VarWChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "Supplier_address_3", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("Supplier_city", Global.System.Data.OleDb.OleDbType.VarWChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "Supplier_city", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("Supplier_state", Global.System.Data.OleDb.OleDbType.VarWChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "Supplier_state", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("Supplier_zip", Global.System.Data.OleDb.OleDbType.VarWChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "Supplier_zip", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("Supplier_phone", Global.System.Data.OleDb.OleDbType.VarWChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "Supplier_phone", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("Supplier_ec", Global.System.Data.OleDb.OleDbType.VarWChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "Supplier_ec", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("Website", Global.System.Data.OleDb.OleDbType.VarWChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "Website", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("Supplier_address", Global.System.Data.OleDb.OleDbType.LongVarWChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "Supplier_address", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("Original_CID", Global.System.Data.OleDb.OleDbType.[Integer], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "CID", Global.System.Data.DataRowVersion.Original, false, Nothing))
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Private Sub InitConnection()
            Me._connection = New Global.System.Data.OleDb.OleDbConnection()
            Me._connection.ConnectionString = Global.Interfacer5.MySettings.Default.Dossier
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Private Sub InitCommandCollection()
            Me._commandCollection = New Global.System.Data.OleDb.OleDbCommand(1) {}
            Me._commandCollection(0) = New Global.System.Data.OleDb.OleDbCommand()
            Me._commandCollection(0).Connection = Me.Connection
            Me._commandCollection(0).CommandText = "SELECT CID, Supplier_fullname, Supplier, Supplier_address_1, Supplier_address_2, "& _ 
                "Supplier_address_3, Supplier_city, Supplier_state, Supplier_zip, Supplier_phone,"& _ 
                " Supplier_ec, Website, Supplier_address FROM Branding"
            Me._commandCollection(0).CommandType = Global.System.Data.CommandType.Text
            Me._commandCollection(1) = New Global.System.Data.OleDb.OleDbCommand()
            Me._commandCollection(1).Connection = Me.Connection
            Me._commandCollection(1).CommandText = "SELECT CID, Supplier FROM Branding"
            Me._commandCollection(1).CommandType = Global.System.Data.CommandType.Text
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Fill, true)>  _
        Public Overloads Overridable Function Fill(ByVal dataTable As Dossier.BrandingDataTable) As Integer
            Me.Adapter.SelectCommand = Me.CommandCollection(0)
            If (Me.ClearBeforeFill = true) Then
                dataTable.Clear
            End If
            Dim returnValue As Integer = Me.Adapter.Fill(dataTable)
            Return returnValue
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.[Select], true)>  _
        Public Overloads Overridable Function GetData() As Dossier.BrandingDataTable
            Me.Adapter.SelectCommand = Me.CommandCollection(0)
            Dim dataTable As Dossier.BrandingDataTable = New Dossier.BrandingDataTable()
            Me.Adapter.Fill(dataTable)
            Return dataTable
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Fill, false)>  _
        Public Overloads Overridable Function FillCombo(ByVal dataTable As Dossier.BrandingDataTable) As Integer
            Me.Adapter.SelectCommand = Me.CommandCollection(1)
            If (Me.ClearBeforeFill = true) Then
                dataTable.Clear
            End If
            Dim returnValue As Integer = Me.Adapter.Fill(dataTable)
            Return returnValue
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.[Select], false)>  _
        Public Overloads Overridable Function GetCombo() As Dossier.BrandingDataTable
            Me.Adapter.SelectCommand = Me.CommandCollection(1)
            Dim dataTable As Dossier.BrandingDataTable = New Dossier.BrandingDataTable()
            Me.Adapter.Fill(dataTable)
            Return dataTable
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function Update(ByVal dataTable As Dossier.BrandingDataTable) As Integer
            Return Me.Adapter.Update(dataTable)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function Update(ByVal dataSet As Dossier) As Integer
            Return Me.Adapter.Update(dataSet, "Branding")
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function Update(ByVal dataRow As Global.System.Data.DataRow) As Integer
            Return Me.Adapter.Update(New Global.System.Data.DataRow() {dataRow})
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function Update(ByVal dataRows() As Global.System.Data.DataRow) As Integer
            Return Me.Adapter.Update(dataRows)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Delete, true)>  _
        Public Overloads Overridable Function Delete(ByVal Original_CID As Integer) As Integer
            Me.Adapter.DeleteCommand.Parameters(0).Value = CType(Original_CID,Integer)
            Dim previousConnectionState As Global.System.Data.ConnectionState = Me.Adapter.DeleteCommand.Connection.State
            If ((Me.Adapter.DeleteCommand.Connection.State And Global.System.Data.ConnectionState.Open)  _
                        <> Global.System.Data.ConnectionState.Open) Then
                Me.Adapter.DeleteCommand.Connection.Open
            End If
            Try 
                Dim returnValue As Integer = Me.Adapter.DeleteCommand.ExecuteNonQuery
                Return returnValue
            Finally
                If (previousConnectionState = Global.System.Data.ConnectionState.Closed) Then
                    Me.Adapter.DeleteCommand.Connection.Close
                End If
            End Try
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Insert, true)>  _
        Public Overloads Overridable Function Insert(ByVal Supplier_fullname As String, ByVal Supplier As String, ByVal Supplier_address_1 As String, ByVal Supplier_address_2 As String, ByVal Supplier_address_3 As String, ByVal Supplier_city As String, ByVal Supplier_state As String, ByVal Supplier_zip As String, ByVal Supplier_phone As String, ByVal Supplier_ec As String, ByVal Website As String, ByVal Supplier_address As String) As Integer
            If (Supplier_fullname Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(0).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(0).Value = CType(Supplier_fullname,String)
            End If
            If (Supplier Is Nothing) Then
                Throw New Global.System.ArgumentNullException("Supplier")
            Else
                Me.Adapter.InsertCommand.Parameters(1).Value = CType(Supplier,String)
            End If
            If (Supplier_address_1 Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(2).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(2).Value = CType(Supplier_address_1,String)
            End If
            If (Supplier_address_2 Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(3).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(3).Value = CType(Supplier_address_2,String)
            End If
            If (Supplier_address_3 Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(4).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(4).Value = CType(Supplier_address_3,String)
            End If
            If (Supplier_city Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(5).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(5).Value = CType(Supplier_city,String)
            End If
            If (Supplier_state Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(6).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(6).Value = CType(Supplier_state,String)
            End If
            If (Supplier_zip Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(7).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(7).Value = CType(Supplier_zip,String)
            End If
            If (Supplier_phone Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(8).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(8).Value = CType(Supplier_phone,String)
            End If
            If (Supplier_ec Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(9).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(9).Value = CType(Supplier_ec,String)
            End If
            If (Website Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(10).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(10).Value = CType(Website,String)
            End If
            If (Supplier_address Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(11).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(11).Value = CType(Supplier_address,String)
            End If
            Dim previousConnectionState As Global.System.Data.ConnectionState = Me.Adapter.InsertCommand.Connection.State
            If ((Me.Adapter.InsertCommand.Connection.State And Global.System.Data.ConnectionState.Open)  _
                        <> Global.System.Data.ConnectionState.Open) Then
                Me.Adapter.InsertCommand.Connection.Open
            End If
            Try 
                Dim returnValue As Integer = Me.Adapter.InsertCommand.ExecuteNonQuery
                Return returnValue
            Finally
                If (previousConnectionState = Global.System.Data.ConnectionState.Closed) Then
                    Me.Adapter.InsertCommand.Connection.Close
                End If
            End Try
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Update, true)>  _
        Public Overloads Overridable Function Update(ByVal Supplier_fullname As String, ByVal Supplier As String, ByVal Supplier_address_1 As String, ByVal Supplier_address_2 As String, ByVal Supplier_address_3 As String, ByVal Supplier_city As String, ByVal Supplier_state As String, ByVal Supplier_zip As String, ByVal Supplier_phone As String, ByVal Supplier_ec As String, ByVal Website As String, ByVal Supplier_address As String, ByVal Original_CID As Integer) As Integer
            If (Supplier_fullname Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(0).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(0).Value = CType(Supplier_fullname,String)
            End If
            If (Supplier Is Nothing) Then
                Throw New Global.System.ArgumentNullException("Supplier")
            Else
                Me.Adapter.UpdateCommand.Parameters(1).Value = CType(Supplier,String)
            End If
            If (Supplier_address_1 Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(2).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(2).Value = CType(Supplier_address_1,String)
            End If
            If (Supplier_address_2 Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(3).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(3).Value = CType(Supplier_address_2,String)
            End If
            If (Supplier_address_3 Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(4).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(4).Value = CType(Supplier_address_3,String)
            End If
            If (Supplier_city Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(5).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(5).Value = CType(Supplier_city,String)
            End If
            If (Supplier_state Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(6).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(6).Value = CType(Supplier_state,String)
            End If
            If (Supplier_zip Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(7).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(7).Value = CType(Supplier_zip,String)
            End If
            If (Supplier_phone Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(8).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(8).Value = CType(Supplier_phone,String)
            End If
            If (Supplier_ec Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(9).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(9).Value = CType(Supplier_ec,String)
            End If
            If (Website Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(10).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(10).Value = CType(Website,String)
            End If
            If (Supplier_address Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(11).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(11).Value = CType(Supplier_address,String)
            End If
            Me.Adapter.UpdateCommand.Parameters(12).Value = CType(Original_CID,Integer)
            Dim previousConnectionState As Global.System.Data.ConnectionState = Me.Adapter.UpdateCommand.Connection.State
            If ((Me.Adapter.UpdateCommand.Connection.State And Global.System.Data.ConnectionState.Open)  _
                        <> Global.System.Data.ConnectionState.Open) Then
                Me.Adapter.UpdateCommand.Connection.Open
            End If
            Try 
                Dim returnValue As Integer = Me.Adapter.UpdateCommand.ExecuteNonQuery
                Return returnValue
            Finally
                If (previousConnectionState = Global.System.Data.ConnectionState.Closed) Then
                    Me.Adapter.UpdateCommand.Connection.Close
                End If
            End Try
        End Function
    End Class
    
    '''<summary>
    '''Represents the connection and commands used to retrieve and save data.
    '''</summary>
    <Global.System.ComponentModel.DesignerCategoryAttribute("code"),  _
     Global.System.ComponentModel.ToolboxItem(true),  _
     Global.System.ComponentModel.DataObjectAttribute(true),  _
     Global.System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner"& _ 
        ", Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a"),  _
     Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
    Partial Public Class ClassificationsTableAdapter
        Inherits Global.System.ComponentModel.Component
        
        Private WithEvents _adapter As Global.System.Data.OleDb.OleDbDataAdapter
        
        Private _connection As Global.System.Data.OleDb.OleDbConnection
        
        Private _transaction As Global.System.Data.OleDb.OleDbTransaction
        
        Private _commandCollection() As Global.System.Data.OleDb.OleDbCommand
        
        Private _clearBeforeFill As Boolean
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub New()
            MyBase.New
            Me.ClearBeforeFill = true
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Friend ReadOnly Property Adapter() As Global.System.Data.OleDb.OleDbDataAdapter
            Get
                If (Me._adapter Is Nothing) Then
                    Me.InitAdapter
                End If
                Return Me._adapter
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Property Connection() As Global.System.Data.OleDb.OleDbConnection
            Get
                If (Me._connection Is Nothing) Then
                    Me.InitConnection
                End If
                Return Me._connection
            End Get
            Set
                Me._connection = value
                If (Not (Me.Adapter.InsertCommand) Is Nothing) Then
                    Me.Adapter.InsertCommand.Connection = value
                End If
                If (Not (Me.Adapter.DeleteCommand) Is Nothing) Then
                    Me.Adapter.DeleteCommand.Connection = value
                End If
                If (Not (Me.Adapter.UpdateCommand) Is Nothing) Then
                    Me.Adapter.UpdateCommand.Connection = value
                End If
                Dim i As Integer = 0
                Do While (i < Me.CommandCollection.Length)
                    If (Not (Me.CommandCollection(i)) Is Nothing) Then
                        CType(Me.CommandCollection(i),Global.System.Data.OleDb.OleDbCommand).Connection = value
                    End If
                    i = (i + 1)
                Loop
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Property Transaction() As Global.System.Data.OleDb.OleDbTransaction
            Get
                Return Me._transaction
            End Get
            Set
                Me._transaction = value
                Dim i As Integer = 0
                Do While (i < Me.CommandCollection.Length)
                    Me.CommandCollection(i).Transaction = Me._transaction
                    i = (i + 1)
                Loop
                If ((Not (Me.Adapter) Is Nothing)  _
                            AndAlso (Not (Me.Adapter.DeleteCommand) Is Nothing)) Then
                    Me.Adapter.DeleteCommand.Transaction = Me._transaction
                End If
                If ((Not (Me.Adapter) Is Nothing)  _
                            AndAlso (Not (Me.Adapter.InsertCommand) Is Nothing)) Then
                    Me.Adapter.InsertCommand.Transaction = Me._transaction
                End If
                If ((Not (Me.Adapter) Is Nothing)  _
                            AndAlso (Not (Me.Adapter.UpdateCommand) Is Nothing)) Then
                    Me.Adapter.UpdateCommand.Transaction = Me._transaction
                End If
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected ReadOnly Property CommandCollection() As Global.System.Data.OleDb.OleDbCommand()
            Get
                If (Me._commandCollection Is Nothing) Then
                    Me.InitCommandCollection
                End If
                Return Me._commandCollection
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property ClearBeforeFill() As Boolean
            Get
                Return Me._clearBeforeFill
            End Get
            Set
                Me._clearBeforeFill = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Private Sub InitAdapter()
            Me._adapter = New Global.System.Data.OleDb.OleDbDataAdapter()
            Dim tableMapping As Global.System.Data.Common.DataTableMapping = New Global.System.Data.Common.DataTableMapping()
            tableMapping.SourceTable = "Table"
            tableMapping.DataSetTable = "Classifications"
            tableMapping.ColumnMappings.Add("Keyy", "Keyy")
            Me._adapter.TableMappings.Add(tableMapping)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Private Sub InitConnection()
            Me._connection = New Global.System.Data.OleDb.OleDbConnection()
            Me._connection.ConnectionString = Global.Interfacer5.MySettings.Default.Dossier
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Private Sub InitCommandCollection()
            Me._commandCollection = New Global.System.Data.OleDb.OleDbCommand(3) {}
            Me._commandCollection(0) = New Global.System.Data.OleDb.OleDbCommand()
            Me._commandCollection(0).Connection = Me.Connection
            Me._commandCollection(0).CommandText = "SELECT Keyy FROM Classifications WHERE PID=?"
            Me._commandCollection(0).CommandType = Global.System.Data.CommandType.Text
            Me._commandCollection(0).Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("PID", Global.System.Data.OleDb.OleDbType.[Integer], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "PID", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._commandCollection(1) = New Global.System.Data.OleDb.OleDbCommand()
            Me._commandCollection(1).Connection = Me.Connection
            Me._commandCollection(1).CommandText = "DELETE FROM Classifications"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"WHERE        (PID = ?) AND (Keyy = ?)"
            Me._commandCollection(1).CommandType = Global.System.Data.CommandType.Text
            Me._commandCollection(1).Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("PID", Global.System.Data.OleDb.OleDbType.[Integer], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "PID", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._commandCollection(1).Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("Keyy", Global.System.Data.OleDb.OleDbType.[Integer], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "Keyy", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._commandCollection(2) = New Global.System.Data.OleDb.OleDbCommand()
            Me._commandCollection(2).Connection = Me.Connection
            Me._commandCollection(2).CommandText = "SELECT Keyy FROM Classifications WHERE (PID = ?) AND (Keyy = ?)"
            Me._commandCollection(2).CommandType = Global.System.Data.CommandType.Text
            Me._commandCollection(2).Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("PID", Global.System.Data.OleDb.OleDbType.[Integer], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "PID", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._commandCollection(2).Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("Keyy", Global.System.Data.OleDb.OleDbType.[Integer], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "Keyy", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._commandCollection(3) = New Global.System.Data.OleDb.OleDbCommand()
            Me._commandCollection(3).Connection = Me.Connection
            Me._commandCollection(3).CommandText = "INSERT INTO Classifications"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                         (PID, Keyy)"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"VALUES        "& _ 
                "(?, ?)"
            Me._commandCollection(3).CommandType = Global.System.Data.CommandType.Text
            Me._commandCollection(3).Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("PID", Global.System.Data.OleDb.OleDbType.[Integer], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "PID", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._commandCollection(3).Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("Keyy", Global.System.Data.OleDb.OleDbType.[Integer], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "Keyy", Global.System.Data.DataRowVersion.Current, false, Nothing))
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Fill, true)>  _
        Public Overloads Overridable Function FillByPID(ByVal dataTable As Dossier.ClassificationsDataTable, ByVal PID As Global.System.Nullable(Of Integer)) As Integer
            Me.Adapter.SelectCommand = Me.CommandCollection(0)
            If (PID.HasValue = true) Then
                Me.Adapter.SelectCommand.Parameters(0).Value = CType(PID.Value,Integer)
            Else
                Me.Adapter.SelectCommand.Parameters(0).Value = Global.System.DBNull.Value
            End If
            If (Me.ClearBeforeFill = true) Then
                dataTable.Clear
            End If
            Dim returnValue As Integer = Me.Adapter.Fill(dataTable)
            Return returnValue
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.[Select], true)>  _
        Public Overloads Overridable Function GetByPID(ByVal PID As Global.System.Nullable(Of Integer)) As Dossier.ClassificationsDataTable
            Me.Adapter.SelectCommand = Me.CommandCollection(0)
            If (PID.HasValue = true) Then
                Me.Adapter.SelectCommand.Parameters(0).Value = CType(PID.Value,Integer)
            Else
                Me.Adapter.SelectCommand.Parameters(0).Value = Global.System.DBNull.Value
            End If
            Dim dataTable As Dossier.ClassificationsDataTable = New Dossier.ClassificationsDataTable()
            Me.Adapter.Fill(dataTable)
            Return dataTable
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Fill, false)>  _
        Public Overloads Overridable Function FillByPIDkeyy(ByVal dataTable As Dossier.ClassificationsDataTable, ByVal PID As Global.System.Nullable(Of Integer), ByVal Keyy As Global.System.Nullable(Of Integer)) As Integer
            Me.Adapter.SelectCommand = Me.CommandCollection(2)
            If (PID.HasValue = true) Then
                Me.Adapter.SelectCommand.Parameters(0).Value = CType(PID.Value,Integer)
            Else
                Me.Adapter.SelectCommand.Parameters(0).Value = Global.System.DBNull.Value
            End If
            If (Keyy.HasValue = true) Then
                Me.Adapter.SelectCommand.Parameters(1).Value = CType(Keyy.Value,Integer)
            Else
                Me.Adapter.SelectCommand.Parameters(1).Value = Global.System.DBNull.Value
            End If
            If (Me.ClearBeforeFill = true) Then
                dataTable.Clear
            End If
            Dim returnValue As Integer = Me.Adapter.Fill(dataTable)
            Return returnValue
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.[Select], false)>  _
        Public Overloads Overridable Function GetByPIDkeyy(ByVal PID As Global.System.Nullable(Of Integer), ByVal Keyy As Global.System.Nullable(Of Integer)) As Dossier.ClassificationsDataTable
            Me.Adapter.SelectCommand = Me.CommandCollection(2)
            If (PID.HasValue = true) Then
                Me.Adapter.SelectCommand.Parameters(0).Value = CType(PID.Value,Integer)
            Else
                Me.Adapter.SelectCommand.Parameters(0).Value = Global.System.DBNull.Value
            End If
            If (Keyy.HasValue = true) Then
                Me.Adapter.SelectCommand.Parameters(1).Value = CType(Keyy.Value,Integer)
            Else
                Me.Adapter.SelectCommand.Parameters(1).Value = Global.System.DBNull.Value
            End If
            Dim dataTable As Dossier.ClassificationsDataTable = New Dossier.ClassificationsDataTable()
            Me.Adapter.Fill(dataTable)
            Return dataTable
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Delete, false)>  _
        Public Overloads Overridable Function DeletePIDkeyy(ByVal PID As Global.System.Nullable(Of Integer), ByVal Keyy As Global.System.Nullable(Of Integer)) As Integer
            Dim command As Global.System.Data.OleDb.OleDbCommand = Me.CommandCollection(1)
            If (PID.HasValue = true) Then
                command.Parameters(0).Value = CType(PID.Value,Integer)
            Else
                command.Parameters(0).Value = Global.System.DBNull.Value
            End If
            If (Keyy.HasValue = true) Then
                command.Parameters(1).Value = CType(Keyy.Value,Integer)
            Else
                command.Parameters(1).Value = Global.System.DBNull.Value
            End If
            Dim previousConnectionState As Global.System.Data.ConnectionState = command.Connection.State
            If ((command.Connection.State And Global.System.Data.ConnectionState.Open)  _
                        <> Global.System.Data.ConnectionState.Open) Then
                command.Connection.Open
            End If
            Dim returnValue As Integer
            Try 
                returnValue = command.ExecuteNonQuery
            Finally
                If (previousConnectionState = Global.System.Data.ConnectionState.Closed) Then
                    command.Connection.Close
                End If
            End Try
            Return returnValue
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Insert, false)>  _
        Public Overloads Overridable Function InsertPIDkeyy(ByVal PID As Global.System.Nullable(Of Integer), ByVal Keyy As Global.System.Nullable(Of Integer)) As Integer
            Dim command As Global.System.Data.OleDb.OleDbCommand = Me.CommandCollection(3)
            If (PID.HasValue = true) Then
                command.Parameters(0).Value = CType(PID.Value,Integer)
            Else
                command.Parameters(0).Value = Global.System.DBNull.Value
            End If
            If (Keyy.HasValue = true) Then
                command.Parameters(1).Value = CType(Keyy.Value,Integer)
            Else
                command.Parameters(1).Value = Global.System.DBNull.Value
            End If
            Dim previousConnectionState As Global.System.Data.ConnectionState = command.Connection.State
            If ((command.Connection.State And Global.System.Data.ConnectionState.Open)  _
                        <> Global.System.Data.ConnectionState.Open) Then
                command.Connection.Open
            End If
            Dim returnValue As Integer
            Try 
                returnValue = command.ExecuteNonQuery
            Finally
                If (previousConnectionState = Global.System.Data.ConnectionState.Closed) Then
                    command.Connection.Close
                End If
            End Try
            Return returnValue
        End Function
    End Class
    
    '''<summary>
    '''Represents the connection and commands used to retrieve and save data.
    '''</summary>
    <Global.System.ComponentModel.DesignerCategoryAttribute("code"),  _
     Global.System.ComponentModel.ToolboxItem(true),  _
     Global.System.ComponentModel.DataObjectAttribute(true),  _
     Global.System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner"& _ 
        ", Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a"),  _
     Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
    Partial Public Class ComponentsTableAdapter
        Inherits Global.System.ComponentModel.Component
        
        Private WithEvents _adapter As Global.System.Data.OleDb.OleDbDataAdapter
        
        Private _connection As Global.System.Data.OleDb.OleDbConnection
        
        Private _transaction As Global.System.Data.OleDb.OleDbTransaction
        
        Private _commandCollection() As Global.System.Data.OleDb.OleDbCommand
        
        Private _clearBeforeFill As Boolean
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub New()
            MyBase.New
            Me.ClearBeforeFill = true
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Friend ReadOnly Property Adapter() As Global.System.Data.OleDb.OleDbDataAdapter
            Get
                If (Me._adapter Is Nothing) Then
                    Me.InitAdapter
                End If
                Return Me._adapter
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Property Connection() As Global.System.Data.OleDb.OleDbConnection
            Get
                If (Me._connection Is Nothing) Then
                    Me.InitConnection
                End If
                Return Me._connection
            End Get
            Set
                Me._connection = value
                If (Not (Me.Adapter.InsertCommand) Is Nothing) Then
                    Me.Adapter.InsertCommand.Connection = value
                End If
                If (Not (Me.Adapter.DeleteCommand) Is Nothing) Then
                    Me.Adapter.DeleteCommand.Connection = value
                End If
                If (Not (Me.Adapter.UpdateCommand) Is Nothing) Then
                    Me.Adapter.UpdateCommand.Connection = value
                End If
                Dim i As Integer = 0
                Do While (i < Me.CommandCollection.Length)
                    If (Not (Me.CommandCollection(i)) Is Nothing) Then
                        CType(Me.CommandCollection(i),Global.System.Data.OleDb.OleDbCommand).Connection = value
                    End If
                    i = (i + 1)
                Loop
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Property Transaction() As Global.System.Data.OleDb.OleDbTransaction
            Get
                Return Me._transaction
            End Get
            Set
                Me._transaction = value
                Dim i As Integer = 0
                Do While (i < Me.CommandCollection.Length)
                    Me.CommandCollection(i).Transaction = Me._transaction
                    i = (i + 1)
                Loop
                If ((Not (Me.Adapter) Is Nothing)  _
                            AndAlso (Not (Me.Adapter.DeleteCommand) Is Nothing)) Then
                    Me.Adapter.DeleteCommand.Transaction = Me._transaction
                End If
                If ((Not (Me.Adapter) Is Nothing)  _
                            AndAlso (Not (Me.Adapter.InsertCommand) Is Nothing)) Then
                    Me.Adapter.InsertCommand.Transaction = Me._transaction
                End If
                If ((Not (Me.Adapter) Is Nothing)  _
                            AndAlso (Not (Me.Adapter.UpdateCommand) Is Nothing)) Then
                    Me.Adapter.UpdateCommand.Transaction = Me._transaction
                End If
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected ReadOnly Property CommandCollection() As Global.System.Data.OleDb.OleDbCommand()
            Get
                If (Me._commandCollection Is Nothing) Then
                    Me.InitCommandCollection
                End If
                Return Me._commandCollection
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property ClearBeforeFill() As Boolean
            Get
                Return Me._clearBeforeFill
            End Get
            Set
                Me._clearBeforeFill = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Private Sub InitAdapter()
            Me._adapter = New Global.System.Data.OleDb.OleDbDataAdapter()
            Dim tableMapping As Global.System.Data.Common.DataTableMapping = New Global.System.Data.Common.DataTableMapping()
            tableMapping.SourceTable = "Table"
            tableMapping.DataSetTable = "Components"
            tableMapping.ColumnMappings.Add("CMPID", "CMPID")
            tableMapping.ColumnMappings.Add("Substance", "Substance")
            tableMapping.ColumnMappings.Add("SDS_Name", "SDS_Name")
            tableMapping.ColumnMappings.Add("ListOfListsName", "ListOfListsName")
            tableMapping.ColumnMappings.Add("Aliases", "Aliases")
            tableMapping.ColumnMappings.Add("Proprietary", "Proprietary")
            tableMapping.ColumnMappings.Add("CAS", "CAS")
            tableMapping.ColumnMappings.Add("PEL", "PEL")
            tableMapping.ColumnMappings.Add("ACGIH", "ACGIH")
            tableMapping.ColumnMappings.Add("CERCLA_RQ", "CERCLA_RQ")
            tableMapping.ColumnMappings.Add("SARA313", "SARA313")
            tableMapping.ColumnMappings.Add("SARA302TPQ", "SARA302TPQ")
            tableMapping.ColumnMappings.Add("SARA302RQ", "SARA302RQ")
            tableMapping.ColumnMappings.Add("RCRACODE", "RCRACODE")
            tableMapping.ColumnMappings.Add("IsProduct", "IsProduct")
            tableMapping.ColumnMappings.Add("IARC", "IARC")
            tableMapping.ColumnMappings.Add("NTP", "NTP")
            tableMapping.ColumnMappings.Add("Note", "Note")
            Me._adapter.TableMappings.Add(tableMapping)
            Me._adapter.DeleteCommand = New Global.System.Data.OleDb.OleDbCommand()
            Me._adapter.DeleteCommand.Connection = Me.Connection
            Me._adapter.DeleteCommand.CommandText = "DELETE FROM `Components` WHERE (((? = 1 AND `CMPID` IS NULL) OR (`CMPID` = ?)) AN"& _ 
                "D (`Substance` = ?) AND ((? = 1 AND `SDS_Name` IS NULL) OR (`SDS_Name` = ?)) AND"& _ 
                " ((? = 1 AND `ListOfListsName` IS NULL) OR (`ListOfListsName` = ?)) AND ((? = 1 "& _ 
                "AND `Aliases` IS NULL) OR (`Aliases` = ?)) AND ((? = 1 AND `Proprietary` IS NULL"& _ 
                ") OR (`Proprietary` = ?)) AND ((? = 1 AND `CAS` IS NULL) OR (`CAS` = ?)) AND ((?"& _ 
                " = 1 AND `PEL` IS NULL) OR (`PEL` = ?)) AND ((? = 1 AND `ACGIH` IS NULL) OR (`AC"& _ 
                "GIH` = ?)) AND ((? = 1 AND `CERCLA_RQ` IS NULL) OR (`CERCLA_RQ` = ?)) AND ((? = "& _ 
                "1 AND `SARA313` IS NULL) OR (`SARA313` = ?)) AND ((? = 1 AND `SARA302TPQ` IS NUL"& _ 
                "L) OR (`SARA302TPQ` = ?)) AND ((? = 1 AND `SARA302RQ` IS NULL) OR (`SARA302RQ` ="& _ 
                " ?)) AND ((? = 1 AND `RCRACODE` IS NULL) OR (`RCRACODE` = ?)) AND ((? = 1 AND `I"& _ 
                "sProduct` IS NULL) OR (`IsProduct` = ?)) AND ((? = 1 AND `IARC` IS NULL) OR (`IA"& _ 
                "RC` = ?)) AND ((? = 1 AND `NTP` IS NULL) OR (`NTP` = ?)))"
            Me._adapter.DeleteCommand.CommandType = Global.System.Data.CommandType.Text
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("IsNull_CMPID", Global.System.Data.OleDb.OleDbType.[Integer], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "CMPID", Global.System.Data.DataRowVersion.Original, true, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("Original_CMPID", Global.System.Data.OleDb.OleDbType.[Integer], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "CMPID", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("Original_Substance", Global.System.Data.OleDb.OleDbType.VarWChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "Substance", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("IsNull_SDS_Name", Global.System.Data.OleDb.OleDbType.[Integer], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "SDS_Name", Global.System.Data.DataRowVersion.Original, true, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("Original_SDS_Name", Global.System.Data.OleDb.OleDbType.VarWChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "SDS_Name", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("IsNull_ListOfListsName", Global.System.Data.OleDb.OleDbType.[Integer], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "ListOfListsName", Global.System.Data.DataRowVersion.Original, true, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("Original_ListOfListsName", Global.System.Data.OleDb.OleDbType.VarWChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "ListOfListsName", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("IsNull_Aliases", Global.System.Data.OleDb.OleDbType.[Integer], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "Aliases", Global.System.Data.DataRowVersion.Original, true, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("Original_Aliases", Global.System.Data.OleDb.OleDbType.VarWChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "Aliases", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("IsNull_Proprietary", Global.System.Data.OleDb.OleDbType.[Integer], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "Proprietary", Global.System.Data.DataRowVersion.Original, true, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("Original_Proprietary", Global.System.Data.OleDb.OleDbType.[Boolean], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "Proprietary", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("IsNull_CAS", Global.System.Data.OleDb.OleDbType.[Integer], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "CAS", Global.System.Data.DataRowVersion.Original, true, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("Original_CAS", Global.System.Data.OleDb.OleDbType.VarWChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "CAS", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("IsNull_PEL", Global.System.Data.OleDb.OleDbType.[Integer], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "PEL", Global.System.Data.DataRowVersion.Original, true, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("Original_PEL", Global.System.Data.OleDb.OleDbType.VarWChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "PEL", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("IsNull_ACGIH", Global.System.Data.OleDb.OleDbType.[Integer], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "ACGIH", Global.System.Data.DataRowVersion.Original, true, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("Original_ACGIH", Global.System.Data.OleDb.OleDbType.VarWChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "ACGIH", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("IsNull_CERCLA_RQ", Global.System.Data.OleDb.OleDbType.[Integer], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "CERCLA_RQ", Global.System.Data.DataRowVersion.Original, true, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("Original_CERCLA_RQ", Global.System.Data.OleDb.OleDbType.VarWChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "CERCLA_RQ", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("IsNull_SARA313", Global.System.Data.OleDb.OleDbType.[Integer], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "SARA313", Global.System.Data.DataRowVersion.Original, true, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("Original_SARA313", Global.System.Data.OleDb.OleDbType.VarWChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "SARA313", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("IsNull_SARA302TPQ", Global.System.Data.OleDb.OleDbType.[Integer], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "SARA302TPQ", Global.System.Data.DataRowVersion.Original, true, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("Original_SARA302TPQ", Global.System.Data.OleDb.OleDbType.VarWChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "SARA302TPQ", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("IsNull_SARA302RQ", Global.System.Data.OleDb.OleDbType.[Integer], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "SARA302RQ", Global.System.Data.DataRowVersion.Original, true, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("Original_SARA302RQ", Global.System.Data.OleDb.OleDbType.VarWChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "SARA302RQ", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("IsNull_RCRACODE", Global.System.Data.OleDb.OleDbType.[Integer], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "RCRACODE", Global.System.Data.DataRowVersion.Original, true, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("Original_RCRACODE", Global.System.Data.OleDb.OleDbType.VarWChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "RCRACODE", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("IsNull_IsProduct", Global.System.Data.OleDb.OleDbType.[Integer], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "IsProduct", Global.System.Data.DataRowVersion.Original, true, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("Original_IsProduct", Global.System.Data.OleDb.OleDbType.[Boolean], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "IsProduct", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("IsNull_IARC", Global.System.Data.OleDb.OleDbType.[Integer], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "IARC", Global.System.Data.DataRowVersion.Original, true, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("Original_IARC", Global.System.Data.OleDb.OleDbType.VarWChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "IARC", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("IsNull_NTP", Global.System.Data.OleDb.OleDbType.[Integer], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "NTP", Global.System.Data.DataRowVersion.Original, true, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("Original_NTP", Global.System.Data.OleDb.OleDbType.VarWChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "NTP", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.InsertCommand = New Global.System.Data.OleDb.OleDbCommand()
            Me._adapter.InsertCommand.Connection = Me.Connection
            Me._adapter.InsertCommand.CommandText = "INSERT INTO `Components` (`Substance`, `SDS_Name`, `ListOfListsName`, `Aliases`, "& _ 
                "`Proprietary`, `CAS`, `PEL`, `ACGIH`, `CERCLA_RQ`, `SARA313`, `SARA302TPQ`, `SAR"& _ 
                "A302RQ`, `RCRACODE`, `IsProduct`, `IARC`, `NTP`, `Note`) VALUES (?, ?, ?, ?, ?, "& _ 
                "?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)"
            Me._adapter.InsertCommand.CommandType = Global.System.Data.CommandType.Text
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("Substance", Global.System.Data.OleDb.OleDbType.VarWChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "Substance", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("SDS_Name", Global.System.Data.OleDb.OleDbType.VarWChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "SDS_Name", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("ListOfListsName", Global.System.Data.OleDb.OleDbType.VarWChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "ListOfListsName", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("Aliases", Global.System.Data.OleDb.OleDbType.VarWChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "Aliases", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("Proprietary", Global.System.Data.OleDb.OleDbType.[Boolean], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "Proprietary", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("CAS", Global.System.Data.OleDb.OleDbType.VarWChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "CAS", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("PEL", Global.System.Data.OleDb.OleDbType.VarWChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "PEL", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("ACGIH", Global.System.Data.OleDb.OleDbType.VarWChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "ACGIH", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("CERCLA_RQ", Global.System.Data.OleDb.OleDbType.VarWChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "CERCLA_RQ", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("SARA313", Global.System.Data.OleDb.OleDbType.VarWChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "SARA313", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("SARA302TPQ", Global.System.Data.OleDb.OleDbType.VarWChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "SARA302TPQ", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("SARA302RQ", Global.System.Data.OleDb.OleDbType.VarWChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "SARA302RQ", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("RCRACODE", Global.System.Data.OleDb.OleDbType.VarWChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "RCRACODE", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("IsProduct", Global.System.Data.OleDb.OleDbType.[Boolean], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "IsProduct", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("IARC", Global.System.Data.OleDb.OleDbType.VarWChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "IARC", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("NTP", Global.System.Data.OleDb.OleDbType.VarWChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "NTP", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("Note", Global.System.Data.OleDb.OleDbType.LongVarWChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "Note", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.UpdateCommand = New Global.System.Data.OleDb.OleDbCommand()
            Me._adapter.UpdateCommand.Connection = Me.Connection
            Me._adapter.UpdateCommand.CommandText = "UPDATE `Components` SET `Substance` = ?, `SDS_Name` = ?, `ListOfListsName` = ?, `"& _ 
                "Aliases` = ?, `Proprietary` = ?, `CAS` = ?, `PEL` = ?, `ACGIH` = ?, `CERCLA_RQ` "& _ 
                "= ?, `SARA313` = ?, `SARA302TPQ` = ?, `SARA302RQ` = ?, `RCRACODE` = ?, `IsProduc"& _ 
                "t` = ?, `IARC` = ?, `NTP` = ?, `Note` = ? WHERE (((? = 1 AND `CMPID` IS NULL) OR"& _ 
                " (`CMPID` = ?)) AND (`Substance` = ?) AND ((? = 1 AND `SDS_Name` IS NULL) OR (`S"& _ 
                "DS_Name` = ?)) AND ((? = 1 AND `ListOfListsName` IS NULL) OR (`ListOfListsName` "& _ 
                "= ?)) AND ((? = 1 AND `Aliases` IS NULL) OR (`Aliases` = ?)) AND ((? = 1 AND `Pr"& _ 
                "oprietary` IS NULL) OR (`Proprietary` = ?)) AND ((? = 1 AND `CAS` IS NULL) OR (`"& _ 
                "CAS` = ?)) AND ((? = 1 AND `PEL` IS NULL) OR (`PEL` = ?)) AND ((? = 1 AND `ACGIH"& _ 
                "` IS NULL) OR (`ACGIH` = ?)) AND ((? = 1 AND `CERCLA_RQ` IS NULL) OR (`CERCLA_RQ"& _ 
                "` = ?)) AND ((? = 1 AND `SARA313` IS NULL) OR (`SARA313` = ?)) AND ((? = 1 AND `"& _ 
                "SARA302TPQ` IS NULL) OR (`SARA302TPQ` = ?)) AND ((? = 1 AND `SARA302RQ` IS NULL)"& _ 
                " OR (`SARA302RQ` = ?)) AND ((? = 1 AND `RCRACODE` IS NULL) OR (`RCRACODE` = ?)) "& _ 
                "AND ((? = 1 AND `IsProduct` IS NULL) OR (`IsProduct` = ?)) AND ((? = 1 AND `IARC"& _ 
                "` IS NULL) OR (`IARC` = ?)) AND ((? = 1 AND `NTP` IS NULL) OR (`NTP` = ?)))"
            Me._adapter.UpdateCommand.CommandType = Global.System.Data.CommandType.Text
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("Substance", Global.System.Data.OleDb.OleDbType.VarWChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "Substance", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("SDS_Name", Global.System.Data.OleDb.OleDbType.VarWChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "SDS_Name", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("ListOfListsName", Global.System.Data.OleDb.OleDbType.VarWChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "ListOfListsName", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("Aliases", Global.System.Data.OleDb.OleDbType.VarWChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "Aliases", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("Proprietary", Global.System.Data.OleDb.OleDbType.[Boolean], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "Proprietary", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("CAS", Global.System.Data.OleDb.OleDbType.VarWChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "CAS", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("PEL", Global.System.Data.OleDb.OleDbType.VarWChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "PEL", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("ACGIH", Global.System.Data.OleDb.OleDbType.VarWChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "ACGIH", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("CERCLA_RQ", Global.System.Data.OleDb.OleDbType.VarWChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "CERCLA_RQ", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("SARA313", Global.System.Data.OleDb.OleDbType.VarWChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "SARA313", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("SARA302TPQ", Global.System.Data.OleDb.OleDbType.VarWChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "SARA302TPQ", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("SARA302RQ", Global.System.Data.OleDb.OleDbType.VarWChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "SARA302RQ", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("RCRACODE", Global.System.Data.OleDb.OleDbType.VarWChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "RCRACODE", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("IsProduct", Global.System.Data.OleDb.OleDbType.[Boolean], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "IsProduct", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("IARC", Global.System.Data.OleDb.OleDbType.VarWChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "IARC", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("NTP", Global.System.Data.OleDb.OleDbType.VarWChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "NTP", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("Note", Global.System.Data.OleDb.OleDbType.LongVarWChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "Note", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("IsNull_CMPID", Global.System.Data.OleDb.OleDbType.[Integer], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "CMPID", Global.System.Data.DataRowVersion.Original, true, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("Original_CMPID", Global.System.Data.OleDb.OleDbType.[Integer], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "CMPID", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("Original_Substance", Global.System.Data.OleDb.OleDbType.VarWChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "Substance", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("IsNull_SDS_Name", Global.System.Data.OleDb.OleDbType.[Integer], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "SDS_Name", Global.System.Data.DataRowVersion.Original, true, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("Original_SDS_Name", Global.System.Data.OleDb.OleDbType.VarWChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "SDS_Name", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("IsNull_ListOfListsName", Global.System.Data.OleDb.OleDbType.[Integer], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "ListOfListsName", Global.System.Data.DataRowVersion.Original, true, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("Original_ListOfListsName", Global.System.Data.OleDb.OleDbType.VarWChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "ListOfListsName", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("IsNull_Aliases", Global.System.Data.OleDb.OleDbType.[Integer], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "Aliases", Global.System.Data.DataRowVersion.Original, true, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("Original_Aliases", Global.System.Data.OleDb.OleDbType.VarWChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "Aliases", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("IsNull_Proprietary", Global.System.Data.OleDb.OleDbType.[Integer], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "Proprietary", Global.System.Data.DataRowVersion.Original, true, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("Original_Proprietary", Global.System.Data.OleDb.OleDbType.[Boolean], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "Proprietary", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("IsNull_CAS", Global.System.Data.OleDb.OleDbType.[Integer], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "CAS", Global.System.Data.DataRowVersion.Original, true, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("Original_CAS", Global.System.Data.OleDb.OleDbType.VarWChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "CAS", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("IsNull_PEL", Global.System.Data.OleDb.OleDbType.[Integer], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "PEL", Global.System.Data.DataRowVersion.Original, true, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("Original_PEL", Global.System.Data.OleDb.OleDbType.VarWChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "PEL", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("IsNull_ACGIH", Global.System.Data.OleDb.OleDbType.[Integer], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "ACGIH", Global.System.Data.DataRowVersion.Original, true, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("Original_ACGIH", Global.System.Data.OleDb.OleDbType.VarWChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "ACGIH", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("IsNull_CERCLA_RQ", Global.System.Data.OleDb.OleDbType.[Integer], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "CERCLA_RQ", Global.System.Data.DataRowVersion.Original, true, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("Original_CERCLA_RQ", Global.System.Data.OleDb.OleDbType.VarWChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "CERCLA_RQ", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("IsNull_SARA313", Global.System.Data.OleDb.OleDbType.[Integer], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "SARA313", Global.System.Data.DataRowVersion.Original, true, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("Original_SARA313", Global.System.Data.OleDb.OleDbType.VarWChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "SARA313", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("IsNull_SARA302TPQ", Global.System.Data.OleDb.OleDbType.[Integer], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "SARA302TPQ", Global.System.Data.DataRowVersion.Original, true, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("Original_SARA302TPQ", Global.System.Data.OleDb.OleDbType.VarWChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "SARA302TPQ", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("IsNull_SARA302RQ", Global.System.Data.OleDb.OleDbType.[Integer], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "SARA302RQ", Global.System.Data.DataRowVersion.Original, true, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("Original_SARA302RQ", Global.System.Data.OleDb.OleDbType.VarWChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "SARA302RQ", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("IsNull_RCRACODE", Global.System.Data.OleDb.OleDbType.[Integer], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "RCRACODE", Global.System.Data.DataRowVersion.Original, true, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("Original_RCRACODE", Global.System.Data.OleDb.OleDbType.VarWChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "RCRACODE", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("IsNull_IsProduct", Global.System.Data.OleDb.OleDbType.[Integer], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "IsProduct", Global.System.Data.DataRowVersion.Original, true, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("Original_IsProduct", Global.System.Data.OleDb.OleDbType.[Boolean], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "IsProduct", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("IsNull_IARC", Global.System.Data.OleDb.OleDbType.[Integer], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "IARC", Global.System.Data.DataRowVersion.Original, true, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("Original_IARC", Global.System.Data.OleDb.OleDbType.VarWChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "IARC", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("IsNull_NTP", Global.System.Data.OleDb.OleDbType.[Integer], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "NTP", Global.System.Data.DataRowVersion.Original, true, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("Original_NTP", Global.System.Data.OleDb.OleDbType.VarWChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "NTP", Global.System.Data.DataRowVersion.Original, false, Nothing))
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Private Sub InitConnection()
            Me._connection = New Global.System.Data.OleDb.OleDbConnection()
            Me._connection.ConnectionString = Global.Interfacer5.MySettings.Default.Dossier
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Private Sub InitCommandCollection()
            Me._commandCollection = New Global.System.Data.OleDb.OleDbCommand(0) {}
            Me._commandCollection(0) = New Global.System.Data.OleDb.OleDbCommand()
            Me._commandCollection(0).Connection = Me.Connection
            Me._commandCollection(0).CommandText = "SELECT CMPID, Substance, SDS_Name, ListOfListsName, Aliases, Proprietary, CAS, PE"& _ 
                "L, ACGIH, CERCLA_RQ, SARA313, SARA302TPQ, SARA302RQ, RCRACODE, IsProduct, IARC, "& _ 
                "NTP, [Note] FROM Components"
            Me._commandCollection(0).CommandType = Global.System.Data.CommandType.Text
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Fill, true)>  _
        Public Overloads Overridable Function Fill(ByVal dataTable As Dossier.ComponentsDataTable) As Integer
            Me.Adapter.SelectCommand = Me.CommandCollection(0)
            If (Me.ClearBeforeFill = true) Then
                dataTable.Clear
            End If
            Dim returnValue As Integer = Me.Adapter.Fill(dataTable)
            Return returnValue
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.[Select], true)>  _
        Public Overloads Overridable Function GetData() As Dossier.ComponentsDataTable
            Me.Adapter.SelectCommand = Me.CommandCollection(0)
            Dim dataTable As Dossier.ComponentsDataTable = New Dossier.ComponentsDataTable()
            Me.Adapter.Fill(dataTable)
            Return dataTable
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function Update(ByVal dataTable As Dossier.ComponentsDataTable) As Integer
            Return Me.Adapter.Update(dataTable)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function Update(ByVal dataSet As Dossier) As Integer
            Return Me.Adapter.Update(dataSet, "Components")
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function Update(ByVal dataRow As Global.System.Data.DataRow) As Integer
            Return Me.Adapter.Update(New Global.System.Data.DataRow() {dataRow})
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function Update(ByVal dataRows() As Global.System.Data.DataRow) As Integer
            Return Me.Adapter.Update(dataRows)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Delete, true)>  _
        Public Overloads Overridable Function Delete( _
                    ByVal Original_CMPID As Integer,  _
                    ByVal Original_Substance As String,  _
                    ByVal Original_SDS_Name As String,  _
                    ByVal Original_ListOfListsName As String,  _
                    ByVal Original_Aliases As String,  _
                    ByVal Original_Proprietary As Boolean,  _
                    ByVal Original_CAS As String,  _
                    ByVal Original_PEL As String,  _
                    ByVal Original_ACGIH As String,  _
                    ByVal Original_CERCLA_RQ As String,  _
                    ByVal Original_SARA313 As String,  _
                    ByVal Original_SARA302TPQ As String,  _
                    ByVal Original_SARA302RQ As String,  _
                    ByVal Original_RCRACODE As String,  _
                    ByVal Original_IsProduct As Boolean,  _
                    ByVal Original_IARC As String,  _
                    ByVal Original_NTP As String) As Integer
            Me.Adapter.DeleteCommand.Parameters(0).Value = CType(0,Object)
            Me.Adapter.DeleteCommand.Parameters(1).Value = CType(Original_CMPID,Integer)
            If (Original_Substance Is Nothing) Then
                Throw New Global.System.ArgumentNullException("Original_Substance")
            Else
                Me.Adapter.DeleteCommand.Parameters(2).Value = CType(Original_Substance,String)
            End If
            If (Original_SDS_Name Is Nothing) Then
                Me.Adapter.DeleteCommand.Parameters(3).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(4).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.DeleteCommand.Parameters(3).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(4).Value = CType(Original_SDS_Name,String)
            End If
            If (Original_ListOfListsName Is Nothing) Then
                Me.Adapter.DeleteCommand.Parameters(5).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(6).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.DeleteCommand.Parameters(5).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(6).Value = CType(Original_ListOfListsName,String)
            End If
            If (Original_Aliases Is Nothing) Then
                Me.Adapter.DeleteCommand.Parameters(7).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(8).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.DeleteCommand.Parameters(7).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(8).Value = CType(Original_Aliases,String)
            End If
            Me.Adapter.DeleteCommand.Parameters(9).Value = CType(0,Object)
            Me.Adapter.DeleteCommand.Parameters(10).Value = CType(Original_Proprietary,Boolean)
            If (Original_CAS Is Nothing) Then
                Me.Adapter.DeleteCommand.Parameters(11).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(12).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.DeleteCommand.Parameters(11).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(12).Value = CType(Original_CAS,String)
            End If
            If (Original_PEL Is Nothing) Then
                Me.Adapter.DeleteCommand.Parameters(13).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(14).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.DeleteCommand.Parameters(13).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(14).Value = CType(Original_PEL,String)
            End If
            If (Original_ACGIH Is Nothing) Then
                Me.Adapter.DeleteCommand.Parameters(15).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(16).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.DeleteCommand.Parameters(15).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(16).Value = CType(Original_ACGIH,String)
            End If
            If (Original_CERCLA_RQ Is Nothing) Then
                Me.Adapter.DeleteCommand.Parameters(17).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(18).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.DeleteCommand.Parameters(17).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(18).Value = CType(Original_CERCLA_RQ,String)
            End If
            If (Original_SARA313 Is Nothing) Then
                Me.Adapter.DeleteCommand.Parameters(19).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(20).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.DeleteCommand.Parameters(19).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(20).Value = CType(Original_SARA313,String)
            End If
            If (Original_SARA302TPQ Is Nothing) Then
                Me.Adapter.DeleteCommand.Parameters(21).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(22).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.DeleteCommand.Parameters(21).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(22).Value = CType(Original_SARA302TPQ,String)
            End If
            If (Original_SARA302RQ Is Nothing) Then
                Me.Adapter.DeleteCommand.Parameters(23).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(24).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.DeleteCommand.Parameters(23).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(24).Value = CType(Original_SARA302RQ,String)
            End If
            If (Original_RCRACODE Is Nothing) Then
                Me.Adapter.DeleteCommand.Parameters(25).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(26).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.DeleteCommand.Parameters(25).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(26).Value = CType(Original_RCRACODE,String)
            End If
            Me.Adapter.DeleteCommand.Parameters(27).Value = CType(0,Object)
            Me.Adapter.DeleteCommand.Parameters(28).Value = CType(Original_IsProduct,Boolean)
            If (Original_IARC Is Nothing) Then
                Me.Adapter.DeleteCommand.Parameters(29).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(30).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.DeleteCommand.Parameters(29).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(30).Value = CType(Original_IARC,String)
            End If
            If (Original_NTP Is Nothing) Then
                Me.Adapter.DeleteCommand.Parameters(31).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(32).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.DeleteCommand.Parameters(31).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(32).Value = CType(Original_NTP,String)
            End If
            Dim previousConnectionState As Global.System.Data.ConnectionState = Me.Adapter.DeleteCommand.Connection.State
            If ((Me.Adapter.DeleteCommand.Connection.State And Global.System.Data.ConnectionState.Open)  _
                        <> Global.System.Data.ConnectionState.Open) Then
                Me.Adapter.DeleteCommand.Connection.Open
            End If
            Try 
                Dim returnValue As Integer = Me.Adapter.DeleteCommand.ExecuteNonQuery
                Return returnValue
            Finally
                If (previousConnectionState = Global.System.Data.ConnectionState.Closed) Then
                    Me.Adapter.DeleteCommand.Connection.Close
                End If
            End Try
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Insert, true)>  _
        Public Overloads Overridable Function Insert( _
                    ByVal Substance As String,  _
                    ByVal SDS_Name As String,  _
                    ByVal ListOfListsName As String,  _
                    ByVal Aliases As String,  _
                    ByVal Proprietary As Boolean,  _
                    ByVal CAS As String,  _
                    ByVal PEL As String,  _
                    ByVal ACGIH As String,  _
                    ByVal CERCLA_RQ As String,  _
                    ByVal SARA313 As String,  _
                    ByVal SARA302TPQ As String,  _
                    ByVal SARA302RQ As String,  _
                    ByVal RCRACODE As String,  _
                    ByVal IsProduct As Boolean,  _
                    ByVal IARC As String,  _
                    ByVal NTP As String,  _
                    ByVal Note As String) As Integer
            If (Substance Is Nothing) Then
                Throw New Global.System.ArgumentNullException("Substance")
            Else
                Me.Adapter.InsertCommand.Parameters(0).Value = CType(Substance,String)
            End If
            If (SDS_Name Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(1).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(1).Value = CType(SDS_Name,String)
            End If
            If (ListOfListsName Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(2).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(2).Value = CType(ListOfListsName,String)
            End If
            If (Aliases Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(3).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(3).Value = CType(Aliases,String)
            End If
            Me.Adapter.InsertCommand.Parameters(4).Value = CType(Proprietary,Boolean)
            If (CAS Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(5).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(5).Value = CType(CAS,String)
            End If
            If (PEL Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(6).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(6).Value = CType(PEL,String)
            End If
            If (ACGIH Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(7).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(7).Value = CType(ACGIH,String)
            End If
            If (CERCLA_RQ Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(8).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(8).Value = CType(CERCLA_RQ,String)
            End If
            If (SARA313 Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(9).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(9).Value = CType(SARA313,String)
            End If
            If (SARA302TPQ Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(10).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(10).Value = CType(SARA302TPQ,String)
            End If
            If (SARA302RQ Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(11).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(11).Value = CType(SARA302RQ,String)
            End If
            If (RCRACODE Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(12).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(12).Value = CType(RCRACODE,String)
            End If
            Me.Adapter.InsertCommand.Parameters(13).Value = CType(IsProduct,Boolean)
            If (IARC Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(14).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(14).Value = CType(IARC,String)
            End If
            If (NTP Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(15).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(15).Value = CType(NTP,String)
            End If
            If (Note Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(16).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(16).Value = CType(Note,String)
            End If
            Dim previousConnectionState As Global.System.Data.ConnectionState = Me.Adapter.InsertCommand.Connection.State
            If ((Me.Adapter.InsertCommand.Connection.State And Global.System.Data.ConnectionState.Open)  _
                        <> Global.System.Data.ConnectionState.Open) Then
                Me.Adapter.InsertCommand.Connection.Open
            End If
            Try 
                Dim returnValue As Integer = Me.Adapter.InsertCommand.ExecuteNonQuery
                Return returnValue
            Finally
                If (previousConnectionState = Global.System.Data.ConnectionState.Closed) Then
                    Me.Adapter.InsertCommand.Connection.Close
                End If
            End Try
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Update, true)>  _
        Public Overloads Overridable Function Update( _
                    ByVal Substance As String,  _
                    ByVal SDS_Name As String,  _
                    ByVal ListOfListsName As String,  _
                    ByVal Aliases As String,  _
                    ByVal Proprietary As Boolean,  _
                    ByVal CAS As String,  _
                    ByVal PEL As String,  _
                    ByVal ACGIH As String,  _
                    ByVal CERCLA_RQ As String,  _
                    ByVal SARA313 As String,  _
                    ByVal SARA302TPQ As String,  _
                    ByVal SARA302RQ As String,  _
                    ByVal RCRACODE As String,  _
                    ByVal IsProduct As Boolean,  _
                    ByVal IARC As String,  _
                    ByVal NTP As String,  _
                    ByVal Note As String,  _
                    ByVal Original_CMPID As Integer,  _
                    ByVal Original_Substance As String,  _
                    ByVal Original_SDS_Name As String,  _
                    ByVal Original_ListOfListsName As String,  _
                    ByVal Original_Aliases As String,  _
                    ByVal Original_Proprietary As Boolean,  _
                    ByVal Original_CAS As String,  _
                    ByVal Original_PEL As String,  _
                    ByVal Original_ACGIH As String,  _
                    ByVal Original_CERCLA_RQ As String,  _
                    ByVal Original_SARA313 As String,  _
                    ByVal Original_SARA302TPQ As String,  _
                    ByVal Original_SARA302RQ As String,  _
                    ByVal Original_RCRACODE As String,  _
                    ByVal Original_IsProduct As Boolean,  _
                    ByVal Original_IARC As String,  _
                    ByVal Original_NTP As String) As Integer
            If (Substance Is Nothing) Then
                Throw New Global.System.ArgumentNullException("Substance")
            Else
                Me.Adapter.UpdateCommand.Parameters(0).Value = CType(Substance,String)
            End If
            If (SDS_Name Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(1).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(1).Value = CType(SDS_Name,String)
            End If
            If (ListOfListsName Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(2).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(2).Value = CType(ListOfListsName,String)
            End If
            If (Aliases Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(3).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(3).Value = CType(Aliases,String)
            End If
            Me.Adapter.UpdateCommand.Parameters(4).Value = CType(Proprietary,Boolean)
            If (CAS Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(5).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(5).Value = CType(CAS,String)
            End If
            If (PEL Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(6).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(6).Value = CType(PEL,String)
            End If
            If (ACGIH Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(7).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(7).Value = CType(ACGIH,String)
            End If
            If (CERCLA_RQ Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(8).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(8).Value = CType(CERCLA_RQ,String)
            End If
            If (SARA313 Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(9).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(9).Value = CType(SARA313,String)
            End If
            If (SARA302TPQ Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(10).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(10).Value = CType(SARA302TPQ,String)
            End If
            If (SARA302RQ Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(11).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(11).Value = CType(SARA302RQ,String)
            End If
            If (RCRACODE Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(12).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(12).Value = CType(RCRACODE,String)
            End If
            Me.Adapter.UpdateCommand.Parameters(13).Value = CType(IsProduct,Boolean)
            If (IARC Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(14).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(14).Value = CType(IARC,String)
            End If
            If (NTP Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(15).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(15).Value = CType(NTP,String)
            End If
            If (Note Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(16).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(16).Value = CType(Note,String)
            End If
            Me.Adapter.UpdateCommand.Parameters(17).Value = CType(0,Object)
            Me.Adapter.UpdateCommand.Parameters(18).Value = CType(Original_CMPID,Integer)
            If (Original_Substance Is Nothing) Then
                Throw New Global.System.ArgumentNullException("Original_Substance")
            Else
                Me.Adapter.UpdateCommand.Parameters(19).Value = CType(Original_Substance,String)
            End If
            If (Original_SDS_Name Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(20).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(21).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(20).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(21).Value = CType(Original_SDS_Name,String)
            End If
            If (Original_ListOfListsName Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(22).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(23).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(22).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(23).Value = CType(Original_ListOfListsName,String)
            End If
            If (Original_Aliases Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(24).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(25).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(24).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(25).Value = CType(Original_Aliases,String)
            End If
            Me.Adapter.UpdateCommand.Parameters(26).Value = CType(0,Object)
            Me.Adapter.UpdateCommand.Parameters(27).Value = CType(Original_Proprietary,Boolean)
            If (Original_CAS Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(28).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(29).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(28).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(29).Value = CType(Original_CAS,String)
            End If
            If (Original_PEL Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(30).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(31).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(30).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(31).Value = CType(Original_PEL,String)
            End If
            If (Original_ACGIH Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(32).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(33).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(32).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(33).Value = CType(Original_ACGIH,String)
            End If
            If (Original_CERCLA_RQ Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(34).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(35).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(34).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(35).Value = CType(Original_CERCLA_RQ,String)
            End If
            If (Original_SARA313 Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(36).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(37).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(36).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(37).Value = CType(Original_SARA313,String)
            End If
            If (Original_SARA302TPQ Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(38).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(39).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(38).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(39).Value = CType(Original_SARA302TPQ,String)
            End If
            If (Original_SARA302RQ Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(40).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(41).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(40).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(41).Value = CType(Original_SARA302RQ,String)
            End If
            If (Original_RCRACODE Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(42).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(43).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(42).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(43).Value = CType(Original_RCRACODE,String)
            End If
            Me.Adapter.UpdateCommand.Parameters(44).Value = CType(0,Object)
            Me.Adapter.UpdateCommand.Parameters(45).Value = CType(Original_IsProduct,Boolean)
            If (Original_IARC Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(46).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(47).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(46).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(47).Value = CType(Original_IARC,String)
            End If
            If (Original_NTP Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(48).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(49).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(48).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(49).Value = CType(Original_NTP,String)
            End If
            Dim previousConnectionState As Global.System.Data.ConnectionState = Me.Adapter.UpdateCommand.Connection.State
            If ((Me.Adapter.UpdateCommand.Connection.State And Global.System.Data.ConnectionState.Open)  _
                        <> Global.System.Data.ConnectionState.Open) Then
                Me.Adapter.UpdateCommand.Connection.Open
            End If
            Try 
                Dim returnValue As Integer = Me.Adapter.UpdateCommand.ExecuteNonQuery
                Return returnValue
            Finally
                If (previousConnectionState = Global.System.Data.ConnectionState.Closed) Then
                    Me.Adapter.UpdateCommand.Connection.Close
                End If
            End Try
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Update, true)>  _
        Public Overloads Overridable Function Update( _
                    ByVal SDS_Name As String,  _
                    ByVal ListOfListsName As String,  _
                    ByVal Aliases As String,  _
                    ByVal Proprietary As Boolean,  _
                    ByVal CAS As String,  _
                    ByVal PEL As String,  _
                    ByVal ACGIH As String,  _
                    ByVal CERCLA_RQ As String,  _
                    ByVal SARA313 As String,  _
                    ByVal SARA302TPQ As String,  _
                    ByVal SARA302RQ As String,  _
                    ByVal RCRACODE As String,  _
                    ByVal IsProduct As Boolean,  _
                    ByVal IARC As String,  _
                    ByVal NTP As String,  _
                    ByVal Note As String,  _
                    ByVal Original_CMPID As Integer,  _
                    ByVal Original_Substance As String,  _
                    ByVal Original_SDS_Name As String,  _
                    ByVal Original_ListOfListsName As String,  _
                    ByVal Original_Aliases As String,  _
                    ByVal Original_Proprietary As Boolean,  _
                    ByVal Original_CAS As String,  _
                    ByVal Original_PEL As String,  _
                    ByVal Original_ACGIH As String,  _
                    ByVal Original_CERCLA_RQ As String,  _
                    ByVal Original_SARA313 As String,  _
                    ByVal Original_SARA302TPQ As String,  _
                    ByVal Original_SARA302RQ As String,  _
                    ByVal Original_RCRACODE As String,  _
                    ByVal Original_IsProduct As Boolean,  _
                    ByVal Original_IARC As String,  _
                    ByVal Original_NTP As String) As Integer
            Return Me.Update(Original_Substance, SDS_Name, ListOfListsName, Aliases, Proprietary, CAS, PEL, ACGIH, CERCLA_RQ, SARA313, SARA302TPQ, SARA302RQ, RCRACODE, IsProduct, IARC, NTP, Note, Original_CMPID, Original_Substance, Original_SDS_Name, Original_ListOfListsName, Original_Aliases, Original_Proprietary, Original_CAS, Original_PEL, Original_ACGIH, Original_CERCLA_RQ, Original_SARA313, Original_SARA302TPQ, Original_SARA302RQ, Original_RCRACODE, Original_IsProduct, Original_IARC, Original_NTP)
        End Function
    End Class
    
    '''<summary>
    '''Represents the connection and commands used to retrieve and save data.
    '''</summary>
    <Global.System.ComponentModel.DesignerCategoryAttribute("code"),  _
     Global.System.ComponentModel.ToolboxItem(true),  _
     Global.System.ComponentModel.DataObjectAttribute(true),  _
     Global.System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner"& _ 
        ", Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a"),  _
     Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
    Partial Public Class DefaultsTableAdapter
        Inherits Global.System.ComponentModel.Component
        
        Private WithEvents _adapter As Global.System.Data.OleDb.OleDbDataAdapter
        
        Private _connection As Global.System.Data.OleDb.OleDbConnection
        
        Private _transaction As Global.System.Data.OleDb.OleDbTransaction
        
        Private _commandCollection() As Global.System.Data.OleDb.OleDbCommand
        
        Private _clearBeforeFill As Boolean
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub New()
            MyBase.New
            Me.ClearBeforeFill = true
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Friend ReadOnly Property Adapter() As Global.System.Data.OleDb.OleDbDataAdapter
            Get
                If (Me._adapter Is Nothing) Then
                    Me.InitAdapter
                End If
                Return Me._adapter
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Property Connection() As Global.System.Data.OleDb.OleDbConnection
            Get
                If (Me._connection Is Nothing) Then
                    Me.InitConnection
                End If
                Return Me._connection
            End Get
            Set
                Me._connection = value
                If (Not (Me.Adapter.InsertCommand) Is Nothing) Then
                    Me.Adapter.InsertCommand.Connection = value
                End If
                If (Not (Me.Adapter.DeleteCommand) Is Nothing) Then
                    Me.Adapter.DeleteCommand.Connection = value
                End If
                If (Not (Me.Adapter.UpdateCommand) Is Nothing) Then
                    Me.Adapter.UpdateCommand.Connection = value
                End If
                Dim i As Integer = 0
                Do While (i < Me.CommandCollection.Length)
                    If (Not (Me.CommandCollection(i)) Is Nothing) Then
                        CType(Me.CommandCollection(i),Global.System.Data.OleDb.OleDbCommand).Connection = value
                    End If
                    i = (i + 1)
                Loop
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Property Transaction() As Global.System.Data.OleDb.OleDbTransaction
            Get
                Return Me._transaction
            End Get
            Set
                Me._transaction = value
                Dim i As Integer = 0
                Do While (i < Me.CommandCollection.Length)
                    Me.CommandCollection(i).Transaction = Me._transaction
                    i = (i + 1)
                Loop
                If ((Not (Me.Adapter) Is Nothing)  _
                            AndAlso (Not (Me.Adapter.DeleteCommand) Is Nothing)) Then
                    Me.Adapter.DeleteCommand.Transaction = Me._transaction
                End If
                If ((Not (Me.Adapter) Is Nothing)  _
                            AndAlso (Not (Me.Adapter.InsertCommand) Is Nothing)) Then
                    Me.Adapter.InsertCommand.Transaction = Me._transaction
                End If
                If ((Not (Me.Adapter) Is Nothing)  _
                            AndAlso (Not (Me.Adapter.UpdateCommand) Is Nothing)) Then
                    Me.Adapter.UpdateCommand.Transaction = Me._transaction
                End If
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected ReadOnly Property CommandCollection() As Global.System.Data.OleDb.OleDbCommand()
            Get
                If (Me._commandCollection Is Nothing) Then
                    Me.InitCommandCollection
                End If
                Return Me._commandCollection
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property ClearBeforeFill() As Boolean
            Get
                Return Me._clearBeforeFill
            End Get
            Set
                Me._clearBeforeFill = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Private Sub InitAdapter()
            Me._adapter = New Global.System.Data.OleDb.OleDbDataAdapter()
            Dim tableMapping As Global.System.Data.Common.DataTableMapping = New Global.System.Data.Common.DataTableMapping()
            tableMapping.SourceTable = "Table"
            tableMapping.DataSetTable = "Defaults"
            tableMapping.ColumnMappings.Add("Preset", "Preset")
            tableMapping.ColumnMappings.Add("Hazard_classification", "Hazard_classification")
            tableMapping.ColumnMappings.Add("Signal_word", "Signal_word")
            tableMapping.ColumnMappings.Add("Hazard_statement", "Hazard_statement")
            tableMapping.ColumnMappings.Add("Pict1", "Pict1")
            tableMapping.ColumnMappings.Add("Pict2", "Pict2")
            tableMapping.ColumnMappings.Add("Pict3", "Pict3")
            tableMapping.ColumnMappings.Add("Pict4", "Pict4")
            tableMapping.ColumnMappings.Add("Pre_prevention", "Pre_prevention")
            tableMapping.ColumnMappings.Add("Pre_response", "Pre_response")
            tableMapping.ColumnMappings.Add("Pre_storage", "Pre_storage")
            tableMapping.ColumnMappings.Add("Pre_disposal", "Pre_disposal")
            tableMapping.ColumnMappings.Add("Component", "Component")
            tableMapping.ColumnMappings.Add("FA_eye_contact", "FA_eye_contact")
            tableMapping.ColumnMappings.Add("FA_skin_contact", "FA_skin_contact")
            tableMapping.ColumnMappings.Add("FA_ingestion", "FA_ingestion")
            tableMapping.ColumnMappings.Add("FA_inhalation", "FA_inhalation")
            tableMapping.ColumnMappings.Add("Note_to_HCP", "Note_to_HCP")
            tableMapping.ColumnMappings.Add("Suitable_extinguishing_media", "Suitable_extinguishing_media")
            tableMapping.ColumnMappings.Add("Unsuitable_extinguishing_media", "Unsuitable_extinguishing_media")
            tableMapping.ColumnMappings.Add("Precautions_for_firefighters", "Precautions_for_firefighters")
            tableMapping.ColumnMappings.Add("Specific_hazards", "Specific_hazards")
            tableMapping.ColumnMappings.Add("Hazardous_combustion_products", "Hazardous_combustion_products")
            tableMapping.ColumnMappings.Add("Personal_precautions", "Personal_precautions")
            tableMapping.ColumnMappings.Add("Small_spills", "Small_spills")
            tableMapping.ColumnMappings.Add("Large_spills", "Large_spills")
            tableMapping.ColumnMappings.Add("Advice_on_safe_handling", "Advice_on_safe_handling")
            tableMapping.ColumnMappings.Add("Storage_conditions", "Storage_conditions")
            tableMapping.ColumnMappings.Add("Suitable_materials_of_construction", "Suitable_materials_of_construction")
            tableMapping.ColumnMappings.Add("Unsuitable_materials_of_construction", "Unsuitable_materials_of_construction")
            tableMapping.ColumnMappings.Add("Eye_face_protection", "Eye_face_protection")
            tableMapping.ColumnMappings.Add("Skin_protection", "Skin_protection")
            tableMapping.ColumnMappings.Add("Respiratory_protection", "Respiratory_protection")
            tableMapping.ColumnMappings.Add("Engineering_controls", "Engineering_controls")
            tableMapping.ColumnMappings.Add("General_hygiene_considerations", "General_hygiene_considerations")
            tableMapping.ColumnMappings.Add("Chemical_stability", "Chemical_stability")
            tableMapping.ColumnMappings.Add("Hazardous_polymerization", "Hazardous_polymerization")
            tableMapping.ColumnMappings.Add("Conditions_to_avoid", "Conditions_to_avoid")
            tableMapping.ColumnMappings.Add("Incompatibilities", "Incompatibilities")
            tableMapping.ColumnMappings.Add("Hazardous_decomposition_products", "Hazardous_decomposition_products")
            tableMapping.ColumnMappings.Add("Likely_routes_of_exposure", "Likely_routes_of_exposure")
            tableMapping.ColumnMappings.Add("Eye_contact", "Eye_contact")
            tableMapping.ColumnMappings.Add("Odor_threshold", "Odor_threshold")
            tableMapping.ColumnMappings.Add("Skin_contact", "Skin_contact")
            tableMapping.ColumnMappings.Add("Ingestion", "Ingestion")
            tableMapping.ColumnMappings.Add("Inhalation", "Inhalation")
            tableMapping.ColumnMappings.Add("Reproductive_effects", "Reproductive_effects")
            tableMapping.ColumnMappings.Add("Teratogenicity", "Teratogenicity")
            tableMapping.ColumnMappings.Add("Explosive_limits", "Explosive_limits")
            tableMapping.ColumnMappings.Add("Mutagenicity", "Mutagenicity")
            tableMapping.ColumnMappings.Add("Embryotoxicity", "Embryotoxicity")
            tableMapping.ColumnMappings.Add("Sensitization_to_product", "Sensitization_to_product")
            tableMapping.ColumnMappings.Add("Synergistic_products", "Synergistic_products")
            tableMapping.ColumnMappings.Add("Carcinogenicity", "Carcinogenicity")
            tableMapping.ColumnMappings.Add("Specific_gravity", "Specific_gravity")
            tableMapping.ColumnMappings.Add("Chronic", "Chronic")
            tableMapping.ColumnMappings.Add("Persistence", "Persistence")
            tableMapping.ColumnMappings.Add("Bioaccumulative_potential", "Bioaccumulative_potential")
            tableMapping.ColumnMappings.Add("Mobility", "Mobility")
            tableMapping.ColumnMappings.Add("Disposal", "Disposal")
            tableMapping.ColumnMappings.Add("Viscosity", "Viscosity")
            tableMapping.ColumnMappings.Add("RCRA_status", "RCRA_status")
            tableMapping.ColumnMappings.Add("FA_Eye_Contact_code", "FA_Eye_Contact_code")
            tableMapping.ColumnMappings.Add("FA_skin_contact_code", "FA_skin_contact_code")
            tableMapping.ColumnMappings.Add("FA_inhalation_code", "FA_inhalation_code")
            tableMapping.ColumnMappings.Add("FA_ingestion_code", "FA_ingestion_code")
            tableMapping.ColumnMappings.Add("Note_to_hcp_code", "Note_to_hcp_code")
            tableMapping.ColumnMappings.Add("Suitable_extinguishing_media_code", "Suitable_extinguishing_media_code")
            tableMapping.ColumnMappings.Add("Unsuitable_extinguishing_media_code", "Unsuitable_extinguishing_media_code")
            tableMapping.ColumnMappings.Add("Precautions_for_firefighters_code", "Precautions_for_firefighters_code")
            tableMapping.ColumnMappings.Add("Specific_hazards_code", "Specific_hazards_code")
            tableMapping.ColumnMappings.Add("Hazardous_combustion_products_code", "Hazardous_combustion_products_code")
            tableMapping.ColumnMappings.Add("Personal_precautions_code", "Personal_precautions_code")
            tableMapping.ColumnMappings.Add("Small_spills_code", "Small_spills_code")
            tableMapping.ColumnMappings.Add("Large_spills_code", "Large_spills_code")
            tableMapping.ColumnMappings.Add("Advice_on_safe_handling_code", "Advice_on_safe_handling_code")
            tableMapping.ColumnMappings.Add("Storage_conditions_code", "Storage_conditions_code")
            tableMapping.ColumnMappings.Add("Suitable_materials_of_construction_code", "Suitable_materials_of_construction_code")
            tableMapping.ColumnMappings.Add("Unsuitable_materials_of_construction_code", "Unsuitable_materials_of_construction_code")
            tableMapping.ColumnMappings.Add("Eye_face_protection_code", "Eye_face_protection_code")
            tableMapping.ColumnMappings.Add("Skin_protection_code", "Skin_protection_code")
            tableMapping.ColumnMappings.Add("Respiratory_protection_code", "Respiratory_protection_code")
            tableMapping.ColumnMappings.Add("Engineering_controls_code", "Engineering_controls_code")
            tableMapping.ColumnMappings.Add("General_hygiene_considerations_code", "General_hygiene_considerations_code")
            tableMapping.ColumnMappings.Add("Chemical_stability_code", "Chemical_stability_code")
            tableMapping.ColumnMappings.Add("Hazardous_polymerization_code", "Hazardous_polymerization_code")
            tableMapping.ColumnMappings.Add("Conditions_to_avoid_code", "Conditions_to_avoid_code")
            tableMapping.ColumnMappings.Add("Incompatibilities_code", "Incompatibilities_code")
            tableMapping.ColumnMappings.Add("Hazardous_decomposition_products_code", "Hazardous_decomposition_products_code")
            tableMapping.ColumnMappings.Add("Likely_routes_of_exposure_code", "Likely_routes_of_exposure_code")
            tableMapping.ColumnMappings.Add("Skin_contact_code", "Skin_contact_code")
            tableMapping.ColumnMappings.Add("Ingestion_code", "Ingestion_code")
            tableMapping.ColumnMappings.Add("Inhalation_code", "Inhalation_code")
            tableMapping.ColumnMappings.Add("Reproductive_effects_code", "Reproductive_effects_code")
            tableMapping.ColumnMappings.Add("Teratogenicity_code", "Teratogenicity_code")
            tableMapping.ColumnMappings.Add("Mutagenicity_code", "Mutagenicity_code")
            tableMapping.ColumnMappings.Add("Embryotoxicity_code", "Embryotoxicity_code")
            tableMapping.ColumnMappings.Add("Sensitization_to_product_code", "Sensitization_to_product_code")
            tableMapping.ColumnMappings.Add("Synergistic_products_code", "Synergistic_products_code")
            tableMapping.ColumnMappings.Add("Carcinogenicity_code", "Carcinogenicity_code")
            tableMapping.ColumnMappings.Add("Chronic_code", "Chronic_code")
            tableMapping.ColumnMappings.Add("Persistence_code", "Persistence_code")
            tableMapping.ColumnMappings.Add("Bioaccumulative_potential_code", "Bioaccumulative_potential_code")
            tableMapping.ColumnMappings.Add("Mobility_code", "Mobility_code")
            tableMapping.ColumnMappings.Add("Disposal_code", "Disposal_code")
            tableMapping.ColumnMappings.Add("RCRA_status_code", "RCRA_status_code")
            tableMapping.ColumnMappings.Add("Eye_contact_code", "Eye_contact_code")
            tableMapping.ColumnMappings.Add("TSCA_code", "TSCA_code")
            Me._adapter.TableMappings.Add(tableMapping)
            Me._adapter.InsertCommand = New Global.System.Data.OleDb.OleDbCommand()
            Me._adapter.InsertCommand.Connection = Me.Connection
            Me._adapter.InsertCommand.CommandText = "INSERT INTO `Defaults` (`Preset`, `Hazard_classification`, `Signal_word`, `Hazard"& _ 
                "_statement`, `Pict1`, `Pict2`, `Pict3`, `Pict4`, `Pre_prevention`, `Pre_response"& _ 
                "`, `Pre_storage`, `Pre_disposal`, `Component`, `FA_eye_contact`, `FA_skin_contac"& _ 
                "t`, `FA_ingestion`, `FA_inhalation`, `Note_to_HCP`, `Suitable_extinguishing_medi"& _ 
                "a`, `Unsuitable_extinguishing_media`, `Precautions_for_firefighters`, `Specific_"& _ 
                "hazards`, `Hazardous_combustion_products`, `Personal_precautions`, `Small_spills"& _ 
                "`, `Large_spills`, `Advice_on_safe_handling`, `Storage_conditions`, `Suitable_ma"& _ 
                "terials_of_construction`, `Unsuitable_materials_of_construction`, `Eye_face_prot"& _ 
                "ection`, `Skin_protection`, `Respiratory_protection`, `Engineering_controls`, `G"& _ 
                "eneral_hygiene_considerations`, `Chemical_stability`, `Hazardous_polymerization`"& _ 
                ", `Conditions_to_avoid`, `Incompatibilities`, `Hazardous_decomposition_products`"& _ 
                ", `Likely_routes_of_exposure`, `Eye_contact`, `Odor_threshold`, `Skin_contact`, "& _ 
                "`Ingestion`, `Inhalation`, `Reproductive_effects`, `Teratogenicity`, `Explosive_"& _ 
                "limits`, `Mutagenicity`, `Embryotoxicity`, `Sensitization_to_product`, `Synergis"& _ 
                "tic_products`, `Carcinogenicity`, `Specific_gravity`, `Chronic`, `Persistence`, "& _ 
                "`Bioaccumulative_potential`, `Mobility`, `Disposal`, `Viscosity`, `RCRA_status`,"& _ 
                " `FA_Eye_Contact_code`, `FA_skin_contact_code`, `FA_inhalation_code`, `FA_ingest"& _ 
                "ion_code`, `Note_to_hcp_code`, `Suitable_extinguishing_media_code`, `Unsuitable_"& _ 
                "extinguishing_media_code`, `Precautions_for_firefighters_code`, `Specific_hazard"& _ 
                "s_code`, `Hazardous_combustion_products_code`, `Personal_precautions_code`, `Sma"& _ 
                "ll_spills_code`, `Large_spills_code`, `Advice_on_safe_handling_code`, `Storage_c"& _ 
                "onditions_code`, `Suitable_materials_of_construction_code`, `Unsuitable_material"& _ 
                "s_of_construction_code`, `Eye_face_protection_code`, `Skin_protection_code`, `Re"& _ 
                "spiratory_protection_code`, `Engineering_controls_code`, `General_hygiene_consid"& _ 
                "erations_code`, `Chemical_stability_code`, `Hazardous_polymerization_code`, `Con"& _ 
                "ditions_to_avoid_code`, `Incompatibilities_code`, `Hazardous_decomposition_produ"& _ 
                "cts_code`, `Likely_routes_of_exposure_code`, `Skin_contact_code`, `Ingestion_cod"& _ 
                "e`, `Inhalation_code`, `Reproductive_effects_code`, `Teratogenicity_code`, `Muta"& _ 
                "genicity_code`, `Embryotoxicity_code`, `Sensitization_to_product_code`, `Synergi"& _ 
                "stic_products_code`, `Carcinogenicity_code`, `Chronic_code`, `Persistence_code`,"& _ 
                " `Bioaccumulative_potential_code`, `Mobility_code`, `Disposal_code`, `RCRA_statu"& _ 
                "s_code`, `Eye_contact_code`, `TSCA_code`) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, "& _ 
                "?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?,"& _ 
                " ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?"& _ 
                ", ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, "& _ 
                "?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)"
            Me._adapter.InsertCommand.CommandType = Global.System.Data.CommandType.Text
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("Preset", Global.System.Data.OleDb.OleDbType.VarWChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "Preset", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("Hazard_classification", Global.System.Data.OleDb.OleDbType.LongVarWChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "Hazard_classification", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("Signal_word", Global.System.Data.OleDb.OleDbType.VarWChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "Signal_word", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("Hazard_statement", Global.System.Data.OleDb.OleDbType.LongVarWChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "Hazard_statement", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("Pict1", Global.System.Data.OleDb.OleDbType.VarWChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "Pict1", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("Pict2", Global.System.Data.OleDb.OleDbType.VarWChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "Pict2", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("Pict3", Global.System.Data.OleDb.OleDbType.VarWChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "Pict3", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("Pict4", Global.System.Data.OleDb.OleDbType.VarWChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "Pict4", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("Pre_prevention", Global.System.Data.OleDb.OleDbType.LongVarWChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "Pre_prevention", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("Pre_response", Global.System.Data.OleDb.OleDbType.LongVarWChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "Pre_response", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("Pre_storage", Global.System.Data.OleDb.OleDbType.LongVarWChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "Pre_storage", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("Pre_disposal", Global.System.Data.OleDb.OleDbType.LongVarWChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "Pre_disposal", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("Component", Global.System.Data.OleDb.OleDbType.VarWChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "Component", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("FA_eye_contact", Global.System.Data.OleDb.OleDbType.LongVarWChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "FA_eye_contact", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("FA_skin_contact", Global.System.Data.OleDb.OleDbType.LongVarWChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "FA_skin_contact", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("FA_ingestion", Global.System.Data.OleDb.OleDbType.LongVarWChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "FA_ingestion", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("FA_inhalation", Global.System.Data.OleDb.OleDbType.LongVarWChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "FA_inhalation", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("Note_to_HCP", Global.System.Data.OleDb.OleDbType.LongVarWChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "Note_to_HCP", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("Suitable_extinguishing_media", Global.System.Data.OleDb.OleDbType.LongVarWChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "Suitable_extinguishing_media", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("Unsuitable_extinguishing_media", Global.System.Data.OleDb.OleDbType.LongVarWChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "Unsuitable_extinguishing_media", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("Precautions_for_firefighters", Global.System.Data.OleDb.OleDbType.LongVarWChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "Precautions_for_firefighters", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("Specific_hazards", Global.System.Data.OleDb.OleDbType.LongVarWChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "Specific_hazards", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("Hazardous_combustion_products", Global.System.Data.OleDb.OleDbType.LongVarWChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "Hazardous_combustion_products", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("Personal_precautions", Global.System.Data.OleDb.OleDbType.LongVarWChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "Personal_precautions", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("Small_spills", Global.System.Data.OleDb.OleDbType.LongVarWChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "Small_spills", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("Large_spills", Global.System.Data.OleDb.OleDbType.LongVarWChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "Large_spills", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("Advice_on_safe_handling", Global.System.Data.OleDb.OleDbType.LongVarWChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "Advice_on_safe_handling", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("Storage_conditions", Global.System.Data.OleDb.OleDbType.LongVarWChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "Storage_conditions", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("Suitable_materials_of_construction", Global.System.Data.OleDb.OleDbType.LongVarWChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "Suitable_materials_of_construction", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("Unsuitable_materials_of_construction", Global.System.Data.OleDb.OleDbType.LongVarWChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "Unsuitable_materials_of_construction", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("Eye_face_protection", Global.System.Data.OleDb.OleDbType.LongVarWChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "Eye_face_protection", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("Skin_protection", Global.System.Data.OleDb.OleDbType.LongVarWChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "Skin_protection", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("Respiratory_protection", Global.System.Data.OleDb.OleDbType.LongVarWChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "Respiratory_protection", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("Engineering_controls", Global.System.Data.OleDb.OleDbType.LongVarWChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "Engineering_controls", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("General_hygiene_considerations", Global.System.Data.OleDb.OleDbType.LongVarWChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "General_hygiene_considerations", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("Chemical_stability", Global.System.Data.OleDb.OleDbType.LongVarWChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "Chemical_stability", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("Hazardous_polymerization", Global.System.Data.OleDb.OleDbType.LongVarWChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "Hazardous_polymerization", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("Conditions_to_avoid", Global.System.Data.OleDb.OleDbType.LongVarWChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "Conditions_to_avoid", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("Incompatibilities", Global.System.Data.OleDb.OleDbType.LongVarWChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "Incompatibilities", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("Hazardous_decomposition_products", Global.System.Data.OleDb.OleDbType.LongVarWChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "Hazardous_decomposition_products", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("Likely_routes_of_exposure", Global.System.Data.OleDb.OleDbType.LongVarWChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "Likely_routes_of_exposure", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("Eye_contact", Global.System.Data.OleDb.OleDbType.LongVarWChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "Eye_contact", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("Odor_threshold", Global.System.Data.OleDb.OleDbType.VarWChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "Odor_threshold", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("Skin_contact", Global.System.Data.OleDb.OleDbType.LongVarWChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "Skin_contact", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("Ingestion", Global.System.Data.OleDb.OleDbType.LongVarWChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "Ingestion", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("Inhalation", Global.System.Data.OleDb.OleDbType.LongVarWChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "Inhalation", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("Reproductive_effects", Global.System.Data.OleDb.OleDbType.LongVarWChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "Reproductive_effects", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("Teratogenicity", Global.System.Data.OleDb.OleDbType.LongVarWChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "Teratogenicity", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("Explosive_limits", Global.System.Data.OleDb.OleDbType.VarWChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "Explosive_limits", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("Mutagenicity", Global.System.Data.OleDb.OleDbType.LongVarWChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "Mutagenicity", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("Embryotoxicity", Global.System.Data.OleDb.OleDbType.LongVarWChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "Embryotoxicity", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("Sensitization_to_product", Global.System.Data.OleDb.OleDbType.LongVarWChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "Sensitization_to_product", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("Synergistic_products", Global.System.Data.OleDb.OleDbType.LongVarWChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "Synergistic_products", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("Carcinogenicity", Global.System.Data.OleDb.OleDbType.LongVarWChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "Carcinogenicity", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("Specific_gravity", Global.System.Data.OleDb.OleDbType.VarWChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "Specific_gravity", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("Chronic", Global.System.Data.OleDb.OleDbType.LongVarWChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "Chronic", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("Persistence", Global.System.Data.OleDb.OleDbType.LongVarWChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "Persistence", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("Bioaccumulative_potential", Global.System.Data.OleDb.OleDbType.LongVarWChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "Bioaccumulative_potential", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("Mobility", Global.System.Data.OleDb.OleDbType.LongVarWChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "Mobility", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("Disposal", Global.System.Data.OleDb.OleDbType.LongVarWChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "Disposal", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("Viscosity", Global.System.Data.OleDb.OleDbType.VarWChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "Viscosity", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("RCRA_status", Global.System.Data.OleDb.OleDbType.LongVarWChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "RCRA_status", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("FA_Eye_Contact_code", Global.System.Data.OleDb.OleDbType.[Integer], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "FA_Eye_Contact_code", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("FA_skin_contact_code", Global.System.Data.OleDb.OleDbType.[Integer], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "FA_skin_contact_code", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("FA_inhalation_code", Global.System.Data.OleDb.OleDbType.[Integer], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "FA_inhalation_code", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("FA_ingestion_code", Global.System.Data.OleDb.OleDbType.[Integer], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "FA_ingestion_code", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("Note_to_hcp_code", Global.System.Data.OleDb.OleDbType.[Integer], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "Note_to_hcp_code", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("Suitable_extinguishing_media_code", Global.System.Data.OleDb.OleDbType.[Integer], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "Suitable_extinguishing_media_code", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("Unsuitable_extinguishing_media_code", Global.System.Data.OleDb.OleDbType.[Integer], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "Unsuitable_extinguishing_media_code", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("Precautions_for_firefighters_code", Global.System.Data.OleDb.OleDbType.[Integer], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "Precautions_for_firefighters_code", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("Specific_hazards_code", Global.System.Data.OleDb.OleDbType.[Integer], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "Specific_hazards_code", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("Hazardous_combustion_products_code", Global.System.Data.OleDb.OleDbType.[Integer], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "Hazardous_combustion_products_code", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("Personal_precautions_code", Global.System.Data.OleDb.OleDbType.[Integer], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "Personal_precautions_code", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("Small_spills_code", Global.System.Data.OleDb.OleDbType.[Integer], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "Small_spills_code", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("Large_spills_code", Global.System.Data.OleDb.OleDbType.[Integer], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "Large_spills_code", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("Advice_on_safe_handling_code", Global.System.Data.OleDb.OleDbType.[Integer], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "Advice_on_safe_handling_code", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("Storage_conditions_code", Global.System.Data.OleDb.OleDbType.[Integer], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "Storage_conditions_code", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("Suitable_materials_of_construction_code", Global.System.Data.OleDb.OleDbType.[Integer], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "Suitable_materials_of_construction_code", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("Unsuitable_materials_of_construction_code", Global.System.Data.OleDb.OleDbType.[Integer], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "Unsuitable_materials_of_construction_code", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("Eye_face_protection_code", Global.System.Data.OleDb.OleDbType.[Integer], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "Eye_face_protection_code", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("Skin_protection_code", Global.System.Data.OleDb.OleDbType.[Integer], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "Skin_protection_code", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("Respiratory_protection_code", Global.System.Data.OleDb.OleDbType.[Integer], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "Respiratory_protection_code", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("Engineering_controls_code", Global.System.Data.OleDb.OleDbType.[Integer], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "Engineering_controls_code", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("General_hygiene_considerations_code", Global.System.Data.OleDb.OleDbType.[Integer], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "General_hygiene_considerations_code", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("Chemical_stability_code", Global.System.Data.OleDb.OleDbType.[Integer], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "Chemical_stability_code", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("Hazardous_polymerization_code", Global.System.Data.OleDb.OleDbType.[Integer], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "Hazardous_polymerization_code", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("Conditions_to_avoid_code", Global.System.Data.OleDb.OleDbType.[Integer], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "Conditions_to_avoid_code", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("Incompatibilities_code", Global.System.Data.OleDb.OleDbType.[Integer], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "Incompatibilities_code", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("Hazardous_decomposition_products_code", Global.System.Data.OleDb.OleDbType.[Integer], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "Hazardous_decomposition_products_code", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("Likely_routes_of_exposure_code", Global.System.Data.OleDb.OleDbType.[Integer], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "Likely_routes_of_exposure_code", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("Skin_contact_code", Global.System.Data.OleDb.OleDbType.[Integer], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "Skin_contact_code", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("Ingestion_code", Global.System.Data.OleDb.OleDbType.[Integer], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "Ingestion_code", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("Inhalation_code", Global.System.Data.OleDb.OleDbType.[Integer], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "Inhalation_code", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("Reproductive_effects_code", Global.System.Data.OleDb.OleDbType.[Integer], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "Reproductive_effects_code", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("Teratogenicity_code", Global.System.Data.OleDb.OleDbType.[Integer], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "Teratogenicity_code", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("Mutagenicity_code", Global.System.Data.OleDb.OleDbType.[Integer], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "Mutagenicity_code", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("Embryotoxicity_code", Global.System.Data.OleDb.OleDbType.[Integer], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "Embryotoxicity_code", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("Sensitization_to_product_code", Global.System.Data.OleDb.OleDbType.[Integer], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "Sensitization_to_product_code", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("Synergistic_products_code", Global.System.Data.OleDb.OleDbType.[Integer], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "Synergistic_products_code", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("Carcinogenicity_code", Global.System.Data.OleDb.OleDbType.[Integer], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "Carcinogenicity_code", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("Chronic_code", Global.System.Data.OleDb.OleDbType.[Integer], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "Chronic_code", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("Persistence_code", Global.System.Data.OleDb.OleDbType.[Integer], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "Persistence_code", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("Bioaccumulative_potential_code", Global.System.Data.OleDb.OleDbType.[Integer], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "Bioaccumulative_potential_code", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("Mobility_code", Global.System.Data.OleDb.OleDbType.[Integer], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "Mobility_code", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("Disposal_code", Global.System.Data.OleDb.OleDbType.[Integer], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "Disposal_code", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("RCRA_status_code", Global.System.Data.OleDb.OleDbType.[Integer], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "RCRA_status_code", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("Eye_contact_code", Global.System.Data.OleDb.OleDbType.[Integer], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "Eye_contact_code", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("TSCA_code", Global.System.Data.OleDb.OleDbType.[Integer], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "TSCA_code", Global.System.Data.DataRowVersion.Current, false, Nothing))
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Private Sub InitConnection()
            Me._connection = New Global.System.Data.OleDb.OleDbConnection()
            Me._connection.ConnectionString = Global.Interfacer5.MySettings.Default.Dossier
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Private Sub InitCommandCollection()
            Me._commandCollection = New Global.System.Data.OleDb.OleDbCommand(0) {}
            Me._commandCollection(0) = New Global.System.Data.OleDb.OleDbCommand()
            Me._commandCollection(0).Connection = Me.Connection
            Me._commandCollection(0).CommandText = "SELECT Preset, Hazard_classification, Signal_word, Hazard_statement, Pict1, Pict2"& _ 
                ", Pict3, Pict4, Pre_prevention, Pre_response, Pre_storage, Pre_disposal, Compone"& _ 
                "nt, FA_eye_contact, FA_skin_contact, FA_ingestion, FA_inhalation, Note_to_HCP, S"& _ 
                "uitable_extinguishing_media, Unsuitable_extinguishing_media, Precautions_for_fir"& _ 
                "efighters, Specific_hazards, Hazardous_combustion_products, Personal_precautions"& _ 
                ", Small_spills, Large_spills, Advice_on_safe_handling, Storage_conditions, Suita"& _ 
                "ble_materials_of_construction, Unsuitable_materials_of_construction, Eye_face_pr"& _ 
                "otection, Skin_protection, Respiratory_protection, Engineering_controls, General"& _ 
                "_hygiene_considerations, Chemical_stability, Hazardous_polymerization, Condition"& _ 
                "s_to_avoid, Incompatibilities, Hazardous_decomposition_products, Likely_routes_o"& _ 
                "f_exposure, Eye_contact, Odor_threshold, Skin_contact, Ingestion, Inhalation, Re"& _ 
                "productive_effects, Teratogenicity, Explosive_limits, Mutagenicity, Embryotoxici"& _ 
                "ty, Sensitization_to_product, Synergistic_products, Carcinogenicity, Specific_gr"& _ 
                "avity, Chronic, Persistence, Bioaccumulative_potential, Mobility, Disposal, Visc"& _ 
                "osity, RCRA_status, FA_Eye_Contact_code, FA_skin_contact_code, FA_inhalation_cod"& _ 
                "e, FA_ingestion_code, Note_to_hcp_code, Suitable_extinguishing_media_code, Unsui"& _ 
                "table_extinguishing_media_code, Precautions_for_firefighters_code, Specific_haza"& _ 
                "rds_code, Hazardous_combustion_products_code, Personal_precautions_code, Small_s"& _ 
                "pills_code, Large_spills_code, Advice_on_safe_handling_code, Storage_conditions_"& _ 
                "code, Suitable_materials_of_construction_code, Unsuitable_materials_of_construct"& _ 
                "ion_code, Eye_face_protection_code, Skin_protection_code, Respiratory_protection"& _ 
                "_code, Engineering_controls_code, General_hygiene_considerations_code, Chemical_"& _ 
                "stability_code, Hazardous_polymerization_code, Conditions_to_avoid_code, Incompa"& _ 
                "tibilities_code, Hazardous_decomposition_products_code, Likely_routes_of_exposur"& _ 
                "e_code, Skin_contact_code, Ingestion_code, Inhalation_code, Reproductive_effects"& _ 
                "_code, Teratogenicity_code, Mutagenicity_code, Embryotoxicity_code, Sensitizatio"& _ 
                "n_to_product_code, Synergistic_products_code, Carcinogenicity_code, Chronic_code"& _ 
                ", Persistence_code, Bioaccumulative_potential_code, Mobility_code, Disposal_code"& _ 
                ", RCRA_status_code, Eye_contact_code, TSCA_code FROM Defaults"
            Me._commandCollection(0).CommandType = Global.System.Data.CommandType.Text
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Fill, true)>  _
        Public Overloads Overridable Function Fill(ByVal dataTable As Dossier.DefaultsDataTable) As Integer
            Me.Adapter.SelectCommand = Me.CommandCollection(0)
            If (Me.ClearBeforeFill = true) Then
                dataTable.Clear
            End If
            Dim returnValue As Integer = Me.Adapter.Fill(dataTable)
            Return returnValue
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.[Select], true)>  _
        Public Overloads Overridable Function GetData() As Dossier.DefaultsDataTable
            Me.Adapter.SelectCommand = Me.CommandCollection(0)
            Dim dataTable As Dossier.DefaultsDataTable = New Dossier.DefaultsDataTable()
            Me.Adapter.Fill(dataTable)
            Return dataTable
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function Update(ByVal dataTable As Dossier.DefaultsDataTable) As Integer
            Return Me.Adapter.Update(dataTable)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function Update(ByVal dataSet As Dossier) As Integer
            Return Me.Adapter.Update(dataSet, "Defaults")
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function Update(ByVal dataRow As Global.System.Data.DataRow) As Integer
            Return Me.Adapter.Update(New Global.System.Data.DataRow() {dataRow})
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function Update(ByVal dataRows() As Global.System.Data.DataRow) As Integer
            Return Me.Adapter.Update(dataRows)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Insert, true)>  _
        Public Overloads Overridable Function Insert( _
                    ByVal Preset As String,  _
                    ByVal Hazard_classification As String,  _
                    ByVal Signal_word As String,  _
                    ByVal Hazard_statement As String,  _
                    ByVal Pict1 As String,  _
                    ByVal Pict2 As String,  _
                    ByVal Pict3 As String,  _
                    ByVal Pict4 As String,  _
                    ByVal Pre_prevention As String,  _
                    ByVal Pre_response As String,  _
                    ByVal Pre_storage As String,  _
                    ByVal Pre_disposal As String,  _
                    ByVal Component As String,  _
                    ByVal FA_eye_contact As String,  _
                    ByVal FA_skin_contact As String,  _
                    ByVal FA_ingestion As String,  _
                    ByVal FA_inhalation As String,  _
                    ByVal Note_to_HCP As String,  _
                    ByVal Suitable_extinguishing_media As String,  _
                    ByVal Unsuitable_extinguishing_media As String,  _
                    ByVal Precautions_for_firefighters As String,  _
                    ByVal Specific_hazards As String,  _
                    ByVal Hazardous_combustion_products As String,  _
                    ByVal Personal_precautions As String,  _
                    ByVal Small_spills As String,  _
                    ByVal Large_spills As String,  _
                    ByVal Advice_on_safe_handling As String,  _
                    ByVal Storage_conditions As String,  _
                    ByVal Suitable_materials_of_construction As String,  _
                    ByVal Unsuitable_materials_of_construction As String,  _
                    ByVal Eye_face_protection As String,  _
                    ByVal Skin_protection As String,  _
                    ByVal Respiratory_protection As String,  _
                    ByVal Engineering_controls As String,  _
                    ByVal General_hygiene_considerations As String,  _
                    ByVal Chemical_stability As String,  _
                    ByVal Hazardous_polymerization As String,  _
                    ByVal Conditions_to_avoid As String,  _
                    ByVal Incompatibilities As String,  _
                    ByVal Hazardous_decomposition_products As String,  _
                    ByVal Likely_routes_of_exposure As String,  _
                    ByVal Eye_contact As String,  _
                    ByVal Odor_threshold As String,  _
                    ByVal Skin_contact As String,  _
                    ByVal Ingestion As String,  _
                    ByVal Inhalation As String,  _
                    ByVal Reproductive_effects As String,  _
                    ByVal Teratogenicity As String,  _
                    ByVal Explosive_limits As String,  _
                    ByVal Mutagenicity As String,  _
                    ByVal Embryotoxicity As String,  _
                    ByVal Sensitization_to_product As String,  _
                    ByVal Synergistic_products As String,  _
                    ByVal Carcinogenicity As String,  _
                    ByVal Specific_gravity As String,  _
                    ByVal Chronic As String,  _
                    ByVal Persistence As String,  _
                    ByVal Bioaccumulative_potential As String,  _
                    ByVal Mobility As String,  _
                    ByVal Disposal As String,  _
                    ByVal Viscosity As String,  _
                    ByVal RCRA_status As String,  _
                    ByVal FA_Eye_Contact_code As Global.System.Nullable(Of Integer),  _
                    ByVal FA_skin_contact_code As Global.System.Nullable(Of Integer),  _
                    ByVal FA_inhalation_code As Global.System.Nullable(Of Integer),  _
                    ByVal FA_ingestion_code As Global.System.Nullable(Of Integer),  _
                    ByVal Note_to_hcp_code As Global.System.Nullable(Of Integer),  _
                    ByVal Suitable_extinguishing_media_code As Global.System.Nullable(Of Integer),  _
                    ByVal Unsuitable_extinguishing_media_code As Global.System.Nullable(Of Integer),  _
                    ByVal Precautions_for_firefighters_code As Global.System.Nullable(Of Integer),  _
                    ByVal Specific_hazards_code As Global.System.Nullable(Of Integer),  _
                    ByVal Hazardous_combustion_products_code As Global.System.Nullable(Of Integer),  _
                    ByVal Personal_precautions_code As Global.System.Nullable(Of Integer),  _
                    ByVal Small_spills_code As Global.System.Nullable(Of Integer),  _
                    ByVal Large_spills_code As Global.System.Nullable(Of Integer),  _
                    ByVal Advice_on_safe_handling_code As Global.System.Nullable(Of Integer),  _
                    ByVal Storage_conditions_code As Global.System.Nullable(Of Integer),  _
                    ByVal Suitable_materials_of_construction_code As Global.System.Nullable(Of Integer),  _
                    ByVal Unsuitable_materials_of_construction_code As Global.System.Nullable(Of Integer),  _
                    ByVal Eye_face_protection_code As Global.System.Nullable(Of Integer),  _
                    ByVal Skin_protection_code As Global.System.Nullable(Of Integer),  _
                    ByVal Respiratory_protection_code As Global.System.Nullable(Of Integer),  _
                    ByVal Engineering_controls_code As Global.System.Nullable(Of Integer),  _
                    ByVal General_hygiene_considerations_code As Global.System.Nullable(Of Integer),  _
                    ByVal Chemical_stability_code As Global.System.Nullable(Of Integer),  _
                    ByVal Hazardous_polymerization_code As Global.System.Nullable(Of Integer),  _
                    ByVal Conditions_to_avoid_code As Global.System.Nullable(Of Integer),  _
                    ByVal Incompatibilities_code As Global.System.Nullable(Of Integer),  _
                    ByVal Hazardous_decomposition_products_code As Global.System.Nullable(Of Integer),  _
                    ByVal Likely_routes_of_exposure_code As Global.System.Nullable(Of Integer),  _
                    ByVal Skin_contact_code As Global.System.Nullable(Of Integer),  _
                    ByVal Ingestion_code As Global.System.Nullable(Of Integer),  _
                    ByVal Inhalation_code As Global.System.Nullable(Of Integer),  _
                    ByVal Reproductive_effects_code As Global.System.Nullable(Of Integer),  _
                    ByVal Teratogenicity_code As Global.System.Nullable(Of Integer),  _
                    ByVal Mutagenicity_code As Global.System.Nullable(Of Integer),  _
                    ByVal Embryotoxicity_code As Global.System.Nullable(Of Integer),  _
                    ByVal Sensitization_to_product_code As Global.System.Nullable(Of Integer),  _
                    ByVal Synergistic_products_code As Global.System.Nullable(Of Integer),  _
                    ByVal Carcinogenicity_code As Global.System.Nullable(Of Integer),  _
                    ByVal Chronic_code As Global.System.Nullable(Of Integer),  _
                    ByVal Persistence_code As Global.System.Nullable(Of Integer),  _
                    ByVal Bioaccumulative_potential_code As Global.System.Nullable(Of Integer),  _
                    ByVal Mobility_code As Global.System.Nullable(Of Integer),  _
                    ByVal Disposal_code As Global.System.Nullable(Of Integer),  _
                    ByVal RCRA_status_code As Global.System.Nullable(Of Integer),  _
                    ByVal Eye_contact_code As Global.System.Nullable(Of Integer),  _
                    ByVal TSCA_code As Global.System.Nullable(Of Integer)) As Integer
            If (Preset Is Nothing) Then
                Throw New Global.System.ArgumentNullException("Preset")
            Else
                Me.Adapter.InsertCommand.Parameters(0).Value = CType(Preset,String)
            End If
            If (Hazard_classification Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(1).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(1).Value = CType(Hazard_classification,String)
            End If
            If (Signal_word Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(2).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(2).Value = CType(Signal_word,String)
            End If
            If (Hazard_statement Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(3).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(3).Value = CType(Hazard_statement,String)
            End If
            If (Pict1 Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(4).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(4).Value = CType(Pict1,String)
            End If
            If (Pict2 Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(5).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(5).Value = CType(Pict2,String)
            End If
            If (Pict3 Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(6).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(6).Value = CType(Pict3,String)
            End If
            If (Pict4 Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(7).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(7).Value = CType(Pict4,String)
            End If
            If (Pre_prevention Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(8).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(8).Value = CType(Pre_prevention,String)
            End If
            If (Pre_response Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(9).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(9).Value = CType(Pre_response,String)
            End If
            If (Pre_storage Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(10).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(10).Value = CType(Pre_storage,String)
            End If
            If (Pre_disposal Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(11).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(11).Value = CType(Pre_disposal,String)
            End If
            If (Component Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(12).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(12).Value = CType(Component,String)
            End If
            If (FA_eye_contact Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(13).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(13).Value = CType(FA_eye_contact,String)
            End If
            If (FA_skin_contact Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(14).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(14).Value = CType(FA_skin_contact,String)
            End If
            If (FA_ingestion Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(15).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(15).Value = CType(FA_ingestion,String)
            End If
            If (FA_inhalation Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(16).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(16).Value = CType(FA_inhalation,String)
            End If
            If (Note_to_HCP Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(17).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(17).Value = CType(Note_to_HCP,String)
            End If
            If (Suitable_extinguishing_media Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(18).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(18).Value = CType(Suitable_extinguishing_media,String)
            End If
            If (Unsuitable_extinguishing_media Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(19).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(19).Value = CType(Unsuitable_extinguishing_media,String)
            End If
            If (Precautions_for_firefighters Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(20).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(20).Value = CType(Precautions_for_firefighters,String)
            End If
            If (Specific_hazards Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(21).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(21).Value = CType(Specific_hazards,String)
            End If
            If (Hazardous_combustion_products Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(22).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(22).Value = CType(Hazardous_combustion_products,String)
            End If
            If (Personal_precautions Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(23).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(23).Value = CType(Personal_precautions,String)
            End If
            If (Small_spills Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(24).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(24).Value = CType(Small_spills,String)
            End If
            If (Large_spills Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(25).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(25).Value = CType(Large_spills,String)
            End If
            If (Advice_on_safe_handling Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(26).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(26).Value = CType(Advice_on_safe_handling,String)
            End If
            If (Storage_conditions Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(27).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(27).Value = CType(Storage_conditions,String)
            End If
            If (Suitable_materials_of_construction Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(28).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(28).Value = CType(Suitable_materials_of_construction,String)
            End If
            If (Unsuitable_materials_of_construction Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(29).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(29).Value = CType(Unsuitable_materials_of_construction,String)
            End If
            If (Eye_face_protection Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(30).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(30).Value = CType(Eye_face_protection,String)
            End If
            If (Skin_protection Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(31).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(31).Value = CType(Skin_protection,String)
            End If
            If (Respiratory_protection Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(32).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(32).Value = CType(Respiratory_protection,String)
            End If
            If (Engineering_controls Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(33).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(33).Value = CType(Engineering_controls,String)
            End If
            If (General_hygiene_considerations Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(34).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(34).Value = CType(General_hygiene_considerations,String)
            End If
            If (Chemical_stability Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(35).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(35).Value = CType(Chemical_stability,String)
            End If
            If (Hazardous_polymerization Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(36).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(36).Value = CType(Hazardous_polymerization,String)
            End If
            If (Conditions_to_avoid Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(37).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(37).Value = CType(Conditions_to_avoid,String)
            End If
            If (Incompatibilities Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(38).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(38).Value = CType(Incompatibilities,String)
            End If
            If (Hazardous_decomposition_products Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(39).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(39).Value = CType(Hazardous_decomposition_products,String)
            End If
            If (Likely_routes_of_exposure Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(40).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(40).Value = CType(Likely_routes_of_exposure,String)
            End If
            If (Eye_contact Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(41).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(41).Value = CType(Eye_contact,String)
            End If
            If (Odor_threshold Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(42).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(42).Value = CType(Odor_threshold,String)
            End If
            If (Skin_contact Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(43).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(43).Value = CType(Skin_contact,String)
            End If
            If (Ingestion Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(44).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(44).Value = CType(Ingestion,String)
            End If
            If (Inhalation Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(45).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(45).Value = CType(Inhalation,String)
            End If
            If (Reproductive_effects Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(46).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(46).Value = CType(Reproductive_effects,String)
            End If
            If (Teratogenicity Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(47).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(47).Value = CType(Teratogenicity,String)
            End If
            If (Explosive_limits Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(48).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(48).Value = CType(Explosive_limits,String)
            End If
            If (Mutagenicity Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(49).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(49).Value = CType(Mutagenicity,String)
            End If
            If (Embryotoxicity Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(50).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(50).Value = CType(Embryotoxicity,String)
            End If
            If (Sensitization_to_product Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(51).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(51).Value = CType(Sensitization_to_product,String)
            End If
            If (Synergistic_products Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(52).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(52).Value = CType(Synergistic_products,String)
            End If
            If (Carcinogenicity Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(53).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(53).Value = CType(Carcinogenicity,String)
            End If
            If (Specific_gravity Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(54).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(54).Value = CType(Specific_gravity,String)
            End If
            If (Chronic Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(55).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(55).Value = CType(Chronic,String)
            End If
            If (Persistence Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(56).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(56).Value = CType(Persistence,String)
            End If
            If (Bioaccumulative_potential Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(57).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(57).Value = CType(Bioaccumulative_potential,String)
            End If
            If (Mobility Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(58).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(58).Value = CType(Mobility,String)
            End If
            If (Disposal Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(59).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(59).Value = CType(Disposal,String)
            End If
            If (Viscosity Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(60).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(60).Value = CType(Viscosity,String)
            End If
            If (RCRA_status Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(61).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(61).Value = CType(RCRA_status,String)
            End If
            If (FA_Eye_Contact_code.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(62).Value = CType(FA_Eye_Contact_code.Value,Integer)
            Else
                Me.Adapter.InsertCommand.Parameters(62).Value = Global.System.DBNull.Value
            End If
            If (FA_skin_contact_code.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(63).Value = CType(FA_skin_contact_code.Value,Integer)
            Else
                Me.Adapter.InsertCommand.Parameters(63).Value = Global.System.DBNull.Value
            End If
            If (FA_inhalation_code.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(64).Value = CType(FA_inhalation_code.Value,Integer)
            Else
                Me.Adapter.InsertCommand.Parameters(64).Value = Global.System.DBNull.Value
            End If
            If (FA_ingestion_code.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(65).Value = CType(FA_ingestion_code.Value,Integer)
            Else
                Me.Adapter.InsertCommand.Parameters(65).Value = Global.System.DBNull.Value
            End If
            If (Note_to_hcp_code.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(66).Value = CType(Note_to_hcp_code.Value,Integer)
            Else
                Me.Adapter.InsertCommand.Parameters(66).Value = Global.System.DBNull.Value
            End If
            If (Suitable_extinguishing_media_code.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(67).Value = CType(Suitable_extinguishing_media_code.Value,Integer)
            Else
                Me.Adapter.InsertCommand.Parameters(67).Value = Global.System.DBNull.Value
            End If
            If (Unsuitable_extinguishing_media_code.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(68).Value = CType(Unsuitable_extinguishing_media_code.Value,Integer)
            Else
                Me.Adapter.InsertCommand.Parameters(68).Value = Global.System.DBNull.Value
            End If
            If (Precautions_for_firefighters_code.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(69).Value = CType(Precautions_for_firefighters_code.Value,Integer)
            Else
                Me.Adapter.InsertCommand.Parameters(69).Value = Global.System.DBNull.Value
            End If
            If (Specific_hazards_code.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(70).Value = CType(Specific_hazards_code.Value,Integer)
            Else
                Me.Adapter.InsertCommand.Parameters(70).Value = Global.System.DBNull.Value
            End If
            If (Hazardous_combustion_products_code.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(71).Value = CType(Hazardous_combustion_products_code.Value,Integer)
            Else
                Me.Adapter.InsertCommand.Parameters(71).Value = Global.System.DBNull.Value
            End If
            If (Personal_precautions_code.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(72).Value = CType(Personal_precautions_code.Value,Integer)
            Else
                Me.Adapter.InsertCommand.Parameters(72).Value = Global.System.DBNull.Value
            End If
            If (Small_spills_code.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(73).Value = CType(Small_spills_code.Value,Integer)
            Else
                Me.Adapter.InsertCommand.Parameters(73).Value = Global.System.DBNull.Value
            End If
            If (Large_spills_code.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(74).Value = CType(Large_spills_code.Value,Integer)
            Else
                Me.Adapter.InsertCommand.Parameters(74).Value = Global.System.DBNull.Value
            End If
            If (Advice_on_safe_handling_code.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(75).Value = CType(Advice_on_safe_handling_code.Value,Integer)
            Else
                Me.Adapter.InsertCommand.Parameters(75).Value = Global.System.DBNull.Value
            End If
            If (Storage_conditions_code.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(76).Value = CType(Storage_conditions_code.Value,Integer)
            Else
                Me.Adapter.InsertCommand.Parameters(76).Value = Global.System.DBNull.Value
            End If
            If (Suitable_materials_of_construction_code.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(77).Value = CType(Suitable_materials_of_construction_code.Value,Integer)
            Else
                Me.Adapter.InsertCommand.Parameters(77).Value = Global.System.DBNull.Value
            End If
            If (Unsuitable_materials_of_construction_code.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(78).Value = CType(Unsuitable_materials_of_construction_code.Value,Integer)
            Else
                Me.Adapter.InsertCommand.Parameters(78).Value = Global.System.DBNull.Value
            End If
            If (Eye_face_protection_code.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(79).Value = CType(Eye_face_protection_code.Value,Integer)
            Else
                Me.Adapter.InsertCommand.Parameters(79).Value = Global.System.DBNull.Value
            End If
            If (Skin_protection_code.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(80).Value = CType(Skin_protection_code.Value,Integer)
            Else
                Me.Adapter.InsertCommand.Parameters(80).Value = Global.System.DBNull.Value
            End If
            If (Respiratory_protection_code.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(81).Value = CType(Respiratory_protection_code.Value,Integer)
            Else
                Me.Adapter.InsertCommand.Parameters(81).Value = Global.System.DBNull.Value
            End If
            If (Engineering_controls_code.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(82).Value = CType(Engineering_controls_code.Value,Integer)
            Else
                Me.Adapter.InsertCommand.Parameters(82).Value = Global.System.DBNull.Value
            End If
            If (General_hygiene_considerations_code.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(83).Value = CType(General_hygiene_considerations_code.Value,Integer)
            Else
                Me.Adapter.InsertCommand.Parameters(83).Value = Global.System.DBNull.Value
            End If
            If (Chemical_stability_code.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(84).Value = CType(Chemical_stability_code.Value,Integer)
            Else
                Me.Adapter.InsertCommand.Parameters(84).Value = Global.System.DBNull.Value
            End If
            If (Hazardous_polymerization_code.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(85).Value = CType(Hazardous_polymerization_code.Value,Integer)
            Else
                Me.Adapter.InsertCommand.Parameters(85).Value = Global.System.DBNull.Value
            End If
            If (Conditions_to_avoid_code.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(86).Value = CType(Conditions_to_avoid_code.Value,Integer)
            Else
                Me.Adapter.InsertCommand.Parameters(86).Value = Global.System.DBNull.Value
            End If
            If (Incompatibilities_code.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(87).Value = CType(Incompatibilities_code.Value,Integer)
            Else
                Me.Adapter.InsertCommand.Parameters(87).Value = Global.System.DBNull.Value
            End If
            If (Hazardous_decomposition_products_code.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(88).Value = CType(Hazardous_decomposition_products_code.Value,Integer)
            Else
                Me.Adapter.InsertCommand.Parameters(88).Value = Global.System.DBNull.Value
            End If
            If (Likely_routes_of_exposure_code.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(89).Value = CType(Likely_routes_of_exposure_code.Value,Integer)
            Else
                Me.Adapter.InsertCommand.Parameters(89).Value = Global.System.DBNull.Value
            End If
            If (Skin_contact_code.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(90).Value = CType(Skin_contact_code.Value,Integer)
            Else
                Me.Adapter.InsertCommand.Parameters(90).Value = Global.System.DBNull.Value
            End If
            If (Ingestion_code.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(91).Value = CType(Ingestion_code.Value,Integer)
            Else
                Me.Adapter.InsertCommand.Parameters(91).Value = Global.System.DBNull.Value
            End If
            If (Inhalation_code.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(92).Value = CType(Inhalation_code.Value,Integer)
            Else
                Me.Adapter.InsertCommand.Parameters(92).Value = Global.System.DBNull.Value
            End If
            If (Reproductive_effects_code.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(93).Value = CType(Reproductive_effects_code.Value,Integer)
            Else
                Me.Adapter.InsertCommand.Parameters(93).Value = Global.System.DBNull.Value
            End If
            If (Teratogenicity_code.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(94).Value = CType(Teratogenicity_code.Value,Integer)
            Else
                Me.Adapter.InsertCommand.Parameters(94).Value = Global.System.DBNull.Value
            End If
            If (Mutagenicity_code.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(95).Value = CType(Mutagenicity_code.Value,Integer)
            Else
                Me.Adapter.InsertCommand.Parameters(95).Value = Global.System.DBNull.Value
            End If
            If (Embryotoxicity_code.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(96).Value = CType(Embryotoxicity_code.Value,Integer)
            Else
                Me.Adapter.InsertCommand.Parameters(96).Value = Global.System.DBNull.Value
            End If
            If (Sensitization_to_product_code.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(97).Value = CType(Sensitization_to_product_code.Value,Integer)
            Else
                Me.Adapter.InsertCommand.Parameters(97).Value = Global.System.DBNull.Value
            End If
            If (Synergistic_products_code.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(98).Value = CType(Synergistic_products_code.Value,Integer)
            Else
                Me.Adapter.InsertCommand.Parameters(98).Value = Global.System.DBNull.Value
            End If
            If (Carcinogenicity_code.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(99).Value = CType(Carcinogenicity_code.Value,Integer)
            Else
                Me.Adapter.InsertCommand.Parameters(99).Value = Global.System.DBNull.Value
            End If
            If (Chronic_code.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(100).Value = CType(Chronic_code.Value,Integer)
            Else
                Me.Adapter.InsertCommand.Parameters(100).Value = Global.System.DBNull.Value
            End If
            If (Persistence_code.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(101).Value = CType(Persistence_code.Value,Integer)
            Else
                Me.Adapter.InsertCommand.Parameters(101).Value = Global.System.DBNull.Value
            End If
            If (Bioaccumulative_potential_code.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(102).Value = CType(Bioaccumulative_potential_code.Value,Integer)
            Else
                Me.Adapter.InsertCommand.Parameters(102).Value = Global.System.DBNull.Value
            End If
            If (Mobility_code.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(103).Value = CType(Mobility_code.Value,Integer)
            Else
                Me.Adapter.InsertCommand.Parameters(103).Value = Global.System.DBNull.Value
            End If
            If (Disposal_code.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(104).Value = CType(Disposal_code.Value,Integer)
            Else
                Me.Adapter.InsertCommand.Parameters(104).Value = Global.System.DBNull.Value
            End If
            If (RCRA_status_code.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(105).Value = CType(RCRA_status_code.Value,Integer)
            Else
                Me.Adapter.InsertCommand.Parameters(105).Value = Global.System.DBNull.Value
            End If
            If (Eye_contact_code.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(106).Value = CType(Eye_contact_code.Value,Integer)
            Else
                Me.Adapter.InsertCommand.Parameters(106).Value = Global.System.DBNull.Value
            End If
            If (TSCA_code.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(107).Value = CType(TSCA_code.Value,Integer)
            Else
                Me.Adapter.InsertCommand.Parameters(107).Value = Global.System.DBNull.Value
            End If
            Dim previousConnectionState As Global.System.Data.ConnectionState = Me.Adapter.InsertCommand.Connection.State
            If ((Me.Adapter.InsertCommand.Connection.State And Global.System.Data.ConnectionState.Open)  _
                        <> Global.System.Data.ConnectionState.Open) Then
                Me.Adapter.InsertCommand.Connection.Open
            End If
            Try 
                Dim returnValue As Integer = Me.Adapter.InsertCommand.ExecuteNonQuery
                Return returnValue
            Finally
                If (previousConnectionState = Global.System.Data.ConnectionState.Closed) Then
                    Me.Adapter.InsertCommand.Connection.Close
                End If
            End Try
        End Function
    End Class
    
    '''<summary>
    '''Represents the connection and commands used to retrieve and save data.
    '''</summary>
    <Global.System.ComponentModel.DesignerCategoryAttribute("code"),  _
     Global.System.ComponentModel.ToolboxItem(true),  _
     Global.System.ComponentModel.DataObjectAttribute(true),  _
     Global.System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner"& _ 
        ", Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a"),  _
     Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
    Partial Public Class Hazard_LexiconTableAdapter
        Inherits Global.System.ComponentModel.Component
        
        Private WithEvents _adapter As Global.System.Data.OleDb.OleDbDataAdapter
        
        Private _connection As Global.System.Data.OleDb.OleDbConnection
        
        Private _transaction As Global.System.Data.OleDb.OleDbTransaction
        
        Private _commandCollection() As Global.System.Data.OleDb.OleDbCommand
        
        Private _clearBeforeFill As Boolean
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub New()
            MyBase.New
            Me.ClearBeforeFill = true
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Friend ReadOnly Property Adapter() As Global.System.Data.OleDb.OleDbDataAdapter
            Get
                If (Me._adapter Is Nothing) Then
                    Me.InitAdapter
                End If
                Return Me._adapter
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Property Connection() As Global.System.Data.OleDb.OleDbConnection
            Get
                If (Me._connection Is Nothing) Then
                    Me.InitConnection
                End If
                Return Me._connection
            End Get
            Set
                Me._connection = value
                If (Not (Me.Adapter.InsertCommand) Is Nothing) Then
                    Me.Adapter.InsertCommand.Connection = value
                End If
                If (Not (Me.Adapter.DeleteCommand) Is Nothing) Then
                    Me.Adapter.DeleteCommand.Connection = value
                End If
                If (Not (Me.Adapter.UpdateCommand) Is Nothing) Then
                    Me.Adapter.UpdateCommand.Connection = value
                End If
                Dim i As Integer = 0
                Do While (i < Me.CommandCollection.Length)
                    If (Not (Me.CommandCollection(i)) Is Nothing) Then
                        CType(Me.CommandCollection(i),Global.System.Data.OleDb.OleDbCommand).Connection = value
                    End If
                    i = (i + 1)
                Loop
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Property Transaction() As Global.System.Data.OleDb.OleDbTransaction
            Get
                Return Me._transaction
            End Get
            Set
                Me._transaction = value
                Dim i As Integer = 0
                Do While (i < Me.CommandCollection.Length)
                    Me.CommandCollection(i).Transaction = Me._transaction
                    i = (i + 1)
                Loop
                If ((Not (Me.Adapter) Is Nothing)  _
                            AndAlso (Not (Me.Adapter.DeleteCommand) Is Nothing)) Then
                    Me.Adapter.DeleteCommand.Transaction = Me._transaction
                End If
                If ((Not (Me.Adapter) Is Nothing)  _
                            AndAlso (Not (Me.Adapter.InsertCommand) Is Nothing)) Then
                    Me.Adapter.InsertCommand.Transaction = Me._transaction
                End If
                If ((Not (Me.Adapter) Is Nothing)  _
                            AndAlso (Not (Me.Adapter.UpdateCommand) Is Nothing)) Then
                    Me.Adapter.UpdateCommand.Transaction = Me._transaction
                End If
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected ReadOnly Property CommandCollection() As Global.System.Data.OleDb.OleDbCommand()
            Get
                If (Me._commandCollection Is Nothing) Then
                    Me.InitCommandCollection
                End If
                Return Me._commandCollection
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property ClearBeforeFill() As Boolean
            Get
                Return Me._clearBeforeFill
            End Get
            Set
                Me._clearBeforeFill = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Private Sub InitAdapter()
            Me._adapter = New Global.System.Data.OleDb.OleDbDataAdapter()
            Dim tableMapping As Global.System.Data.Common.DataTableMapping = New Global.System.Data.Common.DataTableMapping()
            tableMapping.SourceTable = "Table"
            tableMapping.DataSetTable = "Hazard Lexicon"
            tableMapping.ColumnMappings.Add("ID", "ID")
            tableMapping.ColumnMappings.Add("Hazard_class", "Hazard_class")
            tableMapping.ColumnMappings.Add("TypeCrypt", "TypeCrypt")
            tableMapping.ColumnMappings.Add("ClassCrypt", "ClassCrypt")
            tableMapping.ColumnMappings.Add("CategoryCrypt", "CategoryCrypt")
            tableMapping.ColumnMappings.Add("Hazard_category", "Hazard_category")
            tableMapping.ColumnMappings.Add("Sort", "Sort")
            tableMapping.ColumnMappings.Add("Hazard_code", "Hazard_code")
            tableMapping.ColumnMappings.Add("Hazard_statement", "Hazard_statement")
            tableMapping.ColumnMappings.Add("Hazard_type", "Hazard_type")
            tableMapping.ColumnMappings.Add("Signal_word", "Signal_word")
            tableMapping.ColumnMappings.Add("Symbol", "Symbol")
            tableMapping.ColumnMappings.Add("PCodes", "PCodes")
            tableMapping.ColumnMappings.Add("Haz—Cat", "Haz—Cat")
            tableMapping.ColumnMappings.Add("Pstat", "Pstat")
            tableMapping.ColumnMappings.Add("Hazard_classification", "Hazard_classification")
            tableMapping.ColumnMappings.Add("Haz_listbox", "Haz_listbox")
            Me._adapter.TableMappings.Add(tableMapping)
            Me._adapter.DeleteCommand = New Global.System.Data.OleDb.OleDbCommand()
            Me._adapter.DeleteCommand.Connection = Me.Connection
            Me._adapter.DeleteCommand.CommandText = "DELETE FROM `Hazard Lexicon` WHERE ((`ID` = ?) AND ((? = 1 AND `Hazard_class` IS "& _ 
                "NULL) OR (`Hazard_class` = ?)) AND ((? = 1 AND `TypeCrypt` IS NULL) OR (`TypeCry"& _ 
                "pt` = ?)) AND ((? = 1 AND `ClassCrypt` IS NULL) OR (`ClassCrypt` = ?)) AND ((? ="& _ 
                " 1 AND `CategoryCrypt` IS NULL) OR (`CategoryCrypt` = ?)) AND ((? = 1 AND `Hazar"& _ 
                "d_category` IS NULL) OR (`Hazard_category` = ?)) AND ((? = 1 AND `Sort` IS NULL)"& _ 
                " OR (`Sort` = ?)) AND ((? = 1 AND `Hazard_code` IS NULL) OR (`Hazard_code` = ?))"& _ 
                " AND ((? = 1 AND `Hazard_statement` IS NULL) OR (`Hazard_statement` = ?)) AND (("& _ 
                "? = 1 AND `Hazard_type` IS NULL) OR (`Hazard_type` = ?)) AND ((? = 1 AND `Signal"& _ 
                "_word` IS NULL) OR (`Signal_word` = ?)) AND ((? = 1 AND `Symbol` IS NULL) OR (`S"& _ 
                "ymbol` = ?)) AND ((? = 1 AND `Haz—Cat` IS NULL) OR (`Haz—Cat` = ?)) AND ((? = 1 "& _ 
                "AND `Hazard_classification` IS NULL) OR (`Hazard_classification` = ?)) AND ((? ="& _ 
                " 1 AND `Haz_listbox` IS NULL) OR (`Haz_listbox` = ?)))"
            Me._adapter.DeleteCommand.CommandType = Global.System.Data.CommandType.Text
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("Original_ID", Global.System.Data.OleDb.OleDbType.[Integer], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "ID", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("IsNull_Hazard_class", Global.System.Data.OleDb.OleDbType.[Integer], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "Hazard_class", Global.System.Data.DataRowVersion.Original, true, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("Original_Hazard_class", Global.System.Data.OleDb.OleDbType.VarWChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "Hazard_class", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("IsNull_TypeCrypt", Global.System.Data.OleDb.OleDbType.[Integer], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "TypeCrypt", Global.System.Data.DataRowVersion.Original, true, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("Original_TypeCrypt", Global.System.Data.OleDb.OleDbType.[Integer], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "TypeCrypt", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("IsNull_ClassCrypt", Global.System.Data.OleDb.OleDbType.[Integer], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "ClassCrypt", Global.System.Data.DataRowVersion.Original, true, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("Original_ClassCrypt", Global.System.Data.OleDb.OleDbType.[Integer], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "ClassCrypt", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("IsNull_CategoryCrypt", Global.System.Data.OleDb.OleDbType.[Integer], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "CategoryCrypt", Global.System.Data.DataRowVersion.Original, true, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("Original_CategoryCrypt", Global.System.Data.OleDb.OleDbType.[Integer], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "CategoryCrypt", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("IsNull_Hazard_category", Global.System.Data.OleDb.OleDbType.[Integer], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "Hazard_category", Global.System.Data.DataRowVersion.Original, true, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("Original_Hazard_category", Global.System.Data.OleDb.OleDbType.VarWChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "Hazard_category", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("IsNull_Sort", Global.System.Data.OleDb.OleDbType.[Integer], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "Sort", Global.System.Data.DataRowVersion.Original, true, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("Original_Sort", Global.System.Data.OleDb.OleDbType.[Integer], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "Sort", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("IsNull_Hazard_code", Global.System.Data.OleDb.OleDbType.[Integer], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "Hazard_code", Global.System.Data.DataRowVersion.Original, true, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("Original_Hazard_code", Global.System.Data.OleDb.OleDbType.VarWChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "Hazard_code", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("IsNull_Hazard_statement", Global.System.Data.OleDb.OleDbType.[Integer], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "Hazard_statement", Global.System.Data.DataRowVersion.Original, true, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("Original_Hazard_statement", Global.System.Data.OleDb.OleDbType.VarWChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "Hazard_statement", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("IsNull_Hazard_type", Global.System.Data.OleDb.OleDbType.[Integer], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "Hazard_type", Global.System.Data.DataRowVersion.Original, true, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("Original_Hazard_type", Global.System.Data.OleDb.OleDbType.VarWChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "Hazard_type", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("IsNull_Signal_word", Global.System.Data.OleDb.OleDbType.[Integer], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "Signal_word", Global.System.Data.DataRowVersion.Original, true, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("Original_Signal_word", Global.System.Data.OleDb.OleDbType.VarWChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "Signal_word", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("IsNull_Symbol", Global.System.Data.OleDb.OleDbType.[Integer], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "Symbol", Global.System.Data.DataRowVersion.Original, true, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("Original_Symbol", Global.System.Data.OleDb.OleDbType.VarWChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "Symbol", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("IsNull_Haz—Cat", Global.System.Data.OleDb.OleDbType.[Integer], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "Haz—Cat", Global.System.Data.DataRowVersion.Original, true, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("Original_Haz—Cat", Global.System.Data.OleDb.OleDbType.VarWChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "Haz—Cat", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("IsNull_Hazard_classification", Global.System.Data.OleDb.OleDbType.[Integer], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "Hazard_classification", Global.System.Data.DataRowVersion.Original, true, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("Original_Hazard_classification", Global.System.Data.OleDb.OleDbType.VarWChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "Hazard_classification", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("IsNull_Haz_listbox", Global.System.Data.OleDb.OleDbType.[Integer], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "Haz_listbox", Global.System.Data.DataRowVersion.Original, true, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("Original_Haz_listbox", Global.System.Data.OleDb.OleDbType.VarWChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "Haz_listbox", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.InsertCommand = New Global.System.Data.OleDb.OleDbCommand()
            Me._adapter.InsertCommand.Connection = Me.Connection
            Me._adapter.InsertCommand.CommandText = "INSERT INTO `Hazard Lexicon` (`ID`, `Hazard_class`, `TypeCrypt`, `ClassCrypt`, `C"& _ 
                "ategoryCrypt`, `Hazard_category`, `Sort`, `Hazard_code`, `Hazard_statement`, `Ha"& _ 
                "zard_type`, `Signal_word`, `Symbol`, `PCodes`, `Haz—Cat`, `Pstat`, `Hazard_class"& _ 
                "ification`, `Haz_listbox`) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, "& _ 
                "?, ?)"
            Me._adapter.InsertCommand.CommandType = Global.System.Data.CommandType.Text
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("ID", Global.System.Data.OleDb.OleDbType.[Integer], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "ID", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("Hazard_class", Global.System.Data.OleDb.OleDbType.VarWChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "Hazard_class", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("TypeCrypt", Global.System.Data.OleDb.OleDbType.[Integer], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "TypeCrypt", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("ClassCrypt", Global.System.Data.OleDb.OleDbType.[Integer], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "ClassCrypt", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("CategoryCrypt", Global.System.Data.OleDb.OleDbType.[Integer], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "CategoryCrypt", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("Hazard_category", Global.System.Data.OleDb.OleDbType.VarWChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "Hazard_category", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("Sort", Global.System.Data.OleDb.OleDbType.[Integer], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "Sort", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("Hazard_code", Global.System.Data.OleDb.OleDbType.VarWChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "Hazard_code", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("Hazard_statement", Global.System.Data.OleDb.OleDbType.VarWChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "Hazard_statement", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("Hazard_type", Global.System.Data.OleDb.OleDbType.VarWChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "Hazard_type", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("Signal_word", Global.System.Data.OleDb.OleDbType.VarWChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "Signal_word", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("Symbol", Global.System.Data.OleDb.OleDbType.VarWChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "Symbol", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("PCodes", Global.System.Data.OleDb.OleDbType.LongVarWChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "PCodes", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("Haz—Cat", Global.System.Data.OleDb.OleDbType.VarWChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "Haz—Cat", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("Pstat", Global.System.Data.OleDb.OleDbType.LongVarWChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "Pstat", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("Hazard_classification", Global.System.Data.OleDb.OleDbType.VarWChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "Hazard_classification", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("Haz_listbox", Global.System.Data.OleDb.OleDbType.VarWChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "Haz_listbox", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.UpdateCommand = New Global.System.Data.OleDb.OleDbCommand()
            Me._adapter.UpdateCommand.Connection = Me.Connection
            Me._adapter.UpdateCommand.CommandText = "UPDATE `Hazard Lexicon` SET `ID` = ?, `Hazard_class` = ?, `TypeCrypt` = ?, `Class"& _ 
                "Crypt` = ?, `CategoryCrypt` = ?, `Hazard_category` = ?, `Sort` = ?, `Hazard_code"& _ 
                "` = ?, `Hazard_statement` = ?, `Hazard_type` = ?, `Signal_word` = ?, `Symbol` = "& _ 
                "?, `PCodes` = ?, `Haz—Cat` = ?, `Pstat` = ?, `Hazard_classification` = ?, `Haz_l"& _ 
                "istbox` = ? WHERE ((`ID` = ?) AND ((? = 1 AND `Hazard_class` IS NULL) OR (`Hazar"& _ 
                "d_class` = ?)) AND ((? = 1 AND `TypeCrypt` IS NULL) OR (`TypeCrypt` = ?)) AND (("& _ 
                "? = 1 AND `ClassCrypt` IS NULL) OR (`ClassCrypt` = ?)) AND ((? = 1 AND `Category"& _ 
                "Crypt` IS NULL) OR (`CategoryCrypt` = ?)) AND ((? = 1 AND `Hazard_category` IS N"& _ 
                "ULL) OR (`Hazard_category` = ?)) AND ((? = 1 AND `Sort` IS NULL) OR (`Sort` = ?)"& _ 
                ") AND ((? = 1 AND `Hazard_code` IS NULL) OR (`Hazard_code` = ?)) AND ((? = 1 AND"& _ 
                " `Hazard_statement` IS NULL) OR (`Hazard_statement` = ?)) AND ((? = 1 AND `Hazar"& _ 
                "d_type` IS NULL) OR (`Hazard_type` = ?)) AND ((? = 1 AND `Signal_word` IS NULL) "& _ 
                "OR (`Signal_word` = ?)) AND ((? = 1 AND `Symbol` IS NULL) OR (`Symbol` = ?)) AND"& _ 
                " ((? = 1 AND `Haz—Cat` IS NULL) OR (`Haz—Cat` = ?)) AND ((? = 1 AND `Hazard_clas"& _ 
                "sification` IS NULL) OR (`Hazard_classification` = ?)) AND ((? = 1 AND `Haz_list"& _ 
                "box` IS NULL) OR (`Haz_listbox` = ?)))"
            Me._adapter.UpdateCommand.CommandType = Global.System.Data.CommandType.Text
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("ID", Global.System.Data.OleDb.OleDbType.[Integer], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "ID", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("Hazard_class", Global.System.Data.OleDb.OleDbType.VarWChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "Hazard_class", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("TypeCrypt", Global.System.Data.OleDb.OleDbType.[Integer], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "TypeCrypt", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("ClassCrypt", Global.System.Data.OleDb.OleDbType.[Integer], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "ClassCrypt", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("CategoryCrypt", Global.System.Data.OleDb.OleDbType.[Integer], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "CategoryCrypt", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("Hazard_category", Global.System.Data.OleDb.OleDbType.VarWChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "Hazard_category", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("Sort", Global.System.Data.OleDb.OleDbType.[Integer], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "Sort", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("Hazard_code", Global.System.Data.OleDb.OleDbType.VarWChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "Hazard_code", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("Hazard_statement", Global.System.Data.OleDb.OleDbType.VarWChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "Hazard_statement", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("Hazard_type", Global.System.Data.OleDb.OleDbType.VarWChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "Hazard_type", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("Signal_word", Global.System.Data.OleDb.OleDbType.VarWChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "Signal_word", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("Symbol", Global.System.Data.OleDb.OleDbType.VarWChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "Symbol", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("PCodes", Global.System.Data.OleDb.OleDbType.LongVarWChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "PCodes", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("Haz—Cat", Global.System.Data.OleDb.OleDbType.VarWChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "Haz—Cat", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("Pstat", Global.System.Data.OleDb.OleDbType.LongVarWChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "Pstat", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("Hazard_classification", Global.System.Data.OleDb.OleDbType.VarWChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "Hazard_classification", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("Haz_listbox", Global.System.Data.OleDb.OleDbType.VarWChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "Haz_listbox", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("Original_ID", Global.System.Data.OleDb.OleDbType.[Integer], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "ID", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("IsNull_Hazard_class", Global.System.Data.OleDb.OleDbType.[Integer], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "Hazard_class", Global.System.Data.DataRowVersion.Original, true, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("Original_Hazard_class", Global.System.Data.OleDb.OleDbType.VarWChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "Hazard_class", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("IsNull_TypeCrypt", Global.System.Data.OleDb.OleDbType.[Integer], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "TypeCrypt", Global.System.Data.DataRowVersion.Original, true, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("Original_TypeCrypt", Global.System.Data.OleDb.OleDbType.[Integer], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "TypeCrypt", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("IsNull_ClassCrypt", Global.System.Data.OleDb.OleDbType.[Integer], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "ClassCrypt", Global.System.Data.DataRowVersion.Original, true, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("Original_ClassCrypt", Global.System.Data.OleDb.OleDbType.[Integer], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "ClassCrypt", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("IsNull_CategoryCrypt", Global.System.Data.OleDb.OleDbType.[Integer], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "CategoryCrypt", Global.System.Data.DataRowVersion.Original, true, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("Original_CategoryCrypt", Global.System.Data.OleDb.OleDbType.[Integer], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "CategoryCrypt", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("IsNull_Hazard_category", Global.System.Data.OleDb.OleDbType.[Integer], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "Hazard_category", Global.System.Data.DataRowVersion.Original, true, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("Original_Hazard_category", Global.System.Data.OleDb.OleDbType.VarWChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "Hazard_category", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("IsNull_Sort", Global.System.Data.OleDb.OleDbType.[Integer], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "Sort", Global.System.Data.DataRowVersion.Original, true, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("Original_Sort", Global.System.Data.OleDb.OleDbType.[Integer], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "Sort", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("IsNull_Hazard_code", Global.System.Data.OleDb.OleDbType.[Integer], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "Hazard_code", Global.System.Data.DataRowVersion.Original, true, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("Original_Hazard_code", Global.System.Data.OleDb.OleDbType.VarWChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "Hazard_code", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("IsNull_Hazard_statement", Global.System.Data.OleDb.OleDbType.[Integer], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "Hazard_statement", Global.System.Data.DataRowVersion.Original, true, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("Original_Hazard_statement", Global.System.Data.OleDb.OleDbType.VarWChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "Hazard_statement", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("IsNull_Hazard_type", Global.System.Data.OleDb.OleDbType.[Integer], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "Hazard_type", Global.System.Data.DataRowVersion.Original, true, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("Original_Hazard_type", Global.System.Data.OleDb.OleDbType.VarWChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "Hazard_type", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("IsNull_Signal_word", Global.System.Data.OleDb.OleDbType.[Integer], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "Signal_word", Global.System.Data.DataRowVersion.Original, true, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("Original_Signal_word", Global.System.Data.OleDb.OleDbType.VarWChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "Signal_word", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("IsNull_Symbol", Global.System.Data.OleDb.OleDbType.[Integer], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "Symbol", Global.System.Data.DataRowVersion.Original, true, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("Original_Symbol", Global.System.Data.OleDb.OleDbType.VarWChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "Symbol", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("IsNull_Haz—Cat", Global.System.Data.OleDb.OleDbType.[Integer], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "Haz—Cat", Global.System.Data.DataRowVersion.Original, true, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("Original_Haz—Cat", Global.System.Data.OleDb.OleDbType.VarWChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "Haz—Cat", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("IsNull_Hazard_classification", Global.System.Data.OleDb.OleDbType.[Integer], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "Hazard_classification", Global.System.Data.DataRowVersion.Original, true, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("Original_Hazard_classification", Global.System.Data.OleDb.OleDbType.VarWChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "Hazard_classification", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("IsNull_Haz_listbox", Global.System.Data.OleDb.OleDbType.[Integer], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "Haz_listbox", Global.System.Data.DataRowVersion.Original, true, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("Original_Haz_listbox", Global.System.Data.OleDb.OleDbType.VarWChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "Haz_listbox", Global.System.Data.DataRowVersion.Original, false, Nothing))
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Private Sub InitConnection()
            Me._connection = New Global.System.Data.OleDb.OleDbConnection()
            Me._connection.ConnectionString = Global.Interfacer5.MySettings.Default.Dossier
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Private Sub InitCommandCollection()
            Me._commandCollection = New Global.System.Data.OleDb.OleDbCommand(1) {}
            Me._commandCollection(0) = New Global.System.Data.OleDb.OleDbCommand()
            Me._commandCollection(0).Connection = Me.Connection
            Me._commandCollection(0).CommandText = "SELECT ID, Hazard_class, TypeCrypt, ClassCrypt, CategoryCrypt, Hazard_category, S"& _ 
                "ort, Hazard_code, Hazard_statement, Hazard_type, Signal_word, Symbol, PCodes, [H"& _ 
                "az—Cat], Pstat, Hazard_classification, Haz_listbox FROM [Hazard Lexicon]"
            Me._commandCollection(0).CommandType = Global.System.Data.CommandType.Text
            Me._commandCollection(1) = New Global.System.Data.OleDb.OleDbCommand()
            Me._commandCollection(1).Connection = Me.Connection
            Me._commandCollection(1).CommandText = "SELECT        ID, Hazard_class, TypeCrypt, ClassCrypt, CategoryCrypt, Hazard_cate"& _ 
                "gory, Sort, Haz_listbox"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"FROM            `Hazard Lexicon`"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"WHERE        (TypeCry"& _ 
                "pt = ?)"
            Me._commandCollection(1).CommandType = Global.System.Data.CommandType.Text
            Me._commandCollection(1).Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("TypeCrypt", Global.System.Data.OleDb.OleDbType.[Integer], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "TypeCrypt", Global.System.Data.DataRowVersion.Current, false, Nothing))
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Fill, true)>  _
        Public Overloads Overridable Function Fill(ByVal dataTable As Dossier.Hazard_LexiconDataTable) As Integer
            Me.Adapter.SelectCommand = Me.CommandCollection(0)
            If (Me.ClearBeforeFill = true) Then
                dataTable.Clear
            End If
            Dim returnValue As Integer = Me.Adapter.Fill(dataTable)
            Return returnValue
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.[Select], true)>  _
        Public Overloads Overridable Function GetData() As Dossier.Hazard_LexiconDataTable
            Me.Adapter.SelectCommand = Me.CommandCollection(0)
            Dim dataTable As Dossier.Hazard_LexiconDataTable = New Dossier.Hazard_LexiconDataTable()
            Me.Adapter.Fill(dataTable)
            Return dataTable
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Fill, false)>  _
        Public Overloads Overridable Function FillListBoxEntries(ByVal dataTable As Dossier.Hazard_LexiconDataTable, ByVal TypeCrypt As Global.System.Nullable(Of Integer)) As Integer
            Me.Adapter.SelectCommand = Me.CommandCollection(1)
            If (TypeCrypt.HasValue = true) Then
                Me.Adapter.SelectCommand.Parameters(0).Value = CType(TypeCrypt.Value,Integer)
            Else
                Me.Adapter.SelectCommand.Parameters(0).Value = Global.System.DBNull.Value
            End If
            If (Me.ClearBeforeFill = true) Then
                dataTable.Clear
            End If
            Dim returnValue As Integer = Me.Adapter.Fill(dataTable)
            Return returnValue
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.[Select], false)>  _
        Public Overloads Overridable Function GetListBoxEntries(ByVal TypeCrypt As Global.System.Nullable(Of Integer)) As Dossier.Hazard_LexiconDataTable
            Me.Adapter.SelectCommand = Me.CommandCollection(1)
            If (TypeCrypt.HasValue = true) Then
                Me.Adapter.SelectCommand.Parameters(0).Value = CType(TypeCrypt.Value,Integer)
            Else
                Me.Adapter.SelectCommand.Parameters(0).Value = Global.System.DBNull.Value
            End If
            Dim dataTable As Dossier.Hazard_LexiconDataTable = New Dossier.Hazard_LexiconDataTable()
            Me.Adapter.Fill(dataTable)
            Return dataTable
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function Update(ByVal dataTable As Dossier.Hazard_LexiconDataTable) As Integer
            Return Me.Adapter.Update(dataTable)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function Update(ByVal dataSet As Dossier) As Integer
            Return Me.Adapter.Update(dataSet, "Hazard Lexicon")
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function Update(ByVal dataRow As Global.System.Data.DataRow) As Integer
            Return Me.Adapter.Update(New Global.System.Data.DataRow() {dataRow})
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function Update(ByVal dataRows() As Global.System.Data.DataRow) As Integer
            Return Me.Adapter.Update(dataRows)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Delete, true)>  _
        Public Overloads Overridable Function Delete(ByVal Original_ID As Integer, ByVal Original_Hazard_class As String, ByVal Original_TypeCrypt As Global.System.Nullable(Of Integer), ByVal Original_ClassCrypt As Global.System.Nullable(Of Integer), ByVal Original_CategoryCrypt As Global.System.Nullable(Of Integer), ByVal Original_Hazard_category As String, ByVal Original_Sort As Global.System.Nullable(Of Integer), ByVal Original_Hazard_code As String, ByVal Original_Hazard_statement As String, ByVal Original_Hazard_type As String, ByVal Original_Signal_word As String, ByVal Original_Symbol As String, ByVal _Original_Haz_Cat As String, ByVal Original_Hazard_classification As String, ByVal Original_Haz_listbox As String) As Integer
            Me.Adapter.DeleteCommand.Parameters(0).Value = CType(Original_ID,Integer)
            If (Original_Hazard_class Is Nothing) Then
                Me.Adapter.DeleteCommand.Parameters(1).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(2).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.DeleteCommand.Parameters(1).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(2).Value = CType(Original_Hazard_class,String)
            End If
            If (Original_TypeCrypt.HasValue = true) Then
                Me.Adapter.DeleteCommand.Parameters(3).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(4).Value = CType(Original_TypeCrypt.Value,Integer)
            Else
                Me.Adapter.DeleteCommand.Parameters(3).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(4).Value = Global.System.DBNull.Value
            End If
            If (Original_ClassCrypt.HasValue = true) Then
                Me.Adapter.DeleteCommand.Parameters(5).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(6).Value = CType(Original_ClassCrypt.Value,Integer)
            Else
                Me.Adapter.DeleteCommand.Parameters(5).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(6).Value = Global.System.DBNull.Value
            End If
            If (Original_CategoryCrypt.HasValue = true) Then
                Me.Adapter.DeleteCommand.Parameters(7).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(8).Value = CType(Original_CategoryCrypt.Value,Integer)
            Else
                Me.Adapter.DeleteCommand.Parameters(7).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(8).Value = Global.System.DBNull.Value
            End If
            If (Original_Hazard_category Is Nothing) Then
                Me.Adapter.DeleteCommand.Parameters(9).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(10).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.DeleteCommand.Parameters(9).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(10).Value = CType(Original_Hazard_category,String)
            End If
            If (Original_Sort.HasValue = true) Then
                Me.Adapter.DeleteCommand.Parameters(11).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(12).Value = CType(Original_Sort.Value,Integer)
            Else
                Me.Adapter.DeleteCommand.Parameters(11).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(12).Value = Global.System.DBNull.Value
            End If
            If (Original_Hazard_code Is Nothing) Then
                Me.Adapter.DeleteCommand.Parameters(13).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(14).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.DeleteCommand.Parameters(13).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(14).Value = CType(Original_Hazard_code,String)
            End If
            If (Original_Hazard_statement Is Nothing) Then
                Me.Adapter.DeleteCommand.Parameters(15).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(16).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.DeleteCommand.Parameters(15).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(16).Value = CType(Original_Hazard_statement,String)
            End If
            If (Original_Hazard_type Is Nothing) Then
                Me.Adapter.DeleteCommand.Parameters(17).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(18).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.DeleteCommand.Parameters(17).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(18).Value = CType(Original_Hazard_type,String)
            End If
            If (Original_Signal_word Is Nothing) Then
                Me.Adapter.DeleteCommand.Parameters(19).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(20).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.DeleteCommand.Parameters(19).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(20).Value = CType(Original_Signal_word,String)
            End If
            If (Original_Symbol Is Nothing) Then
                Me.Adapter.DeleteCommand.Parameters(21).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(22).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.DeleteCommand.Parameters(21).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(22).Value = CType(Original_Symbol,String)
            End If
            If (_Original_Haz_Cat Is Nothing) Then
                Me.Adapter.DeleteCommand.Parameters(23).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(24).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.DeleteCommand.Parameters(23).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(24).Value = CType(_Original_Haz_Cat,String)
            End If
            If (Original_Hazard_classification Is Nothing) Then
                Me.Adapter.DeleteCommand.Parameters(25).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(26).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.DeleteCommand.Parameters(25).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(26).Value = CType(Original_Hazard_classification,String)
            End If
            If (Original_Haz_listbox Is Nothing) Then
                Me.Adapter.DeleteCommand.Parameters(27).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(28).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.DeleteCommand.Parameters(27).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(28).Value = CType(Original_Haz_listbox,String)
            End If
            Dim previousConnectionState As Global.System.Data.ConnectionState = Me.Adapter.DeleteCommand.Connection.State
            If ((Me.Adapter.DeleteCommand.Connection.State And Global.System.Data.ConnectionState.Open)  _
                        <> Global.System.Data.ConnectionState.Open) Then
                Me.Adapter.DeleteCommand.Connection.Open
            End If
            Try 
                Dim returnValue As Integer = Me.Adapter.DeleteCommand.ExecuteNonQuery
                Return returnValue
            Finally
                If (previousConnectionState = Global.System.Data.ConnectionState.Closed) Then
                    Me.Adapter.DeleteCommand.Connection.Close
                End If
            End Try
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Insert, true)>  _
        Public Overloads Overridable Function Insert( _
                    ByVal ID As Integer,  _
                    ByVal Hazard_class As String,  _
                    ByVal TypeCrypt As Global.System.Nullable(Of Integer),  _
                    ByVal ClassCrypt As Global.System.Nullable(Of Integer),  _
                    ByVal CategoryCrypt As Global.System.Nullable(Of Integer),  _
                    ByVal Hazard_category As String,  _
                    ByVal Sort As Global.System.Nullable(Of Integer),  _
                    ByVal Hazard_code As String,  _
                    ByVal Hazard_statement As String,  _
                    ByVal Hazard_type As String,  _
                    ByVal Signal_word As String,  _
                    ByVal Symbol As String,  _
                    ByVal PCodes As String,  _
                    ByVal _Haz_Cat As String,  _
                    ByVal Pstat As String,  _
                    ByVal Hazard_classification As String,  _
                    ByVal Haz_listbox As String) As Integer
            Me.Adapter.InsertCommand.Parameters(0).Value = CType(ID,Integer)
            If (Hazard_class Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(1).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(1).Value = CType(Hazard_class,String)
            End If
            If (TypeCrypt.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(2).Value = CType(TypeCrypt.Value,Integer)
            Else
                Me.Adapter.InsertCommand.Parameters(2).Value = Global.System.DBNull.Value
            End If
            If (ClassCrypt.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(3).Value = CType(ClassCrypt.Value,Integer)
            Else
                Me.Adapter.InsertCommand.Parameters(3).Value = Global.System.DBNull.Value
            End If
            If (CategoryCrypt.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(4).Value = CType(CategoryCrypt.Value,Integer)
            Else
                Me.Adapter.InsertCommand.Parameters(4).Value = Global.System.DBNull.Value
            End If
            If (Hazard_category Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(5).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(5).Value = CType(Hazard_category,String)
            End If
            If (Sort.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(6).Value = CType(Sort.Value,Integer)
            Else
                Me.Adapter.InsertCommand.Parameters(6).Value = Global.System.DBNull.Value
            End If
            If (Hazard_code Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(7).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(7).Value = CType(Hazard_code,String)
            End If
            If (Hazard_statement Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(8).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(8).Value = CType(Hazard_statement,String)
            End If
            If (Hazard_type Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(9).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(9).Value = CType(Hazard_type,String)
            End If
            If (Signal_word Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(10).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(10).Value = CType(Signal_word,String)
            End If
            If (Symbol Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(11).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(11).Value = CType(Symbol,String)
            End If
            If (PCodes Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(12).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(12).Value = CType(PCodes,String)
            End If
            If (_Haz_Cat Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(13).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(13).Value = CType(_Haz_Cat,String)
            End If
            If (Pstat Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(14).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(14).Value = CType(Pstat,String)
            End If
            If (Hazard_classification Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(15).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(15).Value = CType(Hazard_classification,String)
            End If
            If (Haz_listbox Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(16).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(16).Value = CType(Haz_listbox,String)
            End If
            Dim previousConnectionState As Global.System.Data.ConnectionState = Me.Adapter.InsertCommand.Connection.State
            If ((Me.Adapter.InsertCommand.Connection.State And Global.System.Data.ConnectionState.Open)  _
                        <> Global.System.Data.ConnectionState.Open) Then
                Me.Adapter.InsertCommand.Connection.Open
            End If
            Try 
                Dim returnValue As Integer = Me.Adapter.InsertCommand.ExecuteNonQuery
                Return returnValue
            Finally
                If (previousConnectionState = Global.System.Data.ConnectionState.Closed) Then
                    Me.Adapter.InsertCommand.Connection.Close
                End If
            End Try
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Update, true)>  _
        Public Overloads Overridable Function Update( _
                    ByVal ID As Integer,  _
                    ByVal Hazard_class As String,  _
                    ByVal TypeCrypt As Global.System.Nullable(Of Integer),  _
                    ByVal ClassCrypt As Global.System.Nullable(Of Integer),  _
                    ByVal CategoryCrypt As Global.System.Nullable(Of Integer),  _
                    ByVal Hazard_category As String,  _
                    ByVal Sort As Global.System.Nullable(Of Integer),  _
                    ByVal Hazard_code As String,  _
                    ByVal Hazard_statement As String,  _
                    ByVal Hazard_type As String,  _
                    ByVal Signal_word As String,  _
                    ByVal Symbol As String,  _
                    ByVal PCodes As String,  _
                    ByVal _Haz_Cat As String,  _
                    ByVal Pstat As String,  _
                    ByVal Hazard_classification As String,  _
                    ByVal Haz_listbox As String,  _
                    ByVal Original_ID As Integer,  _
                    ByVal Original_Hazard_class As String,  _
                    ByVal Original_TypeCrypt As Global.System.Nullable(Of Integer),  _
                    ByVal Original_ClassCrypt As Global.System.Nullable(Of Integer),  _
                    ByVal Original_CategoryCrypt As Global.System.Nullable(Of Integer),  _
                    ByVal Original_Hazard_category As String,  _
                    ByVal Original_Sort As Global.System.Nullable(Of Integer),  _
                    ByVal Original_Hazard_code As String,  _
                    ByVal Original_Hazard_statement As String,  _
                    ByVal Original_Hazard_type As String,  _
                    ByVal Original_Signal_word As String,  _
                    ByVal Original_Symbol As String,  _
                    ByVal _Original_Haz_Cat As String,  _
                    ByVal Original_Hazard_classification As String,  _
                    ByVal Original_Haz_listbox As String) As Integer
            Me.Adapter.UpdateCommand.Parameters(0).Value = CType(ID,Integer)
            If (Hazard_class Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(1).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(1).Value = CType(Hazard_class,String)
            End If
            If (TypeCrypt.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(2).Value = CType(TypeCrypt.Value,Integer)
            Else
                Me.Adapter.UpdateCommand.Parameters(2).Value = Global.System.DBNull.Value
            End If
            If (ClassCrypt.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(3).Value = CType(ClassCrypt.Value,Integer)
            Else
                Me.Adapter.UpdateCommand.Parameters(3).Value = Global.System.DBNull.Value
            End If
            If (CategoryCrypt.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(4).Value = CType(CategoryCrypt.Value,Integer)
            Else
                Me.Adapter.UpdateCommand.Parameters(4).Value = Global.System.DBNull.Value
            End If
            If (Hazard_category Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(5).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(5).Value = CType(Hazard_category,String)
            End If
            If (Sort.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(6).Value = CType(Sort.Value,Integer)
            Else
                Me.Adapter.UpdateCommand.Parameters(6).Value = Global.System.DBNull.Value
            End If
            If (Hazard_code Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(7).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(7).Value = CType(Hazard_code,String)
            End If
            If (Hazard_statement Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(8).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(8).Value = CType(Hazard_statement,String)
            End If
            If (Hazard_type Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(9).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(9).Value = CType(Hazard_type,String)
            End If
            If (Signal_word Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(10).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(10).Value = CType(Signal_word,String)
            End If
            If (Symbol Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(11).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(11).Value = CType(Symbol,String)
            End If
            If (PCodes Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(12).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(12).Value = CType(PCodes,String)
            End If
            If (_Haz_Cat Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(13).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(13).Value = CType(_Haz_Cat,String)
            End If
            If (Pstat Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(14).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(14).Value = CType(Pstat,String)
            End If
            If (Hazard_classification Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(15).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(15).Value = CType(Hazard_classification,String)
            End If
            If (Haz_listbox Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(16).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(16).Value = CType(Haz_listbox,String)
            End If
            Me.Adapter.UpdateCommand.Parameters(17).Value = CType(Original_ID,Integer)
            If (Original_Hazard_class Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(18).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(19).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(18).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(19).Value = CType(Original_Hazard_class,String)
            End If
            If (Original_TypeCrypt.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(20).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(21).Value = CType(Original_TypeCrypt.Value,Integer)
            Else
                Me.Adapter.UpdateCommand.Parameters(20).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(21).Value = Global.System.DBNull.Value
            End If
            If (Original_ClassCrypt.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(22).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(23).Value = CType(Original_ClassCrypt.Value,Integer)
            Else
                Me.Adapter.UpdateCommand.Parameters(22).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(23).Value = Global.System.DBNull.Value
            End If
            If (Original_CategoryCrypt.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(24).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(25).Value = CType(Original_CategoryCrypt.Value,Integer)
            Else
                Me.Adapter.UpdateCommand.Parameters(24).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(25).Value = Global.System.DBNull.Value
            End If
            If (Original_Hazard_category Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(26).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(27).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(26).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(27).Value = CType(Original_Hazard_category,String)
            End If
            If (Original_Sort.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(28).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(29).Value = CType(Original_Sort.Value,Integer)
            Else
                Me.Adapter.UpdateCommand.Parameters(28).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(29).Value = Global.System.DBNull.Value
            End If
            If (Original_Hazard_code Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(30).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(31).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(30).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(31).Value = CType(Original_Hazard_code,String)
            End If
            If (Original_Hazard_statement Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(32).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(33).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(32).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(33).Value = CType(Original_Hazard_statement,String)
            End If
            If (Original_Hazard_type Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(34).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(35).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(34).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(35).Value = CType(Original_Hazard_type,String)
            End If
            If (Original_Signal_word Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(36).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(37).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(36).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(37).Value = CType(Original_Signal_word,String)
            End If
            If (Original_Symbol Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(38).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(39).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(38).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(39).Value = CType(Original_Symbol,String)
            End If
            If (_Original_Haz_Cat Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(40).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(41).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(40).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(41).Value = CType(_Original_Haz_Cat,String)
            End If
            If (Original_Hazard_classification Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(42).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(43).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(42).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(43).Value = CType(Original_Hazard_classification,String)
            End If
            If (Original_Haz_listbox Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(44).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(45).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(44).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(45).Value = CType(Original_Haz_listbox,String)
            End If
            Dim previousConnectionState As Global.System.Data.ConnectionState = Me.Adapter.UpdateCommand.Connection.State
            If ((Me.Adapter.UpdateCommand.Connection.State And Global.System.Data.ConnectionState.Open)  _
                        <> Global.System.Data.ConnectionState.Open) Then
                Me.Adapter.UpdateCommand.Connection.Open
            End If
            Try 
                Dim returnValue As Integer = Me.Adapter.UpdateCommand.ExecuteNonQuery
                Return returnValue
            Finally
                If (previousConnectionState = Global.System.Data.ConnectionState.Closed) Then
                    Me.Adapter.UpdateCommand.Connection.Close
                End If
            End Try
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Update, true)>  _
        Public Overloads Overridable Function Update( _
                    ByVal Hazard_class As String,  _
                    ByVal TypeCrypt As Global.System.Nullable(Of Integer),  _
                    ByVal ClassCrypt As Global.System.Nullable(Of Integer),  _
                    ByVal CategoryCrypt As Global.System.Nullable(Of Integer),  _
                    ByVal Hazard_category As String,  _
                    ByVal Sort As Global.System.Nullable(Of Integer),  _
                    ByVal Hazard_code As String,  _
                    ByVal Hazard_statement As String,  _
                    ByVal Hazard_type As String,  _
                    ByVal Signal_word As String,  _
                    ByVal Symbol As String,  _
                    ByVal PCodes As String,  _
                    ByVal _Haz_Cat As String,  _
                    ByVal Pstat As String,  _
                    ByVal Hazard_classification As String,  _
                    ByVal Haz_listbox As String,  _
                    ByVal Original_ID As Integer,  _
                    ByVal Original_Hazard_class As String,  _
                    ByVal Original_TypeCrypt As Global.System.Nullable(Of Integer),  _
                    ByVal Original_ClassCrypt As Global.System.Nullable(Of Integer),  _
                    ByVal Original_CategoryCrypt As Global.System.Nullable(Of Integer),  _
                    ByVal Original_Hazard_category As String,  _
                    ByVal Original_Sort As Global.System.Nullable(Of Integer),  _
                    ByVal Original_Hazard_code As String,  _
                    ByVal Original_Hazard_statement As String,  _
                    ByVal Original_Hazard_type As String,  _
                    ByVal Original_Signal_word As String,  _
                    ByVal Original_Symbol As String,  _
                    ByVal _Original_Haz_Cat As String,  _
                    ByVal Original_Hazard_classification As String,  _
                    ByVal Original_Haz_listbox As String) As Integer
            Return Me.Update(Original_ID, Hazard_class, TypeCrypt, ClassCrypt, CategoryCrypt, Hazard_category, Sort, Hazard_code, Hazard_statement, Hazard_type, Signal_word, Symbol, PCodes, _Haz_Cat, Pstat, Hazard_classification, Haz_listbox, Original_ID, Original_Hazard_class, Original_TypeCrypt, Original_ClassCrypt, Original_CategoryCrypt, Original_Hazard_category, Original_Sort, Original_Hazard_code, Original_Hazard_statement, Original_Hazard_type, Original_Signal_word, Original_Symbol, _Original_Haz_Cat, Original_Hazard_classification, Original_Haz_listbox)
        End Function
    End Class
    
    '''<summary>
    '''Represents the connection and commands used to retrieve and save data.
    '''</summary>
    <Global.System.ComponentModel.DesignerCategoryAttribute("code"),  _
     Global.System.ComponentModel.ToolboxItem(true),  _
     Global.System.ComponentModel.DataObjectAttribute(true),  _
     Global.System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner"& _ 
        ", Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a"),  _
     Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
    Partial Public Class Precautionary_LexiconTableAdapter
        Inherits Global.System.ComponentModel.Component
        
        Private WithEvents _adapter As Global.System.Data.OleDb.OleDbDataAdapter
        
        Private _connection As Global.System.Data.OleDb.OleDbConnection
        
        Private _transaction As Global.System.Data.OleDb.OleDbTransaction
        
        Private _commandCollection() As Global.System.Data.OleDb.OleDbCommand
        
        Private _clearBeforeFill As Boolean
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub New()
            MyBase.New
            Me.ClearBeforeFill = true
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Friend ReadOnly Property Adapter() As Global.System.Data.OleDb.OleDbDataAdapter
            Get
                If (Me._adapter Is Nothing) Then
                    Me.InitAdapter
                End If
                Return Me._adapter
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Property Connection() As Global.System.Data.OleDb.OleDbConnection
            Get
                If (Me._connection Is Nothing) Then
                    Me.InitConnection
                End If
                Return Me._connection
            End Get
            Set
                Me._connection = value
                If (Not (Me.Adapter.InsertCommand) Is Nothing) Then
                    Me.Adapter.InsertCommand.Connection = value
                End If
                If (Not (Me.Adapter.DeleteCommand) Is Nothing) Then
                    Me.Adapter.DeleteCommand.Connection = value
                End If
                If (Not (Me.Adapter.UpdateCommand) Is Nothing) Then
                    Me.Adapter.UpdateCommand.Connection = value
                End If
                Dim i As Integer = 0
                Do While (i < Me.CommandCollection.Length)
                    If (Not (Me.CommandCollection(i)) Is Nothing) Then
                        CType(Me.CommandCollection(i),Global.System.Data.OleDb.OleDbCommand).Connection = value
                    End If
                    i = (i + 1)
                Loop
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Property Transaction() As Global.System.Data.OleDb.OleDbTransaction
            Get
                Return Me._transaction
            End Get
            Set
                Me._transaction = value
                Dim i As Integer = 0
                Do While (i < Me.CommandCollection.Length)
                    Me.CommandCollection(i).Transaction = Me._transaction
                    i = (i + 1)
                Loop
                If ((Not (Me.Adapter) Is Nothing)  _
                            AndAlso (Not (Me.Adapter.DeleteCommand) Is Nothing)) Then
                    Me.Adapter.DeleteCommand.Transaction = Me._transaction
                End If
                If ((Not (Me.Adapter) Is Nothing)  _
                            AndAlso (Not (Me.Adapter.InsertCommand) Is Nothing)) Then
                    Me.Adapter.InsertCommand.Transaction = Me._transaction
                End If
                If ((Not (Me.Adapter) Is Nothing)  _
                            AndAlso (Not (Me.Adapter.UpdateCommand) Is Nothing)) Then
                    Me.Adapter.UpdateCommand.Transaction = Me._transaction
                End If
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected ReadOnly Property CommandCollection() As Global.System.Data.OleDb.OleDbCommand()
            Get
                If (Me._commandCollection Is Nothing) Then
                    Me.InitCommandCollection
                End If
                Return Me._commandCollection
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property ClearBeforeFill() As Boolean
            Get
                Return Me._clearBeforeFill
            End Get
            Set
                Me._clearBeforeFill = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Private Sub InitAdapter()
            Me._adapter = New Global.System.Data.OleDb.OleDbDataAdapter()
            Dim tableMapping As Global.System.Data.Common.DataTableMapping = New Global.System.Data.Common.DataTableMapping()
            tableMapping.SourceTable = "Table"
            tableMapping.DataSetTable = "Precautionary Lexicon"
            tableMapping.ColumnMappings.Add("Precautionary_code", "Precautionary_code")
            tableMapping.ColumnMappings.Add("Precautionary_statement", "Precautionary_statement")
            tableMapping.ColumnMappings.Add("Precaution_type", "Precaution_type")
            tableMapping.ColumnMappings.Add("Sorter", "Sorter")
            tableMapping.ColumnMappings.Add("Overrides", "Overrides")
            Me._adapter.TableMappings.Add(tableMapping)
            Me._adapter.DeleteCommand = New Global.System.Data.OleDb.OleDbCommand()
            Me._adapter.DeleteCommand.Connection = Me.Connection
            Me._adapter.DeleteCommand.CommandText = "DELETE FROM `Precautionary Lexicon` WHERE ((`Precautionary_code` = ?) AND ((? = 1"& _ 
                " AND `Precautionary_statement` IS NULL) OR (`Precautionary_statement` = ?)) AND "& _ 
                "((? = 1 AND `Precaution_type` IS NULL) OR (`Precaution_type` = ?)) AND ((? = 1 A"& _ 
                "ND `Sorter` IS NULL) OR (`Sorter` = ?)))"
            Me._adapter.DeleteCommand.CommandType = Global.System.Data.CommandType.Text
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("Original_Precautionary_code", Global.System.Data.OleDb.OleDbType.VarWChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "Precautionary_code", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("IsNull_Precautionary_statement", Global.System.Data.OleDb.OleDbType.[Integer], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "Precautionary_statement", Global.System.Data.DataRowVersion.Original, true, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("Original_Precautionary_statement", Global.System.Data.OleDb.OleDbType.VarWChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "Precautionary_statement", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("IsNull_Precaution_type", Global.System.Data.OleDb.OleDbType.[Integer], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "Precaution_type", Global.System.Data.DataRowVersion.Original, true, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("Original_Precaution_type", Global.System.Data.OleDb.OleDbType.VarWChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "Precaution_type", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("IsNull_Sorter", Global.System.Data.OleDb.OleDbType.[Integer], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "Sorter", Global.System.Data.DataRowVersion.Original, true, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("Original_Sorter", Global.System.Data.OleDb.OleDbType.[Integer], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "Sorter", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.InsertCommand = New Global.System.Data.OleDb.OleDbCommand()
            Me._adapter.InsertCommand.Connection = Me.Connection
            Me._adapter.InsertCommand.CommandText = "INSERT INTO `Precautionary Lexicon` (`Precautionary_code`, `Precautionary_stateme"& _ 
                "nt`, `Precaution_type`, `Sorter`, `Overrides`) VALUES (?, ?, ?, ?, ?)"
            Me._adapter.InsertCommand.CommandType = Global.System.Data.CommandType.Text
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("Precautionary_code", Global.System.Data.OleDb.OleDbType.VarWChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "Precautionary_code", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("Precautionary_statement", Global.System.Data.OleDb.OleDbType.VarWChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "Precautionary_statement", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("Precaution_type", Global.System.Data.OleDb.OleDbType.VarWChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "Precaution_type", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("Sorter", Global.System.Data.OleDb.OleDbType.[Integer], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "Sorter", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("Overrides", Global.System.Data.OleDb.OleDbType.LongVarWChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "Overrides", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.UpdateCommand = New Global.System.Data.OleDb.OleDbCommand()
            Me._adapter.UpdateCommand.Connection = Me.Connection
            Me._adapter.UpdateCommand.CommandText = "UPDATE `Precautionary Lexicon` SET `Precautionary_code` = ?, `Precautionary_state"& _ 
                "ment` = ?, `Precaution_type` = ?, `Sorter` = ?, `Overrides` = ? WHERE ((`Precaut"& _ 
                "ionary_code` = ?) AND ((? = 1 AND `Precautionary_statement` IS NULL) OR (`Precau"& _ 
                "tionary_statement` = ?)) AND ((? = 1 AND `Precaution_type` IS NULL) OR (`Precaut"& _ 
                "ion_type` = ?)) AND ((? = 1 AND `Sorter` IS NULL) OR (`Sorter` = ?)))"
            Me._adapter.UpdateCommand.CommandType = Global.System.Data.CommandType.Text
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("Precautionary_code", Global.System.Data.OleDb.OleDbType.VarWChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "Precautionary_code", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("Precautionary_statement", Global.System.Data.OleDb.OleDbType.VarWChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "Precautionary_statement", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("Precaution_type", Global.System.Data.OleDb.OleDbType.VarWChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "Precaution_type", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("Sorter", Global.System.Data.OleDb.OleDbType.[Integer], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "Sorter", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("Overrides", Global.System.Data.OleDb.OleDbType.LongVarWChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "Overrides", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("Original_Precautionary_code", Global.System.Data.OleDb.OleDbType.VarWChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "Precautionary_code", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("IsNull_Precautionary_statement", Global.System.Data.OleDb.OleDbType.[Integer], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "Precautionary_statement", Global.System.Data.DataRowVersion.Original, true, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("Original_Precautionary_statement", Global.System.Data.OleDb.OleDbType.VarWChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "Precautionary_statement", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("IsNull_Precaution_type", Global.System.Data.OleDb.OleDbType.[Integer], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "Precaution_type", Global.System.Data.DataRowVersion.Original, true, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("Original_Precaution_type", Global.System.Data.OleDb.OleDbType.VarWChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "Precaution_type", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("IsNull_Sorter", Global.System.Data.OleDb.OleDbType.[Integer], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "Sorter", Global.System.Data.DataRowVersion.Original, true, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("Original_Sorter", Global.System.Data.OleDb.OleDbType.[Integer], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "Sorter", Global.System.Data.DataRowVersion.Original, false, Nothing))
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Private Sub InitConnection()
            Me._connection = New Global.System.Data.OleDb.OleDbConnection()
            Me._connection.ConnectionString = Global.Interfacer5.MySettings.Default.Dossier
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Private Sub InitCommandCollection()
            Me._commandCollection = New Global.System.Data.OleDb.OleDbCommand(0) {}
            Me._commandCollection(0) = New Global.System.Data.OleDb.OleDbCommand()
            Me._commandCollection(0).Connection = Me.Connection
            Me._commandCollection(0).CommandText = "SELECT Precautionary_code, Precautionary_statement, Precaution_type, Sorter, Over"& _ 
                "rides FROM [Precautionary Lexicon]"
            Me._commandCollection(0).CommandType = Global.System.Data.CommandType.Text
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Fill, true)>  _
        Public Overloads Overridable Function Fill(ByVal dataTable As Dossier.Precautionary_LexiconDataTable) As Integer
            Me.Adapter.SelectCommand = Me.CommandCollection(0)
            If (Me.ClearBeforeFill = true) Then
                dataTable.Clear
            End If
            Dim returnValue As Integer = Me.Adapter.Fill(dataTable)
            Return returnValue
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.[Select], true)>  _
        Public Overloads Overridable Function GetData() As Dossier.Precautionary_LexiconDataTable
            Me.Adapter.SelectCommand = Me.CommandCollection(0)
            Dim dataTable As Dossier.Precautionary_LexiconDataTable = New Dossier.Precautionary_LexiconDataTable()
            Me.Adapter.Fill(dataTable)
            Return dataTable
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function Update(ByVal dataTable As Dossier.Precautionary_LexiconDataTable) As Integer
            Return Me.Adapter.Update(dataTable)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function Update(ByVal dataSet As Dossier) As Integer
            Return Me.Adapter.Update(dataSet, "Precautionary Lexicon")
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function Update(ByVal dataRow As Global.System.Data.DataRow) As Integer
            Return Me.Adapter.Update(New Global.System.Data.DataRow() {dataRow})
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function Update(ByVal dataRows() As Global.System.Data.DataRow) As Integer
            Return Me.Adapter.Update(dataRows)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Delete, true)>  _
        Public Overloads Overridable Function Delete(ByVal Original_Precautionary_code As String, ByVal Original_Precautionary_statement As String, ByVal Original_Precaution_type As String, ByVal Original_Sorter As Global.System.Nullable(Of Integer)) As Integer
            If (Original_Precautionary_code Is Nothing) Then
                Throw New Global.System.ArgumentNullException("Original_Precautionary_code")
            Else
                Me.Adapter.DeleteCommand.Parameters(0).Value = CType(Original_Precautionary_code,String)
            End If
            If (Original_Precautionary_statement Is Nothing) Then
                Me.Adapter.DeleteCommand.Parameters(1).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(2).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.DeleteCommand.Parameters(1).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(2).Value = CType(Original_Precautionary_statement,String)
            End If
            If (Original_Precaution_type Is Nothing) Then
                Me.Adapter.DeleteCommand.Parameters(3).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(4).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.DeleteCommand.Parameters(3).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(4).Value = CType(Original_Precaution_type,String)
            End If
            If (Original_Sorter.HasValue = true) Then
                Me.Adapter.DeleteCommand.Parameters(5).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(6).Value = CType(Original_Sorter.Value,Integer)
            Else
                Me.Adapter.DeleteCommand.Parameters(5).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(6).Value = Global.System.DBNull.Value
            End If
            Dim previousConnectionState As Global.System.Data.ConnectionState = Me.Adapter.DeleteCommand.Connection.State
            If ((Me.Adapter.DeleteCommand.Connection.State And Global.System.Data.ConnectionState.Open)  _
                        <> Global.System.Data.ConnectionState.Open) Then
                Me.Adapter.DeleteCommand.Connection.Open
            End If
            Try 
                Dim returnValue As Integer = Me.Adapter.DeleteCommand.ExecuteNonQuery
                Return returnValue
            Finally
                If (previousConnectionState = Global.System.Data.ConnectionState.Closed) Then
                    Me.Adapter.DeleteCommand.Connection.Close
                End If
            End Try
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Insert, true)>  _
        Public Overloads Overridable Function Insert(ByVal Precautionary_code As String, ByVal Precautionary_statement As String, ByVal Precaution_type As String, ByVal Sorter As Global.System.Nullable(Of Integer), ByVal _Overrides As String) As Integer
            If (Precautionary_code Is Nothing) Then
                Throw New Global.System.ArgumentNullException("Precautionary_code")
            Else
                Me.Adapter.InsertCommand.Parameters(0).Value = CType(Precautionary_code,String)
            End If
            If (Precautionary_statement Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(1).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(1).Value = CType(Precautionary_statement,String)
            End If
            If (Precaution_type Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(2).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(2).Value = CType(Precaution_type,String)
            End If
            If (Sorter.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(3).Value = CType(Sorter.Value,Integer)
            Else
                Me.Adapter.InsertCommand.Parameters(3).Value = Global.System.DBNull.Value
            End If
            If (_Overrides Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(4).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(4).Value = CType(_Overrides,String)
            End If
            Dim previousConnectionState As Global.System.Data.ConnectionState = Me.Adapter.InsertCommand.Connection.State
            If ((Me.Adapter.InsertCommand.Connection.State And Global.System.Data.ConnectionState.Open)  _
                        <> Global.System.Data.ConnectionState.Open) Then
                Me.Adapter.InsertCommand.Connection.Open
            End If
            Try 
                Dim returnValue As Integer = Me.Adapter.InsertCommand.ExecuteNonQuery
                Return returnValue
            Finally
                If (previousConnectionState = Global.System.Data.ConnectionState.Closed) Then
                    Me.Adapter.InsertCommand.Connection.Close
                End If
            End Try
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Update, true)>  _
        Public Overloads Overridable Function Update(ByVal Precautionary_code As String, ByVal Precautionary_statement As String, ByVal Precaution_type As String, ByVal Sorter As Global.System.Nullable(Of Integer), ByVal _Overrides As String, ByVal Original_Precautionary_code As String, ByVal Original_Precautionary_statement As String, ByVal Original_Precaution_type As String, ByVal Original_Sorter As Global.System.Nullable(Of Integer)) As Integer
            If (Precautionary_code Is Nothing) Then
                Throw New Global.System.ArgumentNullException("Precautionary_code")
            Else
                Me.Adapter.UpdateCommand.Parameters(0).Value = CType(Precautionary_code,String)
            End If
            If (Precautionary_statement Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(1).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(1).Value = CType(Precautionary_statement,String)
            End If
            If (Precaution_type Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(2).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(2).Value = CType(Precaution_type,String)
            End If
            If (Sorter.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(3).Value = CType(Sorter.Value,Integer)
            Else
                Me.Adapter.UpdateCommand.Parameters(3).Value = Global.System.DBNull.Value
            End If
            If (_Overrides Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(4).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(4).Value = CType(_Overrides,String)
            End If
            If (Original_Precautionary_code Is Nothing) Then
                Throw New Global.System.ArgumentNullException("Original_Precautionary_code")
            Else
                Me.Adapter.UpdateCommand.Parameters(5).Value = CType(Original_Precautionary_code,String)
            End If
            If (Original_Precautionary_statement Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(6).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(7).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(6).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(7).Value = CType(Original_Precautionary_statement,String)
            End If
            If (Original_Precaution_type Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(8).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(9).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(8).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(9).Value = CType(Original_Precaution_type,String)
            End If
            If (Original_Sorter.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(10).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(11).Value = CType(Original_Sorter.Value,Integer)
            Else
                Me.Adapter.UpdateCommand.Parameters(10).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(11).Value = Global.System.DBNull.Value
            End If
            Dim previousConnectionState As Global.System.Data.ConnectionState = Me.Adapter.UpdateCommand.Connection.State
            If ((Me.Adapter.UpdateCommand.Connection.State And Global.System.Data.ConnectionState.Open)  _
                        <> Global.System.Data.ConnectionState.Open) Then
                Me.Adapter.UpdateCommand.Connection.Open
            End If
            Try 
                Dim returnValue As Integer = Me.Adapter.UpdateCommand.ExecuteNonQuery
                Return returnValue
            Finally
                If (previousConnectionState = Global.System.Data.ConnectionState.Closed) Then
                    Me.Adapter.UpdateCommand.Connection.Close
                End If
            End Try
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Update, true)>  _
        Public Overloads Overridable Function Update(ByVal Precautionary_statement As String, ByVal Precaution_type As String, ByVal Sorter As Global.System.Nullable(Of Integer), ByVal _Overrides As String, ByVal Original_Precautionary_code As String, ByVal Original_Precautionary_statement As String, ByVal Original_Precaution_type As String, ByVal Original_Sorter As Global.System.Nullable(Of Integer)) As Integer
            Return Me.Update(Original_Precautionary_code, Precautionary_statement, Precaution_type, Sorter, _Overrides, Original_Precautionary_code, Original_Precautionary_statement, Original_Precaution_type, Original_Sorter)
        End Function
    End Class
    
    '''<summary>
    '''Represents the connection and commands used to retrieve and save data.
    '''</summary>
    <Global.System.ComponentModel.DesignerCategoryAttribute("code"),  _
     Global.System.ComponentModel.ToolboxItem(true),  _
     Global.System.ComponentModel.DataObjectAttribute(true),  _
     Global.System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner"& _ 
        ", Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a"),  _
     Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
    Partial Public Class Product_LogTableAdapter
        Inherits Global.System.ComponentModel.Component
        
        Private WithEvents _adapter As Global.System.Data.OleDb.OleDbDataAdapter
        
        Private _connection As Global.System.Data.OleDb.OleDbConnection
        
        Private _transaction As Global.System.Data.OleDb.OleDbTransaction
        
        Private _commandCollection() As Global.System.Data.OleDb.OleDbCommand
        
        Private _clearBeforeFill As Boolean
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub New()
            MyBase.New
            Me.ClearBeforeFill = true
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Friend ReadOnly Property Adapter() As Global.System.Data.OleDb.OleDbDataAdapter
            Get
                If (Me._adapter Is Nothing) Then
                    Me.InitAdapter
                End If
                Return Me._adapter
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Property Connection() As Global.System.Data.OleDb.OleDbConnection
            Get
                If (Me._connection Is Nothing) Then
                    Me.InitConnection
                End If
                Return Me._connection
            End Get
            Set
                Me._connection = value
                If (Not (Me.Adapter.InsertCommand) Is Nothing) Then
                    Me.Adapter.InsertCommand.Connection = value
                End If
                If (Not (Me.Adapter.DeleteCommand) Is Nothing) Then
                    Me.Adapter.DeleteCommand.Connection = value
                End If
                If (Not (Me.Adapter.UpdateCommand) Is Nothing) Then
                    Me.Adapter.UpdateCommand.Connection = value
                End If
                Dim i As Integer = 0
                Do While (i < Me.CommandCollection.Length)
                    If (Not (Me.CommandCollection(i)) Is Nothing) Then
                        CType(Me.CommandCollection(i),Global.System.Data.OleDb.OleDbCommand).Connection = value
                    End If
                    i = (i + 1)
                Loop
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Property Transaction() As Global.System.Data.OleDb.OleDbTransaction
            Get
                Return Me._transaction
            End Get
            Set
                Me._transaction = value
                Dim i As Integer = 0
                Do While (i < Me.CommandCollection.Length)
                    Me.CommandCollection(i).Transaction = Me._transaction
                    i = (i + 1)
                Loop
                If ((Not (Me.Adapter) Is Nothing)  _
                            AndAlso (Not (Me.Adapter.DeleteCommand) Is Nothing)) Then
                    Me.Adapter.DeleteCommand.Transaction = Me._transaction
                End If
                If ((Not (Me.Adapter) Is Nothing)  _
                            AndAlso (Not (Me.Adapter.InsertCommand) Is Nothing)) Then
                    Me.Adapter.InsertCommand.Transaction = Me._transaction
                End If
                If ((Not (Me.Adapter) Is Nothing)  _
                            AndAlso (Not (Me.Adapter.UpdateCommand) Is Nothing)) Then
                    Me.Adapter.UpdateCommand.Transaction = Me._transaction
                End If
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected ReadOnly Property CommandCollection() As Global.System.Data.OleDb.OleDbCommand()
            Get
                If (Me._commandCollection Is Nothing) Then
                    Me.InitCommandCollection
                End If
                Return Me._commandCollection
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property ClearBeforeFill() As Boolean
            Get
                Return Me._clearBeforeFill
            End Get
            Set
                Me._clearBeforeFill = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Private Sub InitAdapter()
            Me._adapter = New Global.System.Data.OleDb.OleDbDataAdapter()
            Dim tableMapping As Global.System.Data.Common.DataTableMapping = New Global.System.Data.Common.DataTableMapping()
            tableMapping.SourceTable = "Table"
            tableMapping.DataSetTable = "Product Log"
            tableMapping.ColumnMappings.Add("PID", "PID")
            tableMapping.ColumnMappings.Add("Product_name", "Product_name")
            tableMapping.ColumnMappings.Add("OldUN", "OldUN")
            tableMapping.ColumnMappings.Add("Product_description", "Product_description")
            tableMapping.ColumnMappings.Add("Product_class", "Product_class")
            tableMapping.ColumnMappings.Add("Supplier_code", "Supplier_code")
            tableMapping.ColumnMappings.Add("Comp1", "Comp1")
            tableMapping.ColumnMappings.Add("WeightRangeLow1", "WeightRangeLow1")
            tableMapping.ColumnMappings.Add("WeightRangeHigh1", "WeightRangeHigh1")
            tableMapping.ColumnMappings.Add("WeightRange1", "WeightRange1")
            tableMapping.ColumnMappings.Add("Comp2", "Comp2")
            tableMapping.ColumnMappings.Add("WeightRangeLow2", "WeightRangeLow2")
            tableMapping.ColumnMappings.Add("WeightRangeHigh2", "WeightRangeHigh2")
            tableMapping.ColumnMappings.Add("WeightRange2", "WeightRange2")
            tableMapping.ColumnMappings.Add("Comp3", "Comp3")
            tableMapping.ColumnMappings.Add("WeightRangeLow3", "WeightRangeLow3")
            tableMapping.ColumnMappings.Add("WeightRangeHigh3", "WeightRangeHigh3")
            tableMapping.ColumnMappings.Add("WeightRange3", "WeightRange3")
            tableMapping.ColumnMappings.Add("Comp4", "Comp4")
            tableMapping.ColumnMappings.Add("WeightRangeLow4", "WeightRangeLow4")
            tableMapping.ColumnMappings.Add("WeightRangeHigh4", "WeightRangeHigh4")
            tableMapping.ColumnMappings.Add("WeightRange4", "WeightRange4")
            tableMapping.ColumnMappings.Add("Comp5", "Comp5")
            tableMapping.ColumnMappings.Add("WeightRangeLow5", "WeightRangeLow5")
            tableMapping.ColumnMappings.Add("WeightRangeHigh5", "WeightRangeHigh5")
            tableMapping.ColumnMappings.Add("WeightRange5", "WeightRange5")
            tableMapping.ColumnMappings.Add("Comp6", "Comp6")
            tableMapping.ColumnMappings.Add("WeightRangeLow6", "WeightRangeLow6")
            tableMapping.ColumnMappings.Add("WeightRangeHigh6", "WeightRangeHigh6")
            tableMapping.ColumnMappings.Add("WeightRange6", "WeightRange6")
            tableMapping.ColumnMappings.Add("pH", "pH")
            tableMapping.ColumnMappings.Add("Specific_gravity", "Specific_gravity")
            tableMapping.ColumnMappings.Add("Boiling_point", "Boiling_point")
            tableMapping.ColumnMappings.Add("Freezing_point", "Freezing_point")
            tableMapping.ColumnMappings.Add("Solubility", "Solubility")
            tableMapping.ColumnMappings.Add("Vapor_density", "Vapor_density")
            tableMapping.ColumnMappings.Add("Vapor_pressure", "Vapor_pressure")
            tableMapping.ColumnMappings.Add("Appearance", "Appearance")
            tableMapping.ColumnMappings.Add("Odor", "Odor")
            tableMapping.ColumnMappings.Add("Flash_point", "Flash_point")
            tableMapping.ColumnMappings.Add("Explosive_limits", "Explosive_limits")
            tableMapping.ColumnMappings.Add("Autoignition_temperature", "Autoignition_temperature")
            tableMapping.ColumnMappings.Add("EPA_number", "EPA_number")
            tableMapping.ColumnMappings.Add("Decomposition_temperature", "Decomposition_temperature")
            tableMapping.ColumnMappings.Add("Product_RQ", "Product_RQ")
            tableMapping.ColumnMappings.Add("Odor_threshold", "Odor_threshold")
            tableMapping.ColumnMappings.Add("Evaporation_rate", "Evaporation_rate")
            tableMapping.ColumnMappings.Add("Partition_coefficient", "Partition_coefficient")
            tableMapping.ColumnMappings.Add("VOC_content", "VOC_content")
            tableMapping.ColumnMappings.Add("Viscosity", "Viscosity")
            tableMapping.ColumnMappings.Add("HMIS", "HMIS")
            tableMapping.ColumnMappings.Add("NFPA", "NFPA")
            tableMapping.ColumnMappings.Add("CAS1", "CAS1")
            tableMapping.ColumnMappings.Add("CAS2", "CAS2")
            tableMapping.ColumnMappings.Add("CAS3", "CAS3")
            tableMapping.ColumnMappings.Add("CAS4", "CAS4")
            tableMapping.ColumnMappings.Add("CAS5", "CAS5")
            tableMapping.ColumnMappings.Add("CAS6", "CAS6")
            tableMapping.ColumnMappings.Add("OSHA_PEL1", "OSHA_PEL1")
            tableMapping.ColumnMappings.Add("OSHA_PEL2", "OSHA_PEL2")
            tableMapping.ColumnMappings.Add("OSHA_PEL3", "OSHA_PEL3")
            tableMapping.ColumnMappings.Add("OSHA_PEL4", "OSHA_PEL4")
            tableMapping.ColumnMappings.Add("OSHA_PEL5", "OSHA_PEL5")
            tableMapping.ColumnMappings.Add("OSHA_PEL6", "OSHA_PEL6")
            tableMapping.ColumnMappings.Add("ACGIH_TLV1", "ACGIH_TLV1")
            tableMapping.ColumnMappings.Add("ACGIH_TLV2", "ACGIH_TLV2")
            tableMapping.ColumnMappings.Add("ACGIH_TLV3", "ACGIH_TLV3")
            tableMapping.ColumnMappings.Add("ACGIH_TLV4", "ACGIH_TLV4")
            tableMapping.ColumnMappings.Add("ACGIH_TLV5", "ACGIH_TLV5")
            tableMapping.ColumnMappings.Add("ACGIH_TLV6", "ACGIH_TLV6")
            tableMapping.ColumnMappings.Add("Health2", "Health2")
            tableMapping.ColumnMappings.Add("Physical2", "Physical2")
            tableMapping.ColumnMappings.Add("Environmental2", "Environmental2")
            tableMapping.ColumnMappings.Add("goTime", "goTime")
            tableMapping.ColumnMappings.Add("Clones", "Clones")
            tableMapping.ColumnMappings.Add("Issue_date", "Issue_date")
            tableMapping.ColumnMappings.Add("Revision_date", "Revision_date")
            tableMapping.ColumnMappings.Add("Version", "Version")
            tableMapping.ColumnMappings.Add("Note", "Note")
            Me._adapter.TableMappings.Add(tableMapping)
            Me._adapter.DeleteCommand = New Global.System.Data.OleDb.OleDbCommand()
            Me._adapter.DeleteCommand.Connection = Me.Connection
            Me._adapter.DeleteCommand.CommandText = "DELETE FROM `Product Log` WHERE ((`PID` = ?) AND ((? = 1 AND `Product_name` IS NU"& _ 
                "LL) OR (`Product_name` = ?)) AND ((? = 1 AND `OldUN` IS NULL) OR (`OldUN` = ?)) "& _ 
                "AND ((? = 1 AND `Product_class` IS NULL) OR (`Product_class` = ?)) AND ((? = 1 A"& _ 
                "ND `Supplier_code` IS NULL) OR (`Supplier_code` = ?)) AND ((? = 1 AND `Comp1` IS"& _ 
                " NULL) OR (`Comp1` = ?)) AND ((? = 1 AND `WeightRangeLow1` IS NULL) OR (`WeightR"& _ 
                "angeLow1` = ?)) AND ((? = 1 AND `WeightRangeHigh1` IS NULL) OR (`WeightRangeHigh"& _ 
                "1` = ?)) AND ((? = 1 AND `WeightRange1` IS NULL) OR (`WeightRange1` = ?)) AND (("& _ 
                "? = 1 AND `Comp2` IS NULL) OR (`Comp2` = ?)) AND ((? = 1 AND `WeightRangeLow2` I"& _ 
                "S NULL) OR (`WeightRangeLow2` = ?)) AND ((? = 1 AND `WeightRangeHigh2` IS NULL) "& _ 
                "OR (`WeightRangeHigh2` = ?)) AND ((? = 1 AND `WeightRange2` IS NULL) OR (`Weight"& _ 
                "Range2` = ?)) AND ((? = 1 AND `Comp3` IS NULL) OR (`Comp3` = ?)) AND ((? = 1 AND"& _ 
                " `WeightRangeLow3` IS NULL) OR (`WeightRangeLow3` = ?)) AND ((? = 1 AND `WeightR"& _ 
                "angeHigh3` IS NULL) OR (`WeightRangeHigh3` = ?)) AND ((? = 1 AND `WeightRange3` "& _ 
                "IS NULL) OR (`WeightRange3` = ?)) AND ((? = 1 AND `Comp4` IS NULL) OR (`Comp4` ="& _ 
                " ?)) AND ((? = 1 AND `WeightRangeLow4` IS NULL) OR (`WeightRangeLow4` = ?)) AND "& _ 
                "((? = 1 AND `WeightRangeHigh4` IS NULL) OR (`WeightRangeHigh4` = ?)) AND ((? = 1"& _ 
                " AND `WeightRange4` IS NULL) OR (`WeightRange4` = ?)) AND ((? = 1 AND `Comp5` IS"& _ 
                " NULL) OR (`Comp5` = ?)) AND ((? = 1 AND `WeightRangeLow5` IS NULL) OR (`WeightR"& _ 
                "angeLow5` = ?)) AND ((? = 1 AND `WeightRangeHigh5` IS NULL) OR (`WeightRangeHigh"& _ 
                "5` = ?)) AND ((? = 1 AND `WeightRange5` IS NULL) OR (`WeightRange5` = ?)) AND (("& _ 
                "? = 1 AND `Comp6` IS NULL) OR (`Comp6` = ?)) AND ((? = 1 AND `WeightRangeLow6` I"& _ 
                "S NULL) OR (`WeightRangeLow6` = ?)) AND ((? = 1 AND `WeightRangeHigh6` IS NULL) "& _ 
                "OR (`WeightRangeHigh6` = ?)) AND ((? = 1 AND `WeightRange6` IS NULL) OR (`Weight"& _ 
                "Range6` = ?)) AND ((? = 1 AND `pH` IS NULL) OR (`pH` = ?)) AND ((? = 1 AND `Spec"& _ 
                "ific_gravity` IS NULL) OR (`Specific_gravity` = ?)) AND ((? = 1 AND `Boiling_poi"& _ 
                "nt` IS NULL) OR (`Boiling_point` = ?)) AND ((? = 1 AND `Freezing_point` IS NULL)"& _ 
                " OR (`Freezing_point` = ?)) AND ((? = 1 AND `Solubility` IS NULL) OR (`Solubilit"& _ 
                "y` = ?)) AND ((? = 1 AND `Vapor_density` IS NULL) OR (`Vapor_density` = ?)) AND "& _ 
                "((? = 1 AND `Vapor_pressure` IS NULL) OR (`Vapor_pressure` = ?)) AND ((? = 1 AND"& _ 
                " `Appearance` IS NULL) OR (`Appearance` = ?)) AND ((? = 1 AND `Odor` IS NULL) OR"& _ 
                " (`Odor` = ?)) AND ((? = 1 AND `Flash_point` IS NULL) OR (`Flash_point` = ?)) AN"& _ 
                "D ((? = 1 AND `Explosive_limits` IS NULL) OR (`Explosive_limits` = ?)) AND ((? ="& _ 
                " 1 AND `Autoignition_temperature` IS NULL) OR (`Autoignition_temperature` = ?)) "& _ 
                "AND ((? = 1 AND `EPA_number` IS NULL) OR (`EPA_number` = ?)) AND ((? = 1 AND `De"& _ 
                "composition_temperature` IS NULL) OR (`Decomposition_temperature` = ?)) AND ((? "& _ 
                "= 1 AND `Product_RQ` IS NULL) OR (`Product_RQ` = ?)) AND ((? = 1 AND `Odor_thres"& _ 
                "hold` IS NULL) OR (`Odor_threshold` = ?)) AND ((? = 1 AND `Evaporation_rate` IS "& _ 
                "NULL) OR (`Evaporation_rate` = ?)) AND ((? = 1 AND `Partition_coefficient` IS NU"& _ 
                "LL) OR (`Partition_coefficient` = ?)) AND ((? = 1 AND `VOC_content` IS NULL) OR "& _ 
                "(`VOC_content` = ?)) AND ((? = 1 AND `Viscosity` IS NULL) OR (`Viscosity` = ?)) "& _ 
                "AND ((? = 1 AND `HMIS` IS NULL) OR (`HMIS` = ?)) AND ((? = 1 AND `NFPA` IS NULL)"& _ 
                " OR (`NFPA` = ?)) AND ((? = 1 AND `CAS1` IS NULL) OR (`CAS1` = ?)) AND ((? = 1 A"& _ 
                "ND `CAS2` IS NULL) OR (`CAS2` = ?)) AND ((? = 1 AND `CAS3` IS NULL) OR (`CAS3` ="& _ 
                " ?)) AND ((? = 1 AND `CAS4` IS NULL) OR (`CAS4` = ?)) AND ((? = 1 AND `CAS5` IS "& _ 
                "NULL) OR (`CAS5` = ?)) AND ((? = 1 AND `CAS6` IS NULL) OR (`CAS6` = ?)) AND ((? "& _ 
                "= 1 AND `OSHA_PEL1` IS NULL) OR (`OSHA_PEL1` = ?)) AND ((? = 1 AND `OSHA_PEL2` I"& _ 
                "S NULL) OR (`OSHA_PEL2` = ?)) AND ((? = 1 AND `OSHA_PEL3` IS NULL) OR (`OSHA_PEL"& _ 
                "3` = ?)) AND ((? = 1 AND `OSHA_PEL4` IS NULL) OR (`OSHA_PEL4` = ?)) AND ((? = 1 "& _ 
                "AND `OSHA_PEL5` IS NULL) OR (`OSHA_PEL5` = ?)) AND ((? = 1 AND `OSHA_PEL6` IS NU"& _ 
                "LL) OR (`OSHA_PEL6` = ?)) AND ((? = 1 AND `ACGIH_TLV1` IS NULL) OR (`ACGIH_TLV1`"& _ 
                " = ?)) AND ((? = 1 AND `ACGIH_TLV2` IS NULL) OR (`ACGIH_TLV2` = ?)) AND ((? = 1 "& _ 
                "AND `ACGIH_TLV3` IS NULL) OR (`ACGIH_TLV3` = ?)) AND ((? = 1 AND `ACGIH_TLV4` IS"& _ 
                " NULL) OR (`ACGIH_TLV4` = ?)) AND ((? = 1 AND `ACGIH_TLV5` IS NULL) OR (`ACGIH_T"& _ 
                "LV5` = ?)) AND ((? = 1 AND `ACGIH_TLV6` IS NULL) OR (`ACGIH_TLV6` = ?)) AND ((? "& _ 
                "= 1 AND `Health2` IS NULL) OR (`Health2` = ?)) AND ((? = 1 AND `Physical2` IS NU"& _ 
                "LL) OR (`Physical2` = ?)) AND ((? = 1 AND `Environmental2` IS NULL) OR (`Environ"& _ 
                "mental2` = ?)) AND ((? = 1 AND `goTime` IS NULL) OR (`goTime` = ?)) AND ((? = 1 "& _ 
                "AND `Clones` IS NULL) OR (`Clones` = ?)) AND ((? = 1 AND `Issue_date` IS NULL) O"& _ 
                "R (`Issue_date` = ?)) AND ((? = 1 AND `Revision_date` IS NULL) OR (`Revision_dat"& _ 
                "e` = ?)) AND ((? = 1 AND `Version` IS NULL) OR (`Version` = ?)))"
            Me._adapter.DeleteCommand.CommandType = Global.System.Data.CommandType.Text
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("Original_PID", Global.System.Data.OleDb.OleDbType.[Integer], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "PID", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("IsNull_Product_name", Global.System.Data.OleDb.OleDbType.[Integer], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "Product_name", Global.System.Data.DataRowVersion.Original, true, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("Original_Product_name", Global.System.Data.OleDb.OleDbType.VarWChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "Product_name", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("IsNull_OldUN", Global.System.Data.OleDb.OleDbType.[Integer], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "OldUN", Global.System.Data.DataRowVersion.Original, true, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("Original_OldUN", Global.System.Data.OleDb.OleDbType.VarWChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "OldUN", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("IsNull_Product_class", Global.System.Data.OleDb.OleDbType.[Integer], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "Product_class", Global.System.Data.DataRowVersion.Original, true, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("Original_Product_class", Global.System.Data.OleDb.OleDbType.VarWChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "Product_class", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("IsNull_Supplier_code", Global.System.Data.OleDb.OleDbType.[Integer], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "Supplier_code", Global.System.Data.DataRowVersion.Original, true, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("Original_Supplier_code", Global.System.Data.OleDb.OleDbType.[Integer], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "Supplier_code", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("IsNull_Comp1", Global.System.Data.OleDb.OleDbType.[Integer], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "Comp1", Global.System.Data.DataRowVersion.Original, true, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("Original_Comp1", Global.System.Data.OleDb.OleDbType.VarWChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "Comp1", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("IsNull_WeightRangeLow1", Global.System.Data.OleDb.OleDbType.[Integer], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "WeightRangeLow1", Global.System.Data.DataRowVersion.Original, true, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("Original_WeightRangeLow1", Global.System.Data.OleDb.OleDbType.[Single], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "WeightRangeLow1", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("IsNull_WeightRangeHigh1", Global.System.Data.OleDb.OleDbType.[Integer], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "WeightRangeHigh1", Global.System.Data.DataRowVersion.Original, true, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("Original_WeightRangeHigh1", Global.System.Data.OleDb.OleDbType.[Single], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "WeightRangeHigh1", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("IsNull_WeightRange1", Global.System.Data.OleDb.OleDbType.[Integer], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "WeightRange1", Global.System.Data.DataRowVersion.Original, true, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("Original_WeightRange1", Global.System.Data.OleDb.OleDbType.VarWChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "WeightRange1", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("IsNull_Comp2", Global.System.Data.OleDb.OleDbType.[Integer], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "Comp2", Global.System.Data.DataRowVersion.Original, true, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("Original_Comp2", Global.System.Data.OleDb.OleDbType.VarWChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "Comp2", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("IsNull_WeightRangeLow2", Global.System.Data.OleDb.OleDbType.[Integer], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "WeightRangeLow2", Global.System.Data.DataRowVersion.Original, true, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("Original_WeightRangeLow2", Global.System.Data.OleDb.OleDbType.[Single], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "WeightRangeLow2", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("IsNull_WeightRangeHigh2", Global.System.Data.OleDb.OleDbType.[Integer], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "WeightRangeHigh2", Global.System.Data.DataRowVersion.Original, true, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("Original_WeightRangeHigh2", Global.System.Data.OleDb.OleDbType.[Single], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "WeightRangeHigh2", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("IsNull_WeightRange2", Global.System.Data.OleDb.OleDbType.[Integer], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "WeightRange2", Global.System.Data.DataRowVersion.Original, true, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("Original_WeightRange2", Global.System.Data.OleDb.OleDbType.VarWChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "WeightRange2", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("IsNull_Comp3", Global.System.Data.OleDb.OleDbType.[Integer], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "Comp3", Global.System.Data.DataRowVersion.Original, true, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("Original_Comp3", Global.System.Data.OleDb.OleDbType.VarWChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "Comp3", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("IsNull_WeightRangeLow3", Global.System.Data.OleDb.OleDbType.[Integer], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "WeightRangeLow3", Global.System.Data.DataRowVersion.Original, true, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("Original_WeightRangeLow3", Global.System.Data.OleDb.OleDbType.[Single], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "WeightRangeLow3", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("IsNull_WeightRangeHigh3", Global.System.Data.OleDb.OleDbType.[Integer], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "WeightRangeHigh3", Global.System.Data.DataRowVersion.Original, true, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("Original_WeightRangeHigh3", Global.System.Data.OleDb.OleDbType.[Single], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "WeightRangeHigh3", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("IsNull_WeightRange3", Global.System.Data.OleDb.OleDbType.[Integer], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "WeightRange3", Global.System.Data.DataRowVersion.Original, true, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("Original_WeightRange3", Global.System.Data.OleDb.OleDbType.VarWChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "WeightRange3", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("IsNull_Comp4", Global.System.Data.OleDb.OleDbType.[Integer], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "Comp4", Global.System.Data.DataRowVersion.Original, true, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("Original_Comp4", Global.System.Data.OleDb.OleDbType.VarWChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "Comp4", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("IsNull_WeightRangeLow4", Global.System.Data.OleDb.OleDbType.[Integer], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "WeightRangeLow4", Global.System.Data.DataRowVersion.Original, true, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("Original_WeightRangeLow4", Global.System.Data.OleDb.OleDbType.[Single], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "WeightRangeLow4", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("IsNull_WeightRangeHigh4", Global.System.Data.OleDb.OleDbType.[Integer], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "WeightRangeHigh4", Global.System.Data.DataRowVersion.Original, true, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("Original_WeightRangeHigh4", Global.System.Data.OleDb.OleDbType.[Single], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "WeightRangeHigh4", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("IsNull_WeightRange4", Global.System.Data.OleDb.OleDbType.[Integer], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "WeightRange4", Global.System.Data.DataRowVersion.Original, true, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("Original_WeightRange4", Global.System.Data.OleDb.OleDbType.VarWChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "WeightRange4", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("IsNull_Comp5", Global.System.Data.OleDb.OleDbType.[Integer], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "Comp5", Global.System.Data.DataRowVersion.Original, true, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("Original_Comp5", Global.System.Data.OleDb.OleDbType.VarWChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "Comp5", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("IsNull_WeightRangeLow5", Global.System.Data.OleDb.OleDbType.[Integer], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "WeightRangeLow5", Global.System.Data.DataRowVersion.Original, true, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("Original_WeightRangeLow5", Global.System.Data.OleDb.OleDbType.[Single], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "WeightRangeLow5", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("IsNull_WeightRangeHigh5", Global.System.Data.OleDb.OleDbType.[Integer], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "WeightRangeHigh5", Global.System.Data.DataRowVersion.Original, true, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("Original_WeightRangeHigh5", Global.System.Data.OleDb.OleDbType.[Single], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "WeightRangeHigh5", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("IsNull_WeightRange5", Global.System.Data.OleDb.OleDbType.[Integer], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "WeightRange5", Global.System.Data.DataRowVersion.Original, true, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("Original_WeightRange5", Global.System.Data.OleDb.OleDbType.VarWChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "WeightRange5", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("IsNull_Comp6", Global.System.Data.OleDb.OleDbType.[Integer], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "Comp6", Global.System.Data.DataRowVersion.Original, true, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("Original_Comp6", Global.System.Data.OleDb.OleDbType.VarWChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "Comp6", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("IsNull_WeightRangeLow6", Global.System.Data.OleDb.OleDbType.[Integer], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "WeightRangeLow6", Global.System.Data.DataRowVersion.Original, true, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("Original_WeightRangeLow6", Global.System.Data.OleDb.OleDbType.[Single], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "WeightRangeLow6", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("IsNull_WeightRangeHigh6", Global.System.Data.OleDb.OleDbType.[Integer], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "WeightRangeHigh6", Global.System.Data.DataRowVersion.Original, true, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("Original_WeightRangeHigh6", Global.System.Data.OleDb.OleDbType.[Single], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "WeightRangeHigh6", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("IsNull_WeightRange6", Global.System.Data.OleDb.OleDbType.[Integer], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "WeightRange6", Global.System.Data.DataRowVersion.Original, true, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("Original_WeightRange6", Global.System.Data.OleDb.OleDbType.VarWChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "WeightRange6", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("IsNull_pH", Global.System.Data.OleDb.OleDbType.[Integer], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "pH", Global.System.Data.DataRowVersion.Original, true, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("Original_pH", Global.System.Data.OleDb.OleDbType.VarWChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "pH", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("IsNull_Specific_gravity", Global.System.Data.OleDb.OleDbType.[Integer], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "Specific_gravity", Global.System.Data.DataRowVersion.Original, true, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("Original_Specific_gravity", Global.System.Data.OleDb.OleDbType.VarWChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "Specific_gravity", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("IsNull_Boiling_point", Global.System.Data.OleDb.OleDbType.[Integer], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "Boiling_point", Global.System.Data.DataRowVersion.Original, true, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("Original_Boiling_point", Global.System.Data.OleDb.OleDbType.VarWChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "Boiling_point", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("IsNull_Freezing_point", Global.System.Data.OleDb.OleDbType.[Integer], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "Freezing_point", Global.System.Data.DataRowVersion.Original, true, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("Original_Freezing_point", Global.System.Data.OleDb.OleDbType.VarWChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "Freezing_point", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("IsNull_Solubility", Global.System.Data.OleDb.OleDbType.[Integer], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "Solubility", Global.System.Data.DataRowVersion.Original, true, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("Original_Solubility", Global.System.Data.OleDb.OleDbType.VarWChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "Solubility", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("IsNull_Vapor_density", Global.System.Data.OleDb.OleDbType.[Integer], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "Vapor_density", Global.System.Data.DataRowVersion.Original, true, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("Original_Vapor_density", Global.System.Data.OleDb.OleDbType.VarWChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "Vapor_density", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("IsNull_Vapor_pressure", Global.System.Data.OleDb.OleDbType.[Integer], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "Vapor_pressure", Global.System.Data.DataRowVersion.Original, true, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("Original_Vapor_pressure", Global.System.Data.OleDb.OleDbType.VarWChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "Vapor_pressure", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("IsNull_Appearance", Global.System.Data.OleDb.OleDbType.[Integer], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "Appearance", Global.System.Data.DataRowVersion.Original, true, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("Original_Appearance", Global.System.Data.OleDb.OleDbType.VarWChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "Appearance", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("IsNull_Odor", Global.System.Data.OleDb.OleDbType.[Integer], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "Odor", Global.System.Data.DataRowVersion.Original, true, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("Original_Odor", Global.System.Data.OleDb.OleDbType.VarWChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "Odor", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("IsNull_Flash_point", Global.System.Data.OleDb.OleDbType.[Integer], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "Flash_point", Global.System.Data.DataRowVersion.Original, true, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("Original_Flash_point", Global.System.Data.OleDb.OleDbType.VarWChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "Flash_point", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("IsNull_Explosive_limits", Global.System.Data.OleDb.OleDbType.[Integer], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "Explosive_limits", Global.System.Data.DataRowVersion.Original, true, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("Original_Explosive_limits", Global.System.Data.OleDb.OleDbType.VarWChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "Explosive_limits", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("IsNull_Autoignition_temperature", Global.System.Data.OleDb.OleDbType.[Integer], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "Autoignition_temperature", Global.System.Data.DataRowVersion.Original, true, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("Original_Autoignition_temperature", Global.System.Data.OleDb.OleDbType.VarWChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "Autoignition_temperature", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("IsNull_EPA_number", Global.System.Data.OleDb.OleDbType.[Integer], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "EPA_number", Global.System.Data.DataRowVersion.Original, true, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("Original_EPA_number", Global.System.Data.OleDb.OleDbType.VarWChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "EPA_number", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("IsNull_Decomposition_temperature", Global.System.Data.OleDb.OleDbType.[Integer], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "Decomposition_temperature", Global.System.Data.DataRowVersion.Original, true, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("Original_Decomposition_temperature", Global.System.Data.OleDb.OleDbType.VarWChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "Decomposition_temperature", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("IsNull_Product_RQ", Global.System.Data.OleDb.OleDbType.[Integer], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "Product_RQ", Global.System.Data.DataRowVersion.Original, true, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("Original_Product_RQ", Global.System.Data.OleDb.OleDbType.VarWChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "Product_RQ", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("IsNull_Odor_threshold", Global.System.Data.OleDb.OleDbType.[Integer], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "Odor_threshold", Global.System.Data.DataRowVersion.Original, true, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("Original_Odor_threshold", Global.System.Data.OleDb.OleDbType.VarWChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "Odor_threshold", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("IsNull_Evaporation_rate", Global.System.Data.OleDb.OleDbType.[Integer], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "Evaporation_rate", Global.System.Data.DataRowVersion.Original, true, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("Original_Evaporation_rate", Global.System.Data.OleDb.OleDbType.VarWChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "Evaporation_rate", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("IsNull_Partition_coefficient", Global.System.Data.OleDb.OleDbType.[Integer], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "Partition_coefficient", Global.System.Data.DataRowVersion.Original, true, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("Original_Partition_coefficient", Global.System.Data.OleDb.OleDbType.VarWChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "Partition_coefficient", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("IsNull_VOC_content", Global.System.Data.OleDb.OleDbType.[Integer], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "VOC_content", Global.System.Data.DataRowVersion.Original, true, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("Original_VOC_content", Global.System.Data.OleDb.OleDbType.VarWChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "VOC_content", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("IsNull_Viscosity", Global.System.Data.OleDb.OleDbType.[Integer], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "Viscosity", Global.System.Data.DataRowVersion.Original, true, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("Original_Viscosity", Global.System.Data.OleDb.OleDbType.VarWChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "Viscosity", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("IsNull_HMIS", Global.System.Data.OleDb.OleDbType.[Integer], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "HMIS", Global.System.Data.DataRowVersion.Original, true, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("Original_HMIS", Global.System.Data.OleDb.OleDbType.VarWChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "HMIS", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("IsNull_NFPA", Global.System.Data.OleDb.OleDbType.[Integer], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "NFPA", Global.System.Data.DataRowVersion.Original, true, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("Original_NFPA", Global.System.Data.OleDb.OleDbType.VarWChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "NFPA", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("IsNull_CAS1", Global.System.Data.OleDb.OleDbType.[Integer], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "CAS1", Global.System.Data.DataRowVersion.Original, true, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("Original_CAS1", Global.System.Data.OleDb.OleDbType.VarWChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "CAS1", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("IsNull_CAS2", Global.System.Data.OleDb.OleDbType.[Integer], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "CAS2", Global.System.Data.DataRowVersion.Original, true, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("Original_CAS2", Global.System.Data.OleDb.OleDbType.VarWChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "CAS2", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("IsNull_CAS3", Global.System.Data.OleDb.OleDbType.[Integer], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "CAS3", Global.System.Data.DataRowVersion.Original, true, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("Original_CAS3", Global.System.Data.OleDb.OleDbType.VarWChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "CAS3", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("IsNull_CAS4", Global.System.Data.OleDb.OleDbType.[Integer], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "CAS4", Global.System.Data.DataRowVersion.Original, true, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("Original_CAS4", Global.System.Data.OleDb.OleDbType.VarWChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "CAS4", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("IsNull_CAS5", Global.System.Data.OleDb.OleDbType.[Integer], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "CAS5", Global.System.Data.DataRowVersion.Original, true, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("Original_CAS5", Global.System.Data.OleDb.OleDbType.VarWChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "CAS5", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("IsNull_CAS6", Global.System.Data.OleDb.OleDbType.[Integer], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "CAS6", Global.System.Data.DataRowVersion.Original, true, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("Original_CAS6", Global.System.Data.OleDb.OleDbType.VarWChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "CAS6", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("IsNull_OSHA_PEL1", Global.System.Data.OleDb.OleDbType.[Integer], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "OSHA_PEL1", Global.System.Data.DataRowVersion.Original, true, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("Original_OSHA_PEL1", Global.System.Data.OleDb.OleDbType.VarWChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "OSHA_PEL1", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("IsNull_OSHA_PEL2", Global.System.Data.OleDb.OleDbType.[Integer], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "OSHA_PEL2", Global.System.Data.DataRowVersion.Original, true, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("Original_OSHA_PEL2", Global.System.Data.OleDb.OleDbType.VarWChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "OSHA_PEL2", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("IsNull_OSHA_PEL3", Global.System.Data.OleDb.OleDbType.[Integer], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "OSHA_PEL3", Global.System.Data.DataRowVersion.Original, true, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("Original_OSHA_PEL3", Global.System.Data.OleDb.OleDbType.VarWChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "OSHA_PEL3", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("IsNull_OSHA_PEL4", Global.System.Data.OleDb.OleDbType.[Integer], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "OSHA_PEL4", Global.System.Data.DataRowVersion.Original, true, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("Original_OSHA_PEL4", Global.System.Data.OleDb.OleDbType.VarWChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "OSHA_PEL4", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("IsNull_OSHA_PEL5", Global.System.Data.OleDb.OleDbType.[Integer], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "OSHA_PEL5", Global.System.Data.DataRowVersion.Original, true, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("Original_OSHA_PEL5", Global.System.Data.OleDb.OleDbType.VarWChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "OSHA_PEL5", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("IsNull_OSHA_PEL6", Global.System.Data.OleDb.OleDbType.[Integer], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "OSHA_PEL6", Global.System.Data.DataRowVersion.Original, true, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("Original_OSHA_PEL6", Global.System.Data.OleDb.OleDbType.VarWChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "OSHA_PEL6", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("IsNull_ACGIH_TLV1", Global.System.Data.OleDb.OleDbType.[Integer], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "ACGIH_TLV1", Global.System.Data.DataRowVersion.Original, true, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("Original_ACGIH_TLV1", Global.System.Data.OleDb.OleDbType.VarWChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "ACGIH_TLV1", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("IsNull_ACGIH_TLV2", Global.System.Data.OleDb.OleDbType.[Integer], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "ACGIH_TLV2", Global.System.Data.DataRowVersion.Original, true, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("Original_ACGIH_TLV2", Global.System.Data.OleDb.OleDbType.VarWChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "ACGIH_TLV2", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("IsNull_ACGIH_TLV3", Global.System.Data.OleDb.OleDbType.[Integer], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "ACGIH_TLV3", Global.System.Data.DataRowVersion.Original, true, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("Original_ACGIH_TLV3", Global.System.Data.OleDb.OleDbType.VarWChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "ACGIH_TLV3", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("IsNull_ACGIH_TLV4", Global.System.Data.OleDb.OleDbType.[Integer], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "ACGIH_TLV4", Global.System.Data.DataRowVersion.Original, true, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("Original_ACGIH_TLV4", Global.System.Data.OleDb.OleDbType.VarWChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "ACGIH_TLV4", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("IsNull_ACGIH_TLV5", Global.System.Data.OleDb.OleDbType.[Integer], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "ACGIH_TLV5", Global.System.Data.DataRowVersion.Original, true, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("Original_ACGIH_TLV5", Global.System.Data.OleDb.OleDbType.VarWChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "ACGIH_TLV5", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("IsNull_ACGIH_TLV6", Global.System.Data.OleDb.OleDbType.[Integer], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "ACGIH_TLV6", Global.System.Data.DataRowVersion.Original, true, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("Original_ACGIH_TLV6", Global.System.Data.OleDb.OleDbType.VarWChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "ACGIH_TLV6", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("IsNull_Health2", Global.System.Data.OleDb.OleDbType.[Integer], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "Health2", Global.System.Data.DataRowVersion.Original, true, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("Original_Health2", Global.System.Data.OleDb.OleDbType.VarWChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "Health2", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("IsNull_Physical2", Global.System.Data.OleDb.OleDbType.[Integer], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "Physical2", Global.System.Data.DataRowVersion.Original, true, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("Original_Physical2", Global.System.Data.OleDb.OleDbType.VarWChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "Physical2", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("IsNull_Environmental2", Global.System.Data.OleDb.OleDbType.[Integer], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "Environmental2", Global.System.Data.DataRowVersion.Original, true, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("Original_Environmental2", Global.System.Data.OleDb.OleDbType.VarWChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "Environmental2", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("IsNull_goTime", Global.System.Data.OleDb.OleDbType.[Integer], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "goTime", Global.System.Data.DataRowVersion.Original, true, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("Original_goTime", Global.System.Data.OleDb.OleDbType.[Date], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "goTime", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("IsNull_Clones", Global.System.Data.OleDb.OleDbType.[Integer], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "Clones", Global.System.Data.DataRowVersion.Original, true, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("Original_Clones", Global.System.Data.OleDb.OleDbType.VarWChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "Clones", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("IsNull_Issue_date", Global.System.Data.OleDb.OleDbType.[Integer], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "Issue_date", Global.System.Data.DataRowVersion.Original, true, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("Original_Issue_date", Global.System.Data.OleDb.OleDbType.[Date], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "Issue_date", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("IsNull_Revision_date", Global.System.Data.OleDb.OleDbType.[Integer], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "Revision_date", Global.System.Data.DataRowVersion.Original, true, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("Original_Revision_date", Global.System.Data.OleDb.OleDbType.[Date], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "Revision_date", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("IsNull_Version", Global.System.Data.OleDb.OleDbType.[Integer], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "Version", Global.System.Data.DataRowVersion.Original, true, Nothing))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("Original_Version", Global.System.Data.OleDb.OleDbType.[Integer], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "Version", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.InsertCommand = New Global.System.Data.OleDb.OleDbCommand()
            Me._adapter.InsertCommand.Connection = Me.Connection
            Me._adapter.InsertCommand.CommandText = "INSERT INTO `Product Log` (`Product_name`, `OldUN`, `Product_description`, `Produ"& _ 
                "ct_class`, `Supplier_code`, `Comp1`, `WeightRangeLow1`, `WeightRangeHigh1`, `Wei"& _ 
                "ghtRange1`, `Comp2`, `WeightRangeLow2`, `WeightRangeHigh2`, `WeightRange2`, `Com"& _ 
                "p3`, `WeightRangeLow3`, `WeightRangeHigh3`, `WeightRange3`, `Comp4`, `WeightRang"& _ 
                "eLow4`, `WeightRangeHigh4`, `WeightRange4`, `Comp5`, `WeightRangeLow5`, `WeightR"& _ 
                "angeHigh5`, `WeightRange5`, `Comp6`, `WeightRangeLow6`, `WeightRangeHigh6`, `Wei"& _ 
                "ghtRange6`, `pH`, `Specific_gravity`, `Boiling_point`, `Freezing_point`, `Solubi"& _ 
                "lity`, `Vapor_density`, `Vapor_pressure`, `Appearance`, `Odor`, `Flash_point`, `"& _ 
                "Explosive_limits`, `Autoignition_temperature`, `EPA_number`, `Decomposition_temp"& _ 
                "erature`, `Product_RQ`, `Odor_threshold`, `Evaporation_rate`, `Partition_coeffic"& _ 
                "ient`, `VOC_content`, `Viscosity`, `HMIS`, `NFPA`, `CAS1`, `CAS2`, `CAS3`, `CAS4"& _ 
                "`, `CAS5`, `CAS6`, `OSHA_PEL1`, `OSHA_PEL2`, `OSHA_PEL3`, `OSHA_PEL4`, `OSHA_PEL"& _ 
                "5`, `OSHA_PEL6`, `ACGIH_TLV1`, `ACGIH_TLV2`, `ACGIH_TLV3`, `ACGIH_TLV4`, `ACGIH_"& _ 
                "TLV5`, `ACGIH_TLV6`, `Health2`, `Physical2`, `Environmental2`, `goTime`, `Clones"& _ 
                "`, `Issue_date`, `Revision_date`, `Version`, `Note`) VALUES (?, ?, ?, ?, ?, ?, ?"& _ 
                ", ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, "& _ 
                "?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?,"& _ 
                " ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)"
            Me._adapter.InsertCommand.CommandType = Global.System.Data.CommandType.Text
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("Product_name", Global.System.Data.OleDb.OleDbType.VarWChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "Product_name", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("OldUN", Global.System.Data.OleDb.OleDbType.VarWChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "OldUN", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("Product_description", Global.System.Data.OleDb.OleDbType.LongVarWChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "Product_description", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("Product_class", Global.System.Data.OleDb.OleDbType.VarWChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "Product_class", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("Supplier_code", Global.System.Data.OleDb.OleDbType.[Integer], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "Supplier_code", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("Comp1", Global.System.Data.OleDb.OleDbType.VarWChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "Comp1", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("WeightRangeLow1", Global.System.Data.OleDb.OleDbType.[Single], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "WeightRangeLow1", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("WeightRangeHigh1", Global.System.Data.OleDb.OleDbType.[Single], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "WeightRangeHigh1", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("WeightRange1", Global.System.Data.OleDb.OleDbType.VarWChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "WeightRange1", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("Comp2", Global.System.Data.OleDb.OleDbType.VarWChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "Comp2", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("WeightRangeLow2", Global.System.Data.OleDb.OleDbType.[Single], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "WeightRangeLow2", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("WeightRangeHigh2", Global.System.Data.OleDb.OleDbType.[Single], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "WeightRangeHigh2", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("WeightRange2", Global.System.Data.OleDb.OleDbType.VarWChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "WeightRange2", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("Comp3", Global.System.Data.OleDb.OleDbType.VarWChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "Comp3", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("WeightRangeLow3", Global.System.Data.OleDb.OleDbType.[Single], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "WeightRangeLow3", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("WeightRangeHigh3", Global.System.Data.OleDb.OleDbType.[Single], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "WeightRangeHigh3", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("WeightRange3", Global.System.Data.OleDb.OleDbType.VarWChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "WeightRange3", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("Comp4", Global.System.Data.OleDb.OleDbType.VarWChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "Comp4", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("WeightRangeLow4", Global.System.Data.OleDb.OleDbType.[Single], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "WeightRangeLow4", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("WeightRangeHigh4", Global.System.Data.OleDb.OleDbType.[Single], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "WeightRangeHigh4", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("WeightRange4", Global.System.Data.OleDb.OleDbType.VarWChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "WeightRange4", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("Comp5", Global.System.Data.OleDb.OleDbType.VarWChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "Comp5", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("WeightRangeLow5", Global.System.Data.OleDb.OleDbType.[Single], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "WeightRangeLow5", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("WeightRangeHigh5", Global.System.Data.OleDb.OleDbType.[Single], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "WeightRangeHigh5", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("WeightRange5", Global.System.Data.OleDb.OleDbType.VarWChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "WeightRange5", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("Comp6", Global.System.Data.OleDb.OleDbType.VarWChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "Comp6", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("WeightRangeLow6", Global.System.Data.OleDb.OleDbType.[Single], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "WeightRangeLow6", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("WeightRangeHigh6", Global.System.Data.OleDb.OleDbType.[Single], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "WeightRangeHigh6", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("WeightRange6", Global.System.Data.OleDb.OleDbType.VarWChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "WeightRange6", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("pH", Global.System.Data.OleDb.OleDbType.VarWChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "pH", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("Specific_gravity", Global.System.Data.OleDb.OleDbType.VarWChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "Specific_gravity", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("Boiling_point", Global.System.Data.OleDb.OleDbType.VarWChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "Boiling_point", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("Freezing_point", Global.System.Data.OleDb.OleDbType.VarWChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "Freezing_point", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("Solubility", Global.System.Data.OleDb.OleDbType.VarWChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "Solubility", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("Vapor_density", Global.System.Data.OleDb.OleDbType.VarWChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "Vapor_density", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("Vapor_pressure", Global.System.Data.OleDb.OleDbType.VarWChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "Vapor_pressure", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("Appearance", Global.System.Data.OleDb.OleDbType.VarWChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "Appearance", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("Odor", Global.System.Data.OleDb.OleDbType.VarWChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "Odor", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("Flash_point", Global.System.Data.OleDb.OleDbType.VarWChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "Flash_point", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("Explosive_limits", Global.System.Data.OleDb.OleDbType.VarWChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "Explosive_limits", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("Autoignition_temperature", Global.System.Data.OleDb.OleDbType.VarWChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "Autoignition_temperature", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("EPA_number", Global.System.Data.OleDb.OleDbType.VarWChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "EPA_number", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("Decomposition_temperature", Global.System.Data.OleDb.OleDbType.VarWChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "Decomposition_temperature", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("Product_RQ", Global.System.Data.OleDb.OleDbType.VarWChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "Product_RQ", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("Odor_threshold", Global.System.Data.OleDb.OleDbType.VarWChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "Odor_threshold", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("Evaporation_rate", Global.System.Data.OleDb.OleDbType.VarWChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "Evaporation_rate", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("Partition_coefficient", Global.System.Data.OleDb.OleDbType.VarWChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "Partition_coefficient", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("VOC_content", Global.System.Data.OleDb.OleDbType.VarWChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "VOC_content", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("Viscosity", Global.System.Data.OleDb.OleDbType.VarWChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "Viscosity", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("HMIS", Global.System.Data.OleDb.OleDbType.VarWChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "HMIS", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("NFPA", Global.System.Data.OleDb.OleDbType.VarWChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "NFPA", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("CAS1", Global.System.Data.OleDb.OleDbType.VarWChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "CAS1", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("CAS2", Global.System.Data.OleDb.OleDbType.VarWChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "CAS2", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("CAS3", Global.System.Data.OleDb.OleDbType.VarWChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "CAS3", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("CAS4", Global.System.Data.OleDb.OleDbType.VarWChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "CAS4", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("CAS5", Global.System.Data.OleDb.OleDbType.VarWChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "CAS5", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("CAS6", Global.System.Data.OleDb.OleDbType.VarWChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "CAS6", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("OSHA_PEL1", Global.System.Data.OleDb.OleDbType.VarWChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "OSHA_PEL1", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("OSHA_PEL2", Global.System.Data.OleDb.OleDbType.VarWChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "OSHA_PEL2", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("OSHA_PEL3", Global.System.Data.OleDb.OleDbType.VarWChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "OSHA_PEL3", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("OSHA_PEL4", Global.System.Data.OleDb.OleDbType.VarWChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "OSHA_PEL4", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("OSHA_PEL5", Global.System.Data.OleDb.OleDbType.VarWChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "OSHA_PEL5", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("OSHA_PEL6", Global.System.Data.OleDb.OleDbType.VarWChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "OSHA_PEL6", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("ACGIH_TLV1", Global.System.Data.OleDb.OleDbType.VarWChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "ACGIH_TLV1", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("ACGIH_TLV2", Global.System.Data.OleDb.OleDbType.VarWChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "ACGIH_TLV2", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("ACGIH_TLV3", Global.System.Data.OleDb.OleDbType.VarWChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "ACGIH_TLV3", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("ACGIH_TLV4", Global.System.Data.OleDb.OleDbType.VarWChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "ACGIH_TLV4", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("ACGIH_TLV5", Global.System.Data.OleDb.OleDbType.VarWChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "ACGIH_TLV5", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("ACGIH_TLV6", Global.System.Data.OleDb.OleDbType.VarWChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "ACGIH_TLV6", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("Health2", Global.System.Data.OleDb.OleDbType.VarWChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "Health2", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("Physical2", Global.System.Data.OleDb.OleDbType.VarWChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "Physical2", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("Environmental2", Global.System.Data.OleDb.OleDbType.VarWChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "Environmental2", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("goTime", Global.System.Data.OleDb.OleDbType.[Date], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "goTime", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("Clones", Global.System.Data.OleDb.OleDbType.VarWChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "Clones", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("Issue_date", Global.System.Data.OleDb.OleDbType.[Date], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "Issue_date", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("Revision_date", Global.System.Data.OleDb.OleDbType.[Date], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "Revision_date", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("Version", Global.System.Data.OleDb.OleDbType.[Integer], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "Version", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("Note", Global.System.Data.OleDb.OleDbType.LongVarWChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "Note", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.UpdateCommand = New Global.System.Data.OleDb.OleDbCommand()
            Me._adapter.UpdateCommand.Connection = Me.Connection
            Me._adapter.UpdateCommand.CommandText = "UPDATE `Product Log` SET `Product_name` = ?, `OldUN` = ?, `Product_description` ="& _ 
                " ?, `Product_class` = ?, `Supplier_code` = ?, `Comp1` = ?, `WeightRangeLow1` = ?"& _ 
                ", `WeightRangeHigh1` = ?, `WeightRange1` = ?, `Comp2` = ?, `WeightRangeLow2` = ?"& _ 
                ", `WeightRangeHigh2` = ?, `WeightRange2` = ?, `Comp3` = ?, `WeightRangeLow3` = ?"& _ 
                ", `WeightRangeHigh3` = ?, `WeightRange3` = ?, `Comp4` = ?, `WeightRangeLow4` = ?"& _ 
                ", `WeightRangeHigh4` = ?, `WeightRange4` = ?, `Comp5` = ?, `WeightRangeLow5` = ?"& _ 
                ", `WeightRangeHigh5` = ?, `WeightRange5` = ?, `Comp6` = ?, `WeightRangeLow6` = ?"& _ 
                ", `WeightRangeHigh6` = ?, `WeightRange6` = ?, `pH` = ?, `Specific_gravity` = ?, "& _ 
                "`Boiling_point` = ?, `Freezing_point` = ?, `Solubility` = ?, `Vapor_density` = ?"& _ 
                ", `Vapor_pressure` = ?, `Appearance` = ?, `Odor` = ?, `Flash_point` = ?, `Explos"& _ 
                "ive_limits` = ?, `Autoignition_temperature` = ?, `EPA_number` = ?, `Decompositio"& _ 
                "n_temperature` = ?, `Product_RQ` = ?, `Odor_threshold` = ?, `Evaporation_rate` ="& _ 
                " ?, `Partition_coefficient` = ?, `VOC_content` = ?, `Viscosity` = ?, `HMIS` = ?,"& _ 
                " `NFPA` = ?, `CAS1` = ?, `CAS2` = ?, `CAS3` = ?, `CAS4` = ?, `CAS5` = ?, `CAS6` "& _ 
                "= ?, `OSHA_PEL1` = ?, `OSHA_PEL2` = ?, `OSHA_PEL3` = ?, `OSHA_PEL4` = ?, `OSHA_P"& _ 
                "EL5` = ?, `OSHA_PEL6` = ?, `ACGIH_TLV1` = ?, `ACGIH_TLV2` = ?, `ACGIH_TLV3` = ?,"& _ 
                " `ACGIH_TLV4` = ?, `ACGIH_TLV5` = ?, `ACGIH_TLV6` = ?, `Health2` = ?, `Physical2"& _ 
                "` = ?, `Environmental2` = ?, `goTime` = ?, `Clones` = ?, `Issue_date` = ?, `Revi"& _ 
                "sion_date` = ?, `Version` = ?, `Note` = ? WHERE ((`PID` = ?) AND ((? = 1 AND `Pr"& _ 
                "oduct_name` IS NULL) OR (`Product_name` = ?)) AND ((? = 1 AND `OldUN` IS NULL) O"& _ 
                "R (`OldUN` = ?)) AND ((? = 1 AND `Product_class` IS NULL) OR (`Product_class` = "& _ 
                "?)) AND ((? = 1 AND `Supplier_code` IS NULL) OR (`Supplier_code` = ?)) AND ((? ="& _ 
                " 1 AND `Comp1` IS NULL) OR (`Comp1` = ?)) AND ((? = 1 AND `WeightRangeLow1` IS N"& _ 
                "ULL) OR (`WeightRangeLow1` = ?)) AND ((? = 1 AND `WeightRangeHigh1` IS NULL) OR "& _ 
                "(`WeightRangeHigh1` = ?)) AND ((? = 1 AND `WeightRange1` IS NULL) OR (`WeightRan"& _ 
                "ge1` = ?)) AND ((? = 1 AND `Comp2` IS NULL) OR (`Comp2` = ?)) AND ((? = 1 AND `W"& _ 
                "eightRangeLow2` IS NULL) OR (`WeightRangeLow2` = ?)) AND ((? = 1 AND `WeightRang"& _ 
                "eHigh2` IS NULL) OR (`WeightRangeHigh2` = ?)) AND ((? = 1 AND `WeightRange2` IS "& _ 
                "NULL) OR (`WeightRange2` = ?)) AND ((? = 1 AND `Comp3` IS NULL) OR (`Comp3` = ?)"& _ 
                ") AND ((? = 1 AND `WeightRangeLow3` IS NULL) OR (`WeightRangeLow3` = ?)) AND ((?"& _ 
                " = 1 AND `WeightRangeHigh3` IS NULL) OR (`WeightRangeHigh3` = ?)) AND ((? = 1 AN"& _ 
                "D `WeightRange3` IS NULL) OR (`WeightRange3` = ?)) AND ((? = 1 AND `Comp4` IS NU"& _ 
                "LL) OR (`Comp4` = ?)) AND ((? = 1 AND `WeightRangeLow4` IS NULL) OR (`WeightRang"& _ 
                "eLow4` = ?)) AND ((? = 1 AND `WeightRangeHigh4` IS NULL) OR (`WeightRangeHigh4` "& _ 
                "= ?)) AND ((? = 1 AND `WeightRange4` IS NULL) OR (`WeightRange4` = ?)) AND ((? ="& _ 
                " 1 AND `Comp5` IS NULL) OR (`Comp5` = ?)) AND ((? = 1 AND `WeightRangeLow5` IS N"& _ 
                "ULL) OR (`WeightRangeLow5` = ?)) AND ((? = 1 AND `WeightRangeHigh5` IS NULL) OR "& _ 
                "(`WeightRangeHigh5` = ?)) AND ((? = 1 AND `WeightRange5` IS NULL) OR (`WeightRan"& _ 
                "ge5` = ?)) AND ((? = 1 AND `Comp6` IS NULL) OR (`Comp6` = ?)) AND ((? = 1 AND `W"& _ 
                "eightRangeLow6` IS NULL) OR (`WeightRangeLow6` = ?)) AND ((? = 1 AND `WeightRang"& _ 
                "eHigh6` IS NULL) OR (`WeightRangeHigh6` = ?)) AND ((? = 1 AND `WeightRange6` IS "& _ 
                "NULL) OR (`WeightRange6` = ?)) AND ((? = 1 AND `pH` IS NULL) OR (`pH` = ?)) AND "& _ 
                "((? = 1 AND `Specific_gravity` IS NULL) OR (`Specific_gravity` = ?)) AND ((? = 1"& _ 
                " AND `Boiling_point` IS NULL) OR (`Boiling_point` = ?)) AND ((? = 1 AND `Freezin"& _ 
                "g_point` IS NULL) OR (`Freezing_point` = ?)) AND ((? = 1 AND `Solubility` IS NUL"& _ 
                "L) OR (`Solubility` = ?)) AND ((? = 1 AND `Vapor_density` IS NULL) OR (`Vapor_de"& _ 
                "nsity` = ?)) AND ((? = 1 AND `Vapor_pressure` IS NULL) OR (`Vapor_pressure` = ?)"& _ 
                ") AND ((? = 1 AND `Appearance` IS NULL) OR (`Appearance` = ?)) AND ((? = 1 AND `"& _ 
                "Odor` IS NULL) OR (`Odor` = ?)) AND ((? = 1 AND `Flash_point` IS NULL) OR (`Flas"& _ 
                "h_point` = ?)) AND ((? = 1 AND `Explosive_limits` IS NULL) OR (`Explosive_limits"& _ 
                "` = ?)) AND ((? = 1 AND `Autoignition_temperature` IS NULL) OR (`Autoignition_te"& _ 
                "mperature` = ?)) AND ((? = 1 AND `EPA_number` IS NULL) OR (`EPA_number` = ?)) AN"& _ 
                "D ((? = 1 AND `Decomposition_temperature` IS NULL) OR (`Decomposition_temperatur"& _ 
                "e` = ?)) AND ((? = 1 AND `Product_RQ` IS NULL) OR (`Product_RQ` = ?)) AND ((? = "& _ 
                "1 AND `Odor_threshold` IS NULL) OR (`Odor_threshold` = ?)) AND ((? = 1 AND `Evap"& _ 
                "oration_rate` IS NULL) OR (`Evaporation_rate` = ?)) AND ((? = 1 AND `Partition_c"& _ 
                "oefficient` IS NULL) OR (`Partition_coefficient` = ?)) AND ((? = 1 AND `VOC_cont"& _ 
                "ent` IS NULL) OR (`VOC_content` = ?)) AND ((? = 1 AND `Viscosity` IS NULL) OR (`"& _ 
                "Viscosity` = ?)) AND ((? = 1 AND `HMIS` IS NULL) OR (`HMIS` = ?)) AND ((? = 1 AN"& _ 
                "D `NFPA` IS NULL) OR (`NFPA` = ?)) AND ((? = 1 AND `CAS1` IS NULL) OR (`CAS1` = "& _ 
                "?)) AND ((? = 1 AND `CAS2` IS NULL) OR (`CAS2` = ?)) AND ((? = 1 AND `CAS3` IS N"& _ 
                "ULL) OR (`CAS3` = ?)) AND ((? = 1 AND `CAS4` IS NULL) OR (`CAS4` = ?)) AND ((? ="& _ 
                " 1 AND `CAS5` IS NULL) OR (`CAS5` = ?)) AND ((? = 1 AND `CAS6` IS NULL) OR (`CAS"& _ 
                "6` = ?)) AND ((? = 1 AND `OSHA_PEL1` IS NULL) OR (`OSHA_PEL1` = ?)) AND ((? = 1 "& _ 
                "AND `OSHA_PEL2` IS NULL) OR (`OSHA_PEL2` = ?)) AND ((? = 1 AND `OSHA_PEL3` IS NU"& _ 
                "LL) OR (`OSHA_PEL3` = ?)) AND ((? = 1 AND `OSHA_PEL4` IS NULL) OR (`OSHA_PEL4` ="& _ 
                " ?)) AND ((? = 1 AND `OSHA_PEL5` IS NULL) OR (`OSHA_PEL5` = ?)) AND ((? = 1 AND "& _ 
                "`OSHA_PEL6` IS NULL) OR (`OSHA_PEL6` = ?)) AND ((? = 1 AND `ACGIH_TLV1` IS NULL)"& _ 
                " OR (`ACGIH_TLV1` = ?)) AND ((? = 1 AND `ACGIH_TLV2` IS NULL) OR (`ACGIH_TLV2` ="& _ 
                " ?)) AND ((? = 1 AND `ACGIH_TLV3` IS NULL) OR (`ACGIH_TLV3` = ?)) AND ((? = 1 AN"& _ 
                "D `ACGIH_TLV4` IS NULL) OR (`ACGIH_TLV4` = ?)) AND ((? = 1 AND `ACGIH_TLV5` IS N"& _ 
                "ULL) OR (`ACGIH_TLV5` = ?)) AND ((? = 1 AND `ACGIH_TLV6` IS NULL) OR (`ACGIH_TLV"& _ 
                "6` = ?)) AND ((? = 1 AND `Health2` IS NULL) OR (`Health2` = ?)) AND ((? = 1 AND "& _ 
                "`Physical2` IS NULL) OR (`Physical2` = ?)) AND ((? = 1 AND `Environmental2` IS N"& _ 
                "ULL) OR (`Environmental2` = ?)) AND ((? = 1 AND `goTime` IS NULL) OR (`goTime` ="& _ 
                " ?)) AND ((? = 1 AND `Clones` IS NULL) OR (`Clones` = ?)) AND ((? = 1 AND `Issue"& _ 
                "_date` IS NULL) OR (`Issue_date` = ?)) AND ((? = 1 AND `Revision_date` IS NULL) "& _ 
                "OR (`Revision_date` = ?)) AND ((? = 1 AND `Version` IS NULL) OR (`Version` = ?))"& _ 
                ")"
            Me._adapter.UpdateCommand.CommandType = Global.System.Data.CommandType.Text
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("Product_name", Global.System.Data.OleDb.OleDbType.VarWChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "Product_name", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("OldUN", Global.System.Data.OleDb.OleDbType.VarWChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "OldUN", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("Product_description", Global.System.Data.OleDb.OleDbType.LongVarWChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "Product_description", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("Product_class", Global.System.Data.OleDb.OleDbType.VarWChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "Product_class", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("Supplier_code", Global.System.Data.OleDb.OleDbType.[Integer], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "Supplier_code", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("Comp1", Global.System.Data.OleDb.OleDbType.VarWChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "Comp1", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("WeightRangeLow1", Global.System.Data.OleDb.OleDbType.[Single], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "WeightRangeLow1", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("WeightRangeHigh1", Global.System.Data.OleDb.OleDbType.[Single], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "WeightRangeHigh1", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("WeightRange1", Global.System.Data.OleDb.OleDbType.VarWChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "WeightRange1", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("Comp2", Global.System.Data.OleDb.OleDbType.VarWChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "Comp2", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("WeightRangeLow2", Global.System.Data.OleDb.OleDbType.[Single], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "WeightRangeLow2", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("WeightRangeHigh2", Global.System.Data.OleDb.OleDbType.[Single], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "WeightRangeHigh2", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("WeightRange2", Global.System.Data.OleDb.OleDbType.VarWChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "WeightRange2", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("Comp3", Global.System.Data.OleDb.OleDbType.VarWChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "Comp3", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("WeightRangeLow3", Global.System.Data.OleDb.OleDbType.[Single], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "WeightRangeLow3", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("WeightRangeHigh3", Global.System.Data.OleDb.OleDbType.[Single], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "WeightRangeHigh3", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("WeightRange3", Global.System.Data.OleDb.OleDbType.VarWChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "WeightRange3", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("Comp4", Global.System.Data.OleDb.OleDbType.VarWChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "Comp4", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("WeightRangeLow4", Global.System.Data.OleDb.OleDbType.[Single], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "WeightRangeLow4", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("WeightRangeHigh4", Global.System.Data.OleDb.OleDbType.[Single], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "WeightRangeHigh4", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("WeightRange4", Global.System.Data.OleDb.OleDbType.VarWChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "WeightRange4", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("Comp5", Global.System.Data.OleDb.OleDbType.VarWChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "Comp5", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("WeightRangeLow5", Global.System.Data.OleDb.OleDbType.[Single], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "WeightRangeLow5", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("WeightRangeHigh5", Global.System.Data.OleDb.OleDbType.[Single], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "WeightRangeHigh5", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("WeightRange5", Global.System.Data.OleDb.OleDbType.VarWChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "WeightRange5", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("Comp6", Global.System.Data.OleDb.OleDbType.VarWChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "Comp6", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("WeightRangeLow6", Global.System.Data.OleDb.OleDbType.[Single], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "WeightRangeLow6", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("WeightRangeHigh6", Global.System.Data.OleDb.OleDbType.[Single], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "WeightRangeHigh6", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("WeightRange6", Global.System.Data.OleDb.OleDbType.VarWChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "WeightRange6", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("pH", Global.System.Data.OleDb.OleDbType.VarWChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "pH", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("Specific_gravity", Global.System.Data.OleDb.OleDbType.VarWChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "Specific_gravity", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("Boiling_point", Global.System.Data.OleDb.OleDbType.VarWChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "Boiling_point", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("Freezing_point", Global.System.Data.OleDb.OleDbType.VarWChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "Freezing_point", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("Solubility", Global.System.Data.OleDb.OleDbType.VarWChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "Solubility", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("Vapor_density", Global.System.Data.OleDb.OleDbType.VarWChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "Vapor_density", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("Vapor_pressure", Global.System.Data.OleDb.OleDbType.VarWChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "Vapor_pressure", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("Appearance", Global.System.Data.OleDb.OleDbType.VarWChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "Appearance", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("Odor", Global.System.Data.OleDb.OleDbType.VarWChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "Odor", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("Flash_point", Global.System.Data.OleDb.OleDbType.VarWChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "Flash_point", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("Explosive_limits", Global.System.Data.OleDb.OleDbType.VarWChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "Explosive_limits", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("Autoignition_temperature", Global.System.Data.OleDb.OleDbType.VarWChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "Autoignition_temperature", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("EPA_number", Global.System.Data.OleDb.OleDbType.VarWChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "EPA_number", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("Decomposition_temperature", Global.System.Data.OleDb.OleDbType.VarWChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "Decomposition_temperature", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("Product_RQ", Global.System.Data.OleDb.OleDbType.VarWChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "Product_RQ", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("Odor_threshold", Global.System.Data.OleDb.OleDbType.VarWChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "Odor_threshold", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("Evaporation_rate", Global.System.Data.OleDb.OleDbType.VarWChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "Evaporation_rate", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("Partition_coefficient", Global.System.Data.OleDb.OleDbType.VarWChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "Partition_coefficient", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("VOC_content", Global.System.Data.OleDb.OleDbType.VarWChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "VOC_content", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("Viscosity", Global.System.Data.OleDb.OleDbType.VarWChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "Viscosity", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("HMIS", Global.System.Data.OleDb.OleDbType.VarWChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "HMIS", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("NFPA", Global.System.Data.OleDb.OleDbType.VarWChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "NFPA", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("CAS1", Global.System.Data.OleDb.OleDbType.VarWChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "CAS1", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("CAS2", Global.System.Data.OleDb.OleDbType.VarWChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "CAS2", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("CAS3", Global.System.Data.OleDb.OleDbType.VarWChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "CAS3", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("CAS4", Global.System.Data.OleDb.OleDbType.VarWChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "CAS4", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("CAS5", Global.System.Data.OleDb.OleDbType.VarWChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "CAS5", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("CAS6", Global.System.Data.OleDb.OleDbType.VarWChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "CAS6", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("OSHA_PEL1", Global.System.Data.OleDb.OleDbType.VarWChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "OSHA_PEL1", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("OSHA_PEL2", Global.System.Data.OleDb.OleDbType.VarWChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "OSHA_PEL2", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("OSHA_PEL3", Global.System.Data.OleDb.OleDbType.VarWChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "OSHA_PEL3", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("OSHA_PEL4", Global.System.Data.OleDb.OleDbType.VarWChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "OSHA_PEL4", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("OSHA_PEL5", Global.System.Data.OleDb.OleDbType.VarWChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "OSHA_PEL5", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("OSHA_PEL6", Global.System.Data.OleDb.OleDbType.VarWChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "OSHA_PEL6", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("ACGIH_TLV1", Global.System.Data.OleDb.OleDbType.VarWChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "ACGIH_TLV1", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("ACGIH_TLV2", Global.System.Data.OleDb.OleDbType.VarWChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "ACGIH_TLV2", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("ACGIH_TLV3", Global.System.Data.OleDb.OleDbType.VarWChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "ACGIH_TLV3", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("ACGIH_TLV4", Global.System.Data.OleDb.OleDbType.VarWChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "ACGIH_TLV4", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("ACGIH_TLV5", Global.System.Data.OleDb.OleDbType.VarWChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "ACGIH_TLV5", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("ACGIH_TLV6", Global.System.Data.OleDb.OleDbType.VarWChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "ACGIH_TLV6", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("Health2", Global.System.Data.OleDb.OleDbType.VarWChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "Health2", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("Physical2", Global.System.Data.OleDb.OleDbType.VarWChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "Physical2", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("Environmental2", Global.System.Data.OleDb.OleDbType.VarWChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "Environmental2", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("goTime", Global.System.Data.OleDb.OleDbType.[Date], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "goTime", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("Clones", Global.System.Data.OleDb.OleDbType.VarWChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "Clones", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("Issue_date", Global.System.Data.OleDb.OleDbType.[Date], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "Issue_date", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("Revision_date", Global.System.Data.OleDb.OleDbType.[Date], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "Revision_date", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("Version", Global.System.Data.OleDb.OleDbType.[Integer], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "Version", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("Note", Global.System.Data.OleDb.OleDbType.LongVarWChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "Note", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("Original_PID", Global.System.Data.OleDb.OleDbType.[Integer], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "PID", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("IsNull_Product_name", Global.System.Data.OleDb.OleDbType.[Integer], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "Product_name", Global.System.Data.DataRowVersion.Original, true, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("Original_Product_name", Global.System.Data.OleDb.OleDbType.VarWChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "Product_name", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("IsNull_OldUN", Global.System.Data.OleDb.OleDbType.[Integer], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "OldUN", Global.System.Data.DataRowVersion.Original, true, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("Original_OldUN", Global.System.Data.OleDb.OleDbType.VarWChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "OldUN", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("IsNull_Product_class", Global.System.Data.OleDb.OleDbType.[Integer], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "Product_class", Global.System.Data.DataRowVersion.Original, true, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("Original_Product_class", Global.System.Data.OleDb.OleDbType.VarWChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "Product_class", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("IsNull_Supplier_code", Global.System.Data.OleDb.OleDbType.[Integer], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "Supplier_code", Global.System.Data.DataRowVersion.Original, true, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("Original_Supplier_code", Global.System.Data.OleDb.OleDbType.[Integer], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "Supplier_code", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("IsNull_Comp1", Global.System.Data.OleDb.OleDbType.[Integer], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "Comp1", Global.System.Data.DataRowVersion.Original, true, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("Original_Comp1", Global.System.Data.OleDb.OleDbType.VarWChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "Comp1", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("IsNull_WeightRangeLow1", Global.System.Data.OleDb.OleDbType.[Integer], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "WeightRangeLow1", Global.System.Data.DataRowVersion.Original, true, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("Original_WeightRangeLow1", Global.System.Data.OleDb.OleDbType.[Single], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "WeightRangeLow1", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("IsNull_WeightRangeHigh1", Global.System.Data.OleDb.OleDbType.[Integer], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "WeightRangeHigh1", Global.System.Data.DataRowVersion.Original, true, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("Original_WeightRangeHigh1", Global.System.Data.OleDb.OleDbType.[Single], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "WeightRangeHigh1", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("IsNull_WeightRange1", Global.System.Data.OleDb.OleDbType.[Integer], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "WeightRange1", Global.System.Data.DataRowVersion.Original, true, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("Original_WeightRange1", Global.System.Data.OleDb.OleDbType.VarWChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "WeightRange1", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("IsNull_Comp2", Global.System.Data.OleDb.OleDbType.[Integer], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "Comp2", Global.System.Data.DataRowVersion.Original, true, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("Original_Comp2", Global.System.Data.OleDb.OleDbType.VarWChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "Comp2", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("IsNull_WeightRangeLow2", Global.System.Data.OleDb.OleDbType.[Integer], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "WeightRangeLow2", Global.System.Data.DataRowVersion.Original, true, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("Original_WeightRangeLow2", Global.System.Data.OleDb.OleDbType.[Single], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "WeightRangeLow2", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("IsNull_WeightRangeHigh2", Global.System.Data.OleDb.OleDbType.[Integer], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "WeightRangeHigh2", Global.System.Data.DataRowVersion.Original, true, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("Original_WeightRangeHigh2", Global.System.Data.OleDb.OleDbType.[Single], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "WeightRangeHigh2", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("IsNull_WeightRange2", Global.System.Data.OleDb.OleDbType.[Integer], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "WeightRange2", Global.System.Data.DataRowVersion.Original, true, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("Original_WeightRange2", Global.System.Data.OleDb.OleDbType.VarWChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "WeightRange2", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("IsNull_Comp3", Global.System.Data.OleDb.OleDbType.[Integer], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "Comp3", Global.System.Data.DataRowVersion.Original, true, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("Original_Comp3", Global.System.Data.OleDb.OleDbType.VarWChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "Comp3", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("IsNull_WeightRangeLow3", Global.System.Data.OleDb.OleDbType.[Integer], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "WeightRangeLow3", Global.System.Data.DataRowVersion.Original, true, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("Original_WeightRangeLow3", Global.System.Data.OleDb.OleDbType.[Single], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "WeightRangeLow3", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("IsNull_WeightRangeHigh3", Global.System.Data.OleDb.OleDbType.[Integer], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "WeightRangeHigh3", Global.System.Data.DataRowVersion.Original, true, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("Original_WeightRangeHigh3", Global.System.Data.OleDb.OleDbType.[Single], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "WeightRangeHigh3", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("IsNull_WeightRange3", Global.System.Data.OleDb.OleDbType.[Integer], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "WeightRange3", Global.System.Data.DataRowVersion.Original, true, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("Original_WeightRange3", Global.System.Data.OleDb.OleDbType.VarWChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "WeightRange3", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("IsNull_Comp4", Global.System.Data.OleDb.OleDbType.[Integer], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "Comp4", Global.System.Data.DataRowVersion.Original, true, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("Original_Comp4", Global.System.Data.OleDb.OleDbType.VarWChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "Comp4", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("IsNull_WeightRangeLow4", Global.System.Data.OleDb.OleDbType.[Integer], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "WeightRangeLow4", Global.System.Data.DataRowVersion.Original, true, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("Original_WeightRangeLow4", Global.System.Data.OleDb.OleDbType.[Single], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "WeightRangeLow4", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("IsNull_WeightRangeHigh4", Global.System.Data.OleDb.OleDbType.[Integer], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "WeightRangeHigh4", Global.System.Data.DataRowVersion.Original, true, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("Original_WeightRangeHigh4", Global.System.Data.OleDb.OleDbType.[Single], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "WeightRangeHigh4", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("IsNull_WeightRange4", Global.System.Data.OleDb.OleDbType.[Integer], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "WeightRange4", Global.System.Data.DataRowVersion.Original, true, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("Original_WeightRange4", Global.System.Data.OleDb.OleDbType.VarWChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "WeightRange4", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("IsNull_Comp5", Global.System.Data.OleDb.OleDbType.[Integer], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "Comp5", Global.System.Data.DataRowVersion.Original, true, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("Original_Comp5", Global.System.Data.OleDb.OleDbType.VarWChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "Comp5", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("IsNull_WeightRangeLow5", Global.System.Data.OleDb.OleDbType.[Integer], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "WeightRangeLow5", Global.System.Data.DataRowVersion.Original, true, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("Original_WeightRangeLow5", Global.System.Data.OleDb.OleDbType.[Single], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "WeightRangeLow5", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("IsNull_WeightRangeHigh5", Global.System.Data.OleDb.OleDbType.[Integer], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "WeightRangeHigh5", Global.System.Data.DataRowVersion.Original, true, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("Original_WeightRangeHigh5", Global.System.Data.OleDb.OleDbType.[Single], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "WeightRangeHigh5", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("IsNull_WeightRange5", Global.System.Data.OleDb.OleDbType.[Integer], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "WeightRange5", Global.System.Data.DataRowVersion.Original, true, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("Original_WeightRange5", Global.System.Data.OleDb.OleDbType.VarWChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "WeightRange5", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("IsNull_Comp6", Global.System.Data.OleDb.OleDbType.[Integer], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "Comp6", Global.System.Data.DataRowVersion.Original, true, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("Original_Comp6", Global.System.Data.OleDb.OleDbType.VarWChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "Comp6", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("IsNull_WeightRangeLow6", Global.System.Data.OleDb.OleDbType.[Integer], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "WeightRangeLow6", Global.System.Data.DataRowVersion.Original, true, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("Original_WeightRangeLow6", Global.System.Data.OleDb.OleDbType.[Single], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "WeightRangeLow6", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("IsNull_WeightRangeHigh6", Global.System.Data.OleDb.OleDbType.[Integer], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "WeightRangeHigh6", Global.System.Data.DataRowVersion.Original, true, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("Original_WeightRangeHigh6", Global.System.Data.OleDb.OleDbType.[Single], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "WeightRangeHigh6", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("IsNull_WeightRange6", Global.System.Data.OleDb.OleDbType.[Integer], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "WeightRange6", Global.System.Data.DataRowVersion.Original, true, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("Original_WeightRange6", Global.System.Data.OleDb.OleDbType.VarWChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "WeightRange6", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("IsNull_pH", Global.System.Data.OleDb.OleDbType.[Integer], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "pH", Global.System.Data.DataRowVersion.Original, true, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("Original_pH", Global.System.Data.OleDb.OleDbType.VarWChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "pH", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("IsNull_Specific_gravity", Global.System.Data.OleDb.OleDbType.[Integer], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "Specific_gravity", Global.System.Data.DataRowVersion.Original, true, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("Original_Specific_gravity", Global.System.Data.OleDb.OleDbType.VarWChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "Specific_gravity", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("IsNull_Boiling_point", Global.System.Data.OleDb.OleDbType.[Integer], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "Boiling_point", Global.System.Data.DataRowVersion.Original, true, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("Original_Boiling_point", Global.System.Data.OleDb.OleDbType.VarWChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "Boiling_point", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("IsNull_Freezing_point", Global.System.Data.OleDb.OleDbType.[Integer], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "Freezing_point", Global.System.Data.DataRowVersion.Original, true, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("Original_Freezing_point", Global.System.Data.OleDb.OleDbType.VarWChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "Freezing_point", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("IsNull_Solubility", Global.System.Data.OleDb.OleDbType.[Integer], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "Solubility", Global.System.Data.DataRowVersion.Original, true, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("Original_Solubility", Global.System.Data.OleDb.OleDbType.VarWChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "Solubility", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("IsNull_Vapor_density", Global.System.Data.OleDb.OleDbType.[Integer], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "Vapor_density", Global.System.Data.DataRowVersion.Original, true, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("Original_Vapor_density", Global.System.Data.OleDb.OleDbType.VarWChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "Vapor_density", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("IsNull_Vapor_pressure", Global.System.Data.OleDb.OleDbType.[Integer], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "Vapor_pressure", Global.System.Data.DataRowVersion.Original, true, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("Original_Vapor_pressure", Global.System.Data.OleDb.OleDbType.VarWChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "Vapor_pressure", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("IsNull_Appearance", Global.System.Data.OleDb.OleDbType.[Integer], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "Appearance", Global.System.Data.DataRowVersion.Original, true, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("Original_Appearance", Global.System.Data.OleDb.OleDbType.VarWChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "Appearance", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("IsNull_Odor", Global.System.Data.OleDb.OleDbType.[Integer], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "Odor", Global.System.Data.DataRowVersion.Original, true, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("Original_Odor", Global.System.Data.OleDb.OleDbType.VarWChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "Odor", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("IsNull_Flash_point", Global.System.Data.OleDb.OleDbType.[Integer], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "Flash_point", Global.System.Data.DataRowVersion.Original, true, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("Original_Flash_point", Global.System.Data.OleDb.OleDbType.VarWChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "Flash_point", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("IsNull_Explosive_limits", Global.System.Data.OleDb.OleDbType.[Integer], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "Explosive_limits", Global.System.Data.DataRowVersion.Original, true, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("Original_Explosive_limits", Global.System.Data.OleDb.OleDbType.VarWChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "Explosive_limits", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("IsNull_Autoignition_temperature", Global.System.Data.OleDb.OleDbType.[Integer], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "Autoignition_temperature", Global.System.Data.DataRowVersion.Original, true, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("Original_Autoignition_temperature", Global.System.Data.OleDb.OleDbType.VarWChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "Autoignition_temperature", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("IsNull_EPA_number", Global.System.Data.OleDb.OleDbType.[Integer], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "EPA_number", Global.System.Data.DataRowVersion.Original, true, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("Original_EPA_number", Global.System.Data.OleDb.OleDbType.VarWChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "EPA_number", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("IsNull_Decomposition_temperature", Global.System.Data.OleDb.OleDbType.[Integer], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "Decomposition_temperature", Global.System.Data.DataRowVersion.Original, true, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("Original_Decomposition_temperature", Global.System.Data.OleDb.OleDbType.VarWChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "Decomposition_temperature", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("IsNull_Product_RQ", Global.System.Data.OleDb.OleDbType.[Integer], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "Product_RQ", Global.System.Data.DataRowVersion.Original, true, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("Original_Product_RQ", Global.System.Data.OleDb.OleDbType.VarWChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "Product_RQ", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("IsNull_Odor_threshold", Global.System.Data.OleDb.OleDbType.[Integer], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "Odor_threshold", Global.System.Data.DataRowVersion.Original, true, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("Original_Odor_threshold", Global.System.Data.OleDb.OleDbType.VarWChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "Odor_threshold", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("IsNull_Evaporation_rate", Global.System.Data.OleDb.OleDbType.[Integer], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "Evaporation_rate", Global.System.Data.DataRowVersion.Original, true, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("Original_Evaporation_rate", Global.System.Data.OleDb.OleDbType.VarWChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "Evaporation_rate", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("IsNull_Partition_coefficient", Global.System.Data.OleDb.OleDbType.[Integer], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "Partition_coefficient", Global.System.Data.DataRowVersion.Original, true, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("Original_Partition_coefficient", Global.System.Data.OleDb.OleDbType.VarWChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "Partition_coefficient", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("IsNull_VOC_content", Global.System.Data.OleDb.OleDbType.[Integer], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "VOC_content", Global.System.Data.DataRowVersion.Original, true, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("Original_VOC_content", Global.System.Data.OleDb.OleDbType.VarWChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "VOC_content", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("IsNull_Viscosity", Global.System.Data.OleDb.OleDbType.[Integer], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "Viscosity", Global.System.Data.DataRowVersion.Original, true, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("Original_Viscosity", Global.System.Data.OleDb.OleDbType.VarWChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "Viscosity", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("IsNull_HMIS", Global.System.Data.OleDb.OleDbType.[Integer], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "HMIS", Global.System.Data.DataRowVersion.Original, true, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("Original_HMIS", Global.System.Data.OleDb.OleDbType.VarWChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "HMIS", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("IsNull_NFPA", Global.System.Data.OleDb.OleDbType.[Integer], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "NFPA", Global.System.Data.DataRowVersion.Original, true, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("Original_NFPA", Global.System.Data.OleDb.OleDbType.VarWChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "NFPA", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("IsNull_CAS1", Global.System.Data.OleDb.OleDbType.[Integer], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "CAS1", Global.System.Data.DataRowVersion.Original, true, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("Original_CAS1", Global.System.Data.OleDb.OleDbType.VarWChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "CAS1", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("IsNull_CAS2", Global.System.Data.OleDb.OleDbType.[Integer], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "CAS2", Global.System.Data.DataRowVersion.Original, true, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("Original_CAS2", Global.System.Data.OleDb.OleDbType.VarWChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "CAS2", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("IsNull_CAS3", Global.System.Data.OleDb.OleDbType.[Integer], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "CAS3", Global.System.Data.DataRowVersion.Original, true, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("Original_CAS3", Global.System.Data.OleDb.OleDbType.VarWChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "CAS3", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("IsNull_CAS4", Global.System.Data.OleDb.OleDbType.[Integer], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "CAS4", Global.System.Data.DataRowVersion.Original, true, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("Original_CAS4", Global.System.Data.OleDb.OleDbType.VarWChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "CAS4", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("IsNull_CAS5", Global.System.Data.OleDb.OleDbType.[Integer], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "CAS5", Global.System.Data.DataRowVersion.Original, true, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("Original_CAS5", Global.System.Data.OleDb.OleDbType.VarWChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "CAS5", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("IsNull_CAS6", Global.System.Data.OleDb.OleDbType.[Integer], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "CAS6", Global.System.Data.DataRowVersion.Original, true, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("Original_CAS6", Global.System.Data.OleDb.OleDbType.VarWChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "CAS6", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("IsNull_OSHA_PEL1", Global.System.Data.OleDb.OleDbType.[Integer], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "OSHA_PEL1", Global.System.Data.DataRowVersion.Original, true, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("Original_OSHA_PEL1", Global.System.Data.OleDb.OleDbType.VarWChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "OSHA_PEL1", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("IsNull_OSHA_PEL2", Global.System.Data.OleDb.OleDbType.[Integer], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "OSHA_PEL2", Global.System.Data.DataRowVersion.Original, true, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("Original_OSHA_PEL2", Global.System.Data.OleDb.OleDbType.VarWChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "OSHA_PEL2", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("IsNull_OSHA_PEL3", Global.System.Data.OleDb.OleDbType.[Integer], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "OSHA_PEL3", Global.System.Data.DataRowVersion.Original, true, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("Original_OSHA_PEL3", Global.System.Data.OleDb.OleDbType.VarWChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "OSHA_PEL3", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("IsNull_OSHA_PEL4", Global.System.Data.OleDb.OleDbType.[Integer], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "OSHA_PEL4", Global.System.Data.DataRowVersion.Original, true, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("Original_OSHA_PEL4", Global.System.Data.OleDb.OleDbType.VarWChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "OSHA_PEL4", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("IsNull_OSHA_PEL5", Global.System.Data.OleDb.OleDbType.[Integer], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "OSHA_PEL5", Global.System.Data.DataRowVersion.Original, true, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("Original_OSHA_PEL5", Global.System.Data.OleDb.OleDbType.VarWChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "OSHA_PEL5", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("IsNull_OSHA_PEL6", Global.System.Data.OleDb.OleDbType.[Integer], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "OSHA_PEL6", Global.System.Data.DataRowVersion.Original, true, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("Original_OSHA_PEL6", Global.System.Data.OleDb.OleDbType.VarWChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "OSHA_PEL6", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("IsNull_ACGIH_TLV1", Global.System.Data.OleDb.OleDbType.[Integer], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "ACGIH_TLV1", Global.System.Data.DataRowVersion.Original, true, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("Original_ACGIH_TLV1", Global.System.Data.OleDb.OleDbType.VarWChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "ACGIH_TLV1", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("IsNull_ACGIH_TLV2", Global.System.Data.OleDb.OleDbType.[Integer], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "ACGIH_TLV2", Global.System.Data.DataRowVersion.Original, true, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("Original_ACGIH_TLV2", Global.System.Data.OleDb.OleDbType.VarWChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "ACGIH_TLV2", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("IsNull_ACGIH_TLV3", Global.System.Data.OleDb.OleDbType.[Integer], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "ACGIH_TLV3", Global.System.Data.DataRowVersion.Original, true, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("Original_ACGIH_TLV3", Global.System.Data.OleDb.OleDbType.VarWChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "ACGIH_TLV3", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("IsNull_ACGIH_TLV4", Global.System.Data.OleDb.OleDbType.[Integer], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "ACGIH_TLV4", Global.System.Data.DataRowVersion.Original, true, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("Original_ACGIH_TLV4", Global.System.Data.OleDb.OleDbType.VarWChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "ACGIH_TLV4", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("IsNull_ACGIH_TLV5", Global.System.Data.OleDb.OleDbType.[Integer], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "ACGIH_TLV5", Global.System.Data.DataRowVersion.Original, true, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("Original_ACGIH_TLV5", Global.System.Data.OleDb.OleDbType.VarWChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "ACGIH_TLV5", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("IsNull_ACGIH_TLV6", Global.System.Data.OleDb.OleDbType.[Integer], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "ACGIH_TLV6", Global.System.Data.DataRowVersion.Original, true, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("Original_ACGIH_TLV6", Global.System.Data.OleDb.OleDbType.VarWChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "ACGIH_TLV6", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("IsNull_Health2", Global.System.Data.OleDb.OleDbType.[Integer], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "Health2", Global.System.Data.DataRowVersion.Original, true, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("Original_Health2", Global.System.Data.OleDb.OleDbType.VarWChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "Health2", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("IsNull_Physical2", Global.System.Data.OleDb.OleDbType.[Integer], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "Physical2", Global.System.Data.DataRowVersion.Original, true, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("Original_Physical2", Global.System.Data.OleDb.OleDbType.VarWChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "Physical2", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("IsNull_Environmental2", Global.System.Data.OleDb.OleDbType.[Integer], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "Environmental2", Global.System.Data.DataRowVersion.Original, true, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("Original_Environmental2", Global.System.Data.OleDb.OleDbType.VarWChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "Environmental2", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("IsNull_goTime", Global.System.Data.OleDb.OleDbType.[Integer], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "goTime", Global.System.Data.DataRowVersion.Original, true, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("Original_goTime", Global.System.Data.OleDb.OleDbType.[Date], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "goTime", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("IsNull_Clones", Global.System.Data.OleDb.OleDbType.[Integer], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "Clones", Global.System.Data.DataRowVersion.Original, true, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("Original_Clones", Global.System.Data.OleDb.OleDbType.VarWChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "Clones", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("IsNull_Issue_date", Global.System.Data.OleDb.OleDbType.[Integer], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "Issue_date", Global.System.Data.DataRowVersion.Original, true, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("Original_Issue_date", Global.System.Data.OleDb.OleDbType.[Date], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "Issue_date", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("IsNull_Revision_date", Global.System.Data.OleDb.OleDbType.[Integer], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "Revision_date", Global.System.Data.DataRowVersion.Original, true, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("Original_Revision_date", Global.System.Data.OleDb.OleDbType.[Date], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "Revision_date", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("IsNull_Version", Global.System.Data.OleDb.OleDbType.[Integer], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "Version", Global.System.Data.DataRowVersion.Original, true, Nothing))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("Original_Version", Global.System.Data.OleDb.OleDbType.[Integer], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "Version", Global.System.Data.DataRowVersion.Original, false, Nothing))
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Private Sub InitConnection()
            Me._connection = New Global.System.Data.OleDb.OleDbConnection()
            Me._connection.ConnectionString = Global.Interfacer5.MySettings.Default.Dossier
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Private Sub InitCommandCollection()
            Me._commandCollection = New Global.System.Data.OleDb.OleDbCommand(1) {}
            Me._commandCollection(0) = New Global.System.Data.OleDb.OleDbCommand()
            Me._commandCollection(0).Connection = Me.Connection
            Me._commandCollection(0).CommandText = "SELECT PID, Product_name, OldUN, Product_description, Product_class, Supplier_cod"& _ 
                "e, Comp1, WeightRangeLow1, WeightRangeHigh1, WeightRange1, Comp2, WeightRangeLow"& _ 
                "2, WeightRangeHigh2, WeightRange2, Comp3, WeightRangeLow3, WeightRangeHigh3, Wei"& _ 
                "ghtRange3, Comp4, WeightRangeLow4, WeightRangeHigh4, WeightRange4, Comp5, Weight"& _ 
                "RangeLow5, WeightRangeHigh5, WeightRange5, Comp6, WeightRangeLow6, WeightRangeHi"& _ 
                "gh6, WeightRange6, pH, Specific_gravity, Boiling_point, Freezing_point, Solubili"& _ 
                "ty, Vapor_density, Vapor_pressure, Appearance, Odor, Flash_point, Explosive_limi"& _ 
                "ts, Autoignition_temperature, EPA_number, Decomposition_temperature, Product_RQ,"& _ 
                " Odor_threshold, Evaporation_rate, Partition_coefficient, VOC_content, Viscosity"& _ 
                ", HMIS, NFPA, CAS1, CAS2, CAS3, CAS4, CAS5, CAS6, OSHA_PEL1, OSHA_PEL2, OSHA_PEL"& _ 
                "3, OSHA_PEL4, OSHA_PEL5, OSHA_PEL6, ACGIH_TLV1, ACGIH_TLV2, ACGIH_TLV3, ACGIH_TL"& _ 
                "V4, ACGIH_TLV5, ACGIH_TLV6, Health2, Physical2, Environmental2, goTime, Clones, "& _ 
                "Issue_date, Revision_date, Version, [Note] FROM [Product Log]"
            Me._commandCollection(0).CommandType = Global.System.Data.CommandType.Text
            Me._commandCollection(1) = New Global.System.Data.OleDb.OleDbCommand()
            Me._commandCollection(1).Connection = Me.Connection
            Me._commandCollection(1).CommandText = "SELECT        [Safety Dance].*, [Product Log].*"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"FROM            ([Product Log] I"& _ 
                "NNER JOIN"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                         [Safety Dance] ON [Product Log].PID = [Safet"& _ 
                "y Dance].SDID)"
            Me._commandCollection(1).CommandType = Global.System.Data.CommandType.Text
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Fill, true)>  _
        Public Overloads Overridable Function Fill(ByVal dataTable As Dossier.Product_LogDataTable) As Integer
            Me.Adapter.SelectCommand = Me.CommandCollection(0)
            If (Me.ClearBeforeFill = true) Then
                dataTable.Clear
            End If
            Dim returnValue As Integer = Me.Adapter.Fill(dataTable)
            Return returnValue
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.[Select], true)>  _
        Public Overloads Overridable Function GetData() As Dossier.Product_LogDataTable
            Me.Adapter.SelectCommand = Me.CommandCollection(0)
            Dim dataTable As Dossier.Product_LogDataTable = New Dossier.Product_LogDataTable()
            Me.Adapter.Fill(dataTable)
            Return dataTable
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Fill, false)>  _
        Public Overloads Overridable Function FillByBigDance(ByVal dataTable As Dossier.Product_LogDataTable) As Integer
            Me.Adapter.SelectCommand = Me.CommandCollection(1)
            If (Me.ClearBeforeFill = true) Then
                dataTable.Clear
            End If
            Dim returnValue As Integer = Me.Adapter.Fill(dataTable)
            Return returnValue
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.[Select], false)>  _
        Public Overloads Overridable Function GetDataByBigDance() As Dossier.Product_LogDataTable
            Me.Adapter.SelectCommand = Me.CommandCollection(1)
            Dim dataTable As Dossier.Product_LogDataTable = New Dossier.Product_LogDataTable()
            Me.Adapter.Fill(dataTable)
            Return dataTable
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function Update(ByVal dataTable As Dossier.Product_LogDataTable) As Integer
            Return Me.Adapter.Update(dataTable)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function Update(ByVal dataSet As Dossier) As Integer
            Return Me.Adapter.Update(dataSet, "Product Log")
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function Update(ByVal dataRow As Global.System.Data.DataRow) As Integer
            Return Me.Adapter.Update(New Global.System.Data.DataRow() {dataRow})
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function Update(ByVal dataRows() As Global.System.Data.DataRow) As Integer
            Return Me.Adapter.Update(dataRows)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Delete, true)>  _
        Public Overloads Overridable Function Delete( _
                    ByVal Original_PID As Integer,  _
                    ByVal Original_Product_name As String,  _
                    ByVal Original_OldUN As String,  _
                    ByVal Original_Product_class As String,  _
                    ByVal Original_Supplier_code As Global.System.Nullable(Of Integer),  _
                    ByVal Original_Comp1 As String,  _
                    ByVal Original_WeightRangeLow1 As Global.System.Nullable(Of Single),  _
                    ByVal Original_WeightRangeHigh1 As Global.System.Nullable(Of Single),  _
                    ByVal Original_WeightRange1 As String,  _
                    ByVal Original_Comp2 As String,  _
                    ByVal Original_WeightRangeLow2 As Global.System.Nullable(Of Single),  _
                    ByVal Original_WeightRangeHigh2 As Global.System.Nullable(Of Single),  _
                    ByVal Original_WeightRange2 As String,  _
                    ByVal Original_Comp3 As String,  _
                    ByVal Original_WeightRangeLow3 As Global.System.Nullable(Of Single),  _
                    ByVal Original_WeightRangeHigh3 As Global.System.Nullable(Of Single),  _
                    ByVal Original_WeightRange3 As String,  _
                    ByVal Original_Comp4 As String,  _
                    ByVal Original_WeightRangeLow4 As Global.System.Nullable(Of Single),  _
                    ByVal Original_WeightRangeHigh4 As Global.System.Nullable(Of Single),  _
                    ByVal Original_WeightRange4 As String,  _
                    ByVal Original_Comp5 As String,  _
                    ByVal Original_WeightRangeLow5 As Global.System.Nullable(Of Single),  _
                    ByVal Original_WeightRangeHigh5 As Global.System.Nullable(Of Single),  _
                    ByVal Original_WeightRange5 As String,  _
                    ByVal Original_Comp6 As String,  _
                    ByVal Original_WeightRangeLow6 As Global.System.Nullable(Of Single),  _
                    ByVal Original_WeightRangeHigh6 As Global.System.Nullable(Of Single),  _
                    ByVal Original_WeightRange6 As String,  _
                    ByVal Original_pH As String,  _
                    ByVal Original_Specific_gravity As String,  _
                    ByVal Original_Boiling_point As String,  _
                    ByVal Original_Freezing_point As String,  _
                    ByVal Original_Solubility As String,  _
                    ByVal Original_Vapor_density As String,  _
                    ByVal Original_Vapor_pressure As String,  _
                    ByVal Original_Appearance As String,  _
                    ByVal Original_Odor As String,  _
                    ByVal Original_Flash_point As String,  _
                    ByVal Original_Explosive_limits As String,  _
                    ByVal Original_Autoignition_temperature As String,  _
                    ByVal Original_EPA_number As String,  _
                    ByVal Original_Decomposition_temperature As String,  _
                    ByVal Original_Product_RQ As String,  _
                    ByVal Original_Odor_threshold As String,  _
                    ByVal Original_Evaporation_rate As String,  _
                    ByVal Original_Partition_coefficient As String,  _
                    ByVal Original_VOC_content As String,  _
                    ByVal Original_Viscosity As String,  _
                    ByVal Original_HMIS As String,  _
                    ByVal Original_NFPA As String,  _
                    ByVal Original_CAS1 As String,  _
                    ByVal Original_CAS2 As String,  _
                    ByVal Original_CAS3 As String,  _
                    ByVal Original_CAS4 As String,  _
                    ByVal Original_CAS5 As String,  _
                    ByVal Original_CAS6 As String,  _
                    ByVal Original_OSHA_PEL1 As String,  _
                    ByVal Original_OSHA_PEL2 As String,  _
                    ByVal Original_OSHA_PEL3 As String,  _
                    ByVal Original_OSHA_PEL4 As String,  _
                    ByVal Original_OSHA_PEL5 As String,  _
                    ByVal Original_OSHA_PEL6 As String,  _
                    ByVal Original_ACGIH_TLV1 As String,  _
                    ByVal Original_ACGIH_TLV2 As String,  _
                    ByVal Original_ACGIH_TLV3 As String,  _
                    ByVal Original_ACGIH_TLV4 As String,  _
                    ByVal Original_ACGIH_TLV5 As String,  _
                    ByVal Original_ACGIH_TLV6 As String,  _
                    ByVal Original_Health2 As String,  _
                    ByVal Original_Physical2 As String,  _
                    ByVal Original_Environmental2 As String,  _
                    ByVal Original_goTime As Global.System.Nullable(Of Date),  _
                    ByVal Original_Clones As String,  _
                    ByVal Original_Issue_date As Global.System.Nullable(Of Date),  _
                    ByVal Original_Revision_date As Global.System.Nullable(Of Date),  _
                    ByVal Original_Version As Global.System.Nullable(Of Integer)) As Integer
            Me.Adapter.DeleteCommand.Parameters(0).Value = CType(Original_PID,Integer)
            If (Original_Product_name Is Nothing) Then
                Throw New Global.System.ArgumentNullException("Original_Product_name")
            Else
                Me.Adapter.DeleteCommand.Parameters(1).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(2).Value = CType(Original_Product_name,String)
            End If
            If (Original_OldUN Is Nothing) Then
                Me.Adapter.DeleteCommand.Parameters(3).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(4).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.DeleteCommand.Parameters(3).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(4).Value = CType(Original_OldUN,String)
            End If
            If (Original_Product_class Is Nothing) Then
                Me.Adapter.DeleteCommand.Parameters(5).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(6).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.DeleteCommand.Parameters(5).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(6).Value = CType(Original_Product_class,String)
            End If
            If (Original_Supplier_code.HasValue = true) Then
                Me.Adapter.DeleteCommand.Parameters(7).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(8).Value = CType(Original_Supplier_code.Value,Integer)
            Else
                Me.Adapter.DeleteCommand.Parameters(7).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(8).Value = Global.System.DBNull.Value
            End If
            If (Original_Comp1 Is Nothing) Then
                Me.Adapter.DeleteCommand.Parameters(9).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(10).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.DeleteCommand.Parameters(9).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(10).Value = CType(Original_Comp1,String)
            End If
            If (Original_WeightRangeLow1.HasValue = true) Then
                Me.Adapter.DeleteCommand.Parameters(11).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(12).Value = CType(Original_WeightRangeLow1.Value,Single)
            Else
                Me.Adapter.DeleteCommand.Parameters(11).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(12).Value = Global.System.DBNull.Value
            End If
            If (Original_WeightRangeHigh1.HasValue = true) Then
                Me.Adapter.DeleteCommand.Parameters(13).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(14).Value = CType(Original_WeightRangeHigh1.Value,Single)
            Else
                Me.Adapter.DeleteCommand.Parameters(13).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(14).Value = Global.System.DBNull.Value
            End If
            If (Original_WeightRange1 Is Nothing) Then
                Me.Adapter.DeleteCommand.Parameters(15).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(16).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.DeleteCommand.Parameters(15).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(16).Value = CType(Original_WeightRange1,String)
            End If
            If (Original_Comp2 Is Nothing) Then
                Me.Adapter.DeleteCommand.Parameters(17).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(18).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.DeleteCommand.Parameters(17).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(18).Value = CType(Original_Comp2,String)
            End If
            If (Original_WeightRangeLow2.HasValue = true) Then
                Me.Adapter.DeleteCommand.Parameters(19).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(20).Value = CType(Original_WeightRangeLow2.Value,Single)
            Else
                Me.Adapter.DeleteCommand.Parameters(19).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(20).Value = Global.System.DBNull.Value
            End If
            If (Original_WeightRangeHigh2.HasValue = true) Then
                Me.Adapter.DeleteCommand.Parameters(21).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(22).Value = CType(Original_WeightRangeHigh2.Value,Single)
            Else
                Me.Adapter.DeleteCommand.Parameters(21).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(22).Value = Global.System.DBNull.Value
            End If
            If (Original_WeightRange2 Is Nothing) Then
                Me.Adapter.DeleteCommand.Parameters(23).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(24).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.DeleteCommand.Parameters(23).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(24).Value = CType(Original_WeightRange2,String)
            End If
            If (Original_Comp3 Is Nothing) Then
                Me.Adapter.DeleteCommand.Parameters(25).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(26).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.DeleteCommand.Parameters(25).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(26).Value = CType(Original_Comp3,String)
            End If
            If (Original_WeightRangeLow3.HasValue = true) Then
                Me.Adapter.DeleteCommand.Parameters(27).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(28).Value = CType(Original_WeightRangeLow3.Value,Single)
            Else
                Me.Adapter.DeleteCommand.Parameters(27).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(28).Value = Global.System.DBNull.Value
            End If
            If (Original_WeightRangeHigh3.HasValue = true) Then
                Me.Adapter.DeleteCommand.Parameters(29).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(30).Value = CType(Original_WeightRangeHigh3.Value,Single)
            Else
                Me.Adapter.DeleteCommand.Parameters(29).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(30).Value = Global.System.DBNull.Value
            End If
            If (Original_WeightRange3 Is Nothing) Then
                Me.Adapter.DeleteCommand.Parameters(31).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(32).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.DeleteCommand.Parameters(31).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(32).Value = CType(Original_WeightRange3,String)
            End If
            If (Original_Comp4 Is Nothing) Then
                Me.Adapter.DeleteCommand.Parameters(33).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(34).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.DeleteCommand.Parameters(33).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(34).Value = CType(Original_Comp4,String)
            End If
            If (Original_WeightRangeLow4.HasValue = true) Then
                Me.Adapter.DeleteCommand.Parameters(35).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(36).Value = CType(Original_WeightRangeLow4.Value,Single)
            Else
                Me.Adapter.DeleteCommand.Parameters(35).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(36).Value = Global.System.DBNull.Value
            End If
            If (Original_WeightRangeHigh4.HasValue = true) Then
                Me.Adapter.DeleteCommand.Parameters(37).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(38).Value = CType(Original_WeightRangeHigh4.Value,Single)
            Else
                Me.Adapter.DeleteCommand.Parameters(37).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(38).Value = Global.System.DBNull.Value
            End If
            If (Original_WeightRange4 Is Nothing) Then
                Me.Adapter.DeleteCommand.Parameters(39).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(40).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.DeleteCommand.Parameters(39).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(40).Value = CType(Original_WeightRange4,String)
            End If
            If (Original_Comp5 Is Nothing) Then
                Me.Adapter.DeleteCommand.Parameters(41).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(42).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.DeleteCommand.Parameters(41).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(42).Value = CType(Original_Comp5,String)
            End If
            If (Original_WeightRangeLow5.HasValue = true) Then
                Me.Adapter.DeleteCommand.Parameters(43).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(44).Value = CType(Original_WeightRangeLow5.Value,Single)
            Else
                Me.Adapter.DeleteCommand.Parameters(43).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(44).Value = Global.System.DBNull.Value
            End If
            If (Original_WeightRangeHigh5.HasValue = true) Then
                Me.Adapter.DeleteCommand.Parameters(45).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(46).Value = CType(Original_WeightRangeHigh5.Value,Single)
            Else
                Me.Adapter.DeleteCommand.Parameters(45).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(46).Value = Global.System.DBNull.Value
            End If
            If (Original_WeightRange5 Is Nothing) Then
                Me.Adapter.DeleteCommand.Parameters(47).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(48).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.DeleteCommand.Parameters(47).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(48).Value = CType(Original_WeightRange5,String)
            End If
            If (Original_Comp6 Is Nothing) Then
                Me.Adapter.DeleteCommand.Parameters(49).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(50).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.DeleteCommand.Parameters(49).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(50).Value = CType(Original_Comp6,String)
            End If
            If (Original_WeightRangeLow6.HasValue = true) Then
                Me.Adapter.DeleteCommand.Parameters(51).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(52).Value = CType(Original_WeightRangeLow6.Value,Single)
            Else
                Me.Adapter.DeleteCommand.Parameters(51).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(52).Value = Global.System.DBNull.Value
            End If
            If (Original_WeightRangeHigh6.HasValue = true) Then
                Me.Adapter.DeleteCommand.Parameters(53).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(54).Value = CType(Original_WeightRangeHigh6.Value,Single)
            Else
                Me.Adapter.DeleteCommand.Parameters(53).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(54).Value = Global.System.DBNull.Value
            End If
            If (Original_WeightRange6 Is Nothing) Then
                Me.Adapter.DeleteCommand.Parameters(55).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(56).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.DeleteCommand.Parameters(55).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(56).Value = CType(Original_WeightRange6,String)
            End If
            If (Original_pH Is Nothing) Then
                Me.Adapter.DeleteCommand.Parameters(57).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(58).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.DeleteCommand.Parameters(57).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(58).Value = CType(Original_pH,String)
            End If
            If (Original_Specific_gravity Is Nothing) Then
                Me.Adapter.DeleteCommand.Parameters(59).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(60).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.DeleteCommand.Parameters(59).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(60).Value = CType(Original_Specific_gravity,String)
            End If
            If (Original_Boiling_point Is Nothing) Then
                Me.Adapter.DeleteCommand.Parameters(61).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(62).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.DeleteCommand.Parameters(61).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(62).Value = CType(Original_Boiling_point,String)
            End If
            If (Original_Freezing_point Is Nothing) Then
                Me.Adapter.DeleteCommand.Parameters(63).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(64).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.DeleteCommand.Parameters(63).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(64).Value = CType(Original_Freezing_point,String)
            End If
            If (Original_Solubility Is Nothing) Then
                Me.Adapter.DeleteCommand.Parameters(65).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(66).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.DeleteCommand.Parameters(65).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(66).Value = CType(Original_Solubility,String)
            End If
            If (Original_Vapor_density Is Nothing) Then
                Me.Adapter.DeleteCommand.Parameters(67).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(68).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.DeleteCommand.Parameters(67).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(68).Value = CType(Original_Vapor_density,String)
            End If
            If (Original_Vapor_pressure Is Nothing) Then
                Me.Adapter.DeleteCommand.Parameters(69).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(70).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.DeleteCommand.Parameters(69).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(70).Value = CType(Original_Vapor_pressure,String)
            End If
            If (Original_Appearance Is Nothing) Then
                Me.Adapter.DeleteCommand.Parameters(71).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(72).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.DeleteCommand.Parameters(71).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(72).Value = CType(Original_Appearance,String)
            End If
            If (Original_Odor Is Nothing) Then
                Me.Adapter.DeleteCommand.Parameters(73).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(74).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.DeleteCommand.Parameters(73).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(74).Value = CType(Original_Odor,String)
            End If
            If (Original_Flash_point Is Nothing) Then
                Me.Adapter.DeleteCommand.Parameters(75).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(76).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.DeleteCommand.Parameters(75).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(76).Value = CType(Original_Flash_point,String)
            End If
            If (Original_Explosive_limits Is Nothing) Then
                Me.Adapter.DeleteCommand.Parameters(77).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(78).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.DeleteCommand.Parameters(77).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(78).Value = CType(Original_Explosive_limits,String)
            End If
            If (Original_Autoignition_temperature Is Nothing) Then
                Me.Adapter.DeleteCommand.Parameters(79).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(80).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.DeleteCommand.Parameters(79).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(80).Value = CType(Original_Autoignition_temperature,String)
            End If
            If (Original_EPA_number Is Nothing) Then
                Me.Adapter.DeleteCommand.Parameters(81).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(82).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.DeleteCommand.Parameters(81).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(82).Value = CType(Original_EPA_number,String)
            End If
            If (Original_Decomposition_temperature Is Nothing) Then
                Me.Adapter.DeleteCommand.Parameters(83).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(84).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.DeleteCommand.Parameters(83).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(84).Value = CType(Original_Decomposition_temperature,String)
            End If
            If (Original_Product_RQ Is Nothing) Then
                Me.Adapter.DeleteCommand.Parameters(85).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(86).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.DeleteCommand.Parameters(85).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(86).Value = CType(Original_Product_RQ,String)
            End If
            If (Original_Odor_threshold Is Nothing) Then
                Me.Adapter.DeleteCommand.Parameters(87).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(88).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.DeleteCommand.Parameters(87).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(88).Value = CType(Original_Odor_threshold,String)
            End If
            If (Original_Evaporation_rate Is Nothing) Then
                Me.Adapter.DeleteCommand.Parameters(89).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(90).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.DeleteCommand.Parameters(89).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(90).Value = CType(Original_Evaporation_rate,String)
            End If
            If (Original_Partition_coefficient Is Nothing) Then
                Me.Adapter.DeleteCommand.Parameters(91).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(92).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.DeleteCommand.Parameters(91).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(92).Value = CType(Original_Partition_coefficient,String)
            End If
            If (Original_VOC_content Is Nothing) Then
                Me.Adapter.DeleteCommand.Parameters(93).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(94).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.DeleteCommand.Parameters(93).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(94).Value = CType(Original_VOC_content,String)
            End If
            If (Original_Viscosity Is Nothing) Then
                Me.Adapter.DeleteCommand.Parameters(95).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(96).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.DeleteCommand.Parameters(95).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(96).Value = CType(Original_Viscosity,String)
            End If
            If (Original_HMIS Is Nothing) Then
                Me.Adapter.DeleteCommand.Parameters(97).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(98).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.DeleteCommand.Parameters(97).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(98).Value = CType(Original_HMIS,String)
            End If
            If (Original_NFPA Is Nothing) Then
                Me.Adapter.DeleteCommand.Parameters(99).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(100).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.DeleteCommand.Parameters(99).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(100).Value = CType(Original_NFPA,String)
            End If
            If (Original_CAS1 Is Nothing) Then
                Me.Adapter.DeleteCommand.Parameters(101).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(102).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.DeleteCommand.Parameters(101).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(102).Value = CType(Original_CAS1,String)
            End If
            If (Original_CAS2 Is Nothing) Then
                Me.Adapter.DeleteCommand.Parameters(103).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(104).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.DeleteCommand.Parameters(103).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(104).Value = CType(Original_CAS2,String)
            End If
            If (Original_CAS3 Is Nothing) Then
                Me.Adapter.DeleteCommand.Parameters(105).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(106).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.DeleteCommand.Parameters(105).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(106).Value = CType(Original_CAS3,String)
            End If
            If (Original_CAS4 Is Nothing) Then
                Me.Adapter.DeleteCommand.Parameters(107).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(108).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.DeleteCommand.Parameters(107).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(108).Value = CType(Original_CAS4,String)
            End If
            If (Original_CAS5 Is Nothing) Then
                Me.Adapter.DeleteCommand.Parameters(109).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(110).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.DeleteCommand.Parameters(109).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(110).Value = CType(Original_CAS5,String)
            End If
            If (Original_CAS6 Is Nothing) Then
                Me.Adapter.DeleteCommand.Parameters(111).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(112).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.DeleteCommand.Parameters(111).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(112).Value = CType(Original_CAS6,String)
            End If
            If (Original_OSHA_PEL1 Is Nothing) Then
                Me.Adapter.DeleteCommand.Parameters(113).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(114).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.DeleteCommand.Parameters(113).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(114).Value = CType(Original_OSHA_PEL1,String)
            End If
            If (Original_OSHA_PEL2 Is Nothing) Then
                Me.Adapter.DeleteCommand.Parameters(115).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(116).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.DeleteCommand.Parameters(115).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(116).Value = CType(Original_OSHA_PEL2,String)
            End If
            If (Original_OSHA_PEL3 Is Nothing) Then
                Me.Adapter.DeleteCommand.Parameters(117).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(118).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.DeleteCommand.Parameters(117).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(118).Value = CType(Original_OSHA_PEL3,String)
            End If
            If (Original_OSHA_PEL4 Is Nothing) Then
                Me.Adapter.DeleteCommand.Parameters(119).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(120).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.DeleteCommand.Parameters(119).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(120).Value = CType(Original_OSHA_PEL4,String)
            End If
            If (Original_OSHA_PEL5 Is Nothing) Then
                Me.Adapter.DeleteCommand.Parameters(121).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(122).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.DeleteCommand.Parameters(121).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(122).Value = CType(Original_OSHA_PEL5,String)
            End If
            If (Original_OSHA_PEL6 Is Nothing) Then
                Me.Adapter.DeleteCommand.Parameters(123).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(124).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.DeleteCommand.Parameters(123).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(124).Value = CType(Original_OSHA_PEL6,String)
            End If
            If (Original_ACGIH_TLV1 Is Nothing) Then
                Me.Adapter.DeleteCommand.Parameters(125).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(126).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.DeleteCommand.Parameters(125).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(126).Value = CType(Original_ACGIH_TLV1,String)
            End If
            If (Original_ACGIH_TLV2 Is Nothing) Then
                Me.Adapter.DeleteCommand.Parameters(127).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(128).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.DeleteCommand.Parameters(127).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(128).Value = CType(Original_ACGIH_TLV2,String)
            End If
            If (Original_ACGIH_TLV3 Is Nothing) Then
                Me.Adapter.DeleteCommand.Parameters(129).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(130).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.DeleteCommand.Parameters(129).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(130).Value = CType(Original_ACGIH_TLV3,String)
            End If
            If (Original_ACGIH_TLV4 Is Nothing) Then
                Me.Adapter.DeleteCommand.Parameters(131).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(132).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.DeleteCommand.Parameters(131).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(132).Value = CType(Original_ACGIH_TLV4,String)
            End If
            If (Original_ACGIH_TLV5 Is Nothing) Then
                Me.Adapter.DeleteCommand.Parameters(133).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(134).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.DeleteCommand.Parameters(133).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(134).Value = CType(Original_ACGIH_TLV5,String)
            End If
            If (Original_ACGIH_TLV6 Is Nothing) Then
                Me.Adapter.DeleteCommand.Parameters(135).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(136).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.DeleteCommand.Parameters(135).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(136).Value = CType(Original_ACGIH_TLV6,String)
            End If
            If (Original_Health2 Is Nothing) Then
                Me.Adapter.DeleteCommand.Parameters(137).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(138).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.DeleteCommand.Parameters(137).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(138).Value = CType(Original_Health2,String)
            End If
            If (Original_Physical2 Is Nothing) Then
                Me.Adapter.DeleteCommand.Parameters(139).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(140).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.DeleteCommand.Parameters(139).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(140).Value = CType(Original_Physical2,String)
            End If
            If (Original_Environmental2 Is Nothing) Then
                Me.Adapter.DeleteCommand.Parameters(141).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(142).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.DeleteCommand.Parameters(141).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(142).Value = CType(Original_Environmental2,String)
            End If
            If (Original_goTime.HasValue = true) Then
                Me.Adapter.DeleteCommand.Parameters(143).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(144).Value = CType(Original_goTime.Value,Date)
            Else
                Me.Adapter.DeleteCommand.Parameters(143).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(144).Value = Global.System.DBNull.Value
            End If
            If (Original_Clones Is Nothing) Then
                Me.Adapter.DeleteCommand.Parameters(145).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(146).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.DeleteCommand.Parameters(145).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(146).Value = CType(Original_Clones,String)
            End If
            If (Original_Issue_date.HasValue = true) Then
                Me.Adapter.DeleteCommand.Parameters(147).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(148).Value = CType(Original_Issue_date.Value,Date)
            Else
                Me.Adapter.DeleteCommand.Parameters(147).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(148).Value = Global.System.DBNull.Value
            End If
            If (Original_Revision_date.HasValue = true) Then
                Me.Adapter.DeleteCommand.Parameters(149).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(150).Value = CType(Original_Revision_date.Value,Date)
            Else
                Me.Adapter.DeleteCommand.Parameters(149).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(150).Value = Global.System.DBNull.Value
            End If
            If (Original_Version.HasValue = true) Then
                Me.Adapter.DeleteCommand.Parameters(151).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(152).Value = CType(Original_Version.Value,Integer)
            Else
                Me.Adapter.DeleteCommand.Parameters(151).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(152).Value = Global.System.DBNull.Value
            End If
            Dim previousConnectionState As Global.System.Data.ConnectionState = Me.Adapter.DeleteCommand.Connection.State
            If ((Me.Adapter.DeleteCommand.Connection.State And Global.System.Data.ConnectionState.Open)  _
                        <> Global.System.Data.ConnectionState.Open) Then
                Me.Adapter.DeleteCommand.Connection.Open
            End If
            Try 
                Dim returnValue As Integer = Me.Adapter.DeleteCommand.ExecuteNonQuery
                Return returnValue
            Finally
                If (previousConnectionState = Global.System.Data.ConnectionState.Closed) Then
                    Me.Adapter.DeleteCommand.Connection.Close
                End If
            End Try
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Insert, true)>  _
        Public Overloads Overridable Function Insert( _
                    ByVal Product_name As String,  _
                    ByVal OldUN As String,  _
                    ByVal Product_description As String,  _
                    ByVal Product_class As String,  _
                    ByVal Supplier_code As Global.System.Nullable(Of Integer),  _
                    ByVal Comp1 As String,  _
                    ByVal WeightRangeLow1 As Global.System.Nullable(Of Single),  _
                    ByVal WeightRangeHigh1 As Global.System.Nullable(Of Single),  _
                    ByVal WeightRange1 As String,  _
                    ByVal Comp2 As String,  _
                    ByVal WeightRangeLow2 As Global.System.Nullable(Of Single),  _
                    ByVal WeightRangeHigh2 As Global.System.Nullable(Of Single),  _
                    ByVal WeightRange2 As String,  _
                    ByVal Comp3 As String,  _
                    ByVal WeightRangeLow3 As Global.System.Nullable(Of Single),  _
                    ByVal WeightRangeHigh3 As Global.System.Nullable(Of Single),  _
                    ByVal WeightRange3 As String,  _
                    ByVal Comp4 As String,  _
                    ByVal WeightRangeLow4 As Global.System.Nullable(Of Single),  _
                    ByVal WeightRangeHigh4 As Global.System.Nullable(Of Single),  _
                    ByVal WeightRange4 As String,  _
                    ByVal Comp5 As String,  _
                    ByVal WeightRangeLow5 As Global.System.Nullable(Of Single),  _
                    ByVal WeightRangeHigh5 As Global.System.Nullable(Of Single),  _
                    ByVal WeightRange5 As String,  _
                    ByVal Comp6 As String,  _
                    ByVal WeightRangeLow6 As Global.System.Nullable(Of Single),  _
                    ByVal WeightRangeHigh6 As Global.System.Nullable(Of Single),  _
                    ByVal WeightRange6 As String,  _
                    ByVal pH As String,  _
                    ByVal Specific_gravity As String,  _
                    ByVal Boiling_point As String,  _
                    ByVal Freezing_point As String,  _
                    ByVal Solubility As String,  _
                    ByVal Vapor_density As String,  _
                    ByVal Vapor_pressure As String,  _
                    ByVal Appearance As String,  _
                    ByVal Odor As String,  _
                    ByVal Flash_point As String,  _
                    ByVal Explosive_limits As String,  _
                    ByVal Autoignition_temperature As String,  _
                    ByVal EPA_number As String,  _
                    ByVal Decomposition_temperature As String,  _
                    ByVal Product_RQ As String,  _
                    ByVal Odor_threshold As String,  _
                    ByVal Evaporation_rate As String,  _
                    ByVal Partition_coefficient As String,  _
                    ByVal VOC_content As String,  _
                    ByVal Viscosity As String,  _
                    ByVal HMIS As String,  _
                    ByVal NFPA As String,  _
                    ByVal CAS1 As String,  _
                    ByVal CAS2 As String,  _
                    ByVal CAS3 As String,  _
                    ByVal CAS4 As String,  _
                    ByVal CAS5 As String,  _
                    ByVal CAS6 As String,  _
                    ByVal OSHA_PEL1 As String,  _
                    ByVal OSHA_PEL2 As String,  _
                    ByVal OSHA_PEL3 As String,  _
                    ByVal OSHA_PEL4 As String,  _
                    ByVal OSHA_PEL5 As String,  _
                    ByVal OSHA_PEL6 As String,  _
                    ByVal ACGIH_TLV1 As String,  _
                    ByVal ACGIH_TLV2 As String,  _
                    ByVal ACGIH_TLV3 As String,  _
                    ByVal ACGIH_TLV4 As String,  _
                    ByVal ACGIH_TLV5 As String,  _
                    ByVal ACGIH_TLV6 As String,  _
                    ByVal Health2 As String,  _
                    ByVal Physical2 As String,  _
                    ByVal Environmental2 As String,  _
                    ByVal goTime As Global.System.Nullable(Of Date),  _
                    ByVal Clones As String,  _
                    ByVal Issue_date As Global.System.Nullable(Of Date),  _
                    ByVal Revision_date As Global.System.Nullable(Of Date),  _
                    ByVal Version As Global.System.Nullable(Of Integer),  _
                    ByVal Note As String) As Integer
            If (Product_name Is Nothing) Then
                Throw New Global.System.ArgumentNullException("Product_name")
            Else
                Me.Adapter.InsertCommand.Parameters(0).Value = CType(Product_name,String)
            End If
            If (OldUN Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(1).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(1).Value = CType(OldUN,String)
            End If
            If (Product_description Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(2).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(2).Value = CType(Product_description,String)
            End If
            If (Product_class Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(3).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(3).Value = CType(Product_class,String)
            End If
            If (Supplier_code.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(4).Value = CType(Supplier_code.Value,Integer)
            Else
                Me.Adapter.InsertCommand.Parameters(4).Value = Global.System.DBNull.Value
            End If
            If (Comp1 Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(5).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(5).Value = CType(Comp1,String)
            End If
            If (WeightRangeLow1.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(6).Value = CType(WeightRangeLow1.Value,Single)
            Else
                Me.Adapter.InsertCommand.Parameters(6).Value = Global.System.DBNull.Value
            End If
            If (WeightRangeHigh1.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(7).Value = CType(WeightRangeHigh1.Value,Single)
            Else
                Me.Adapter.InsertCommand.Parameters(7).Value = Global.System.DBNull.Value
            End If
            If (WeightRange1 Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(8).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(8).Value = CType(WeightRange1,String)
            End If
            If (Comp2 Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(9).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(9).Value = CType(Comp2,String)
            End If
            If (WeightRangeLow2.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(10).Value = CType(WeightRangeLow2.Value,Single)
            Else
                Me.Adapter.InsertCommand.Parameters(10).Value = Global.System.DBNull.Value
            End If
            If (WeightRangeHigh2.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(11).Value = CType(WeightRangeHigh2.Value,Single)
            Else
                Me.Adapter.InsertCommand.Parameters(11).Value = Global.System.DBNull.Value
            End If
            If (WeightRange2 Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(12).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(12).Value = CType(WeightRange2,String)
            End If
            If (Comp3 Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(13).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(13).Value = CType(Comp3,String)
            End If
            If (WeightRangeLow3.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(14).Value = CType(WeightRangeLow3.Value,Single)
            Else
                Me.Adapter.InsertCommand.Parameters(14).Value = Global.System.DBNull.Value
            End If
            If (WeightRangeHigh3.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(15).Value = CType(WeightRangeHigh3.Value,Single)
            Else
                Me.Adapter.InsertCommand.Parameters(15).Value = Global.System.DBNull.Value
            End If
            If (WeightRange3 Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(16).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(16).Value = CType(WeightRange3,String)
            End If
            If (Comp4 Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(17).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(17).Value = CType(Comp4,String)
            End If
            If (WeightRangeLow4.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(18).Value = CType(WeightRangeLow4.Value,Single)
            Else
                Me.Adapter.InsertCommand.Parameters(18).Value = Global.System.DBNull.Value
            End If
            If (WeightRangeHigh4.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(19).Value = CType(WeightRangeHigh4.Value,Single)
            Else
                Me.Adapter.InsertCommand.Parameters(19).Value = Global.System.DBNull.Value
            End If
            If (WeightRange4 Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(20).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(20).Value = CType(WeightRange4,String)
            End If
            If (Comp5 Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(21).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(21).Value = CType(Comp5,String)
            End If
            If (WeightRangeLow5.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(22).Value = CType(WeightRangeLow5.Value,Single)
            Else
                Me.Adapter.InsertCommand.Parameters(22).Value = Global.System.DBNull.Value
            End If
            If (WeightRangeHigh5.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(23).Value = CType(WeightRangeHigh5.Value,Single)
            Else
                Me.Adapter.InsertCommand.Parameters(23).Value = Global.System.DBNull.Value
            End If
            If (WeightRange5 Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(24).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(24).Value = CType(WeightRange5,String)
            End If
            If (Comp6 Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(25).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(25).Value = CType(Comp6,String)
            End If
            If (WeightRangeLow6.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(26).Value = CType(WeightRangeLow6.Value,Single)
            Else
                Me.Adapter.InsertCommand.Parameters(26).Value = Global.System.DBNull.Value
            End If
            If (WeightRangeHigh6.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(27).Value = CType(WeightRangeHigh6.Value,Single)
            Else
                Me.Adapter.InsertCommand.Parameters(27).Value = Global.System.DBNull.Value
            End If
            If (WeightRange6 Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(28).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(28).Value = CType(WeightRange6,String)
            End If
            If (pH Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(29).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(29).Value = CType(pH,String)
            End If
            If (Specific_gravity Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(30).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(30).Value = CType(Specific_gravity,String)
            End If
            If (Boiling_point Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(31).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(31).Value = CType(Boiling_point,String)
            End If
            If (Freezing_point Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(32).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(32).Value = CType(Freezing_point,String)
            End If
            If (Solubility Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(33).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(33).Value = CType(Solubility,String)
            End If
            If (Vapor_density Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(34).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(34).Value = CType(Vapor_density,String)
            End If
            If (Vapor_pressure Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(35).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(35).Value = CType(Vapor_pressure,String)
            End If
            If (Appearance Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(36).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(36).Value = CType(Appearance,String)
            End If
            If (Odor Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(37).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(37).Value = CType(Odor,String)
            End If
            If (Flash_point Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(38).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(38).Value = CType(Flash_point,String)
            End If
            If (Explosive_limits Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(39).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(39).Value = CType(Explosive_limits,String)
            End If
            If (Autoignition_temperature Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(40).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(40).Value = CType(Autoignition_temperature,String)
            End If
            If (EPA_number Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(41).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(41).Value = CType(EPA_number,String)
            End If
            If (Decomposition_temperature Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(42).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(42).Value = CType(Decomposition_temperature,String)
            End If
            If (Product_RQ Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(43).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(43).Value = CType(Product_RQ,String)
            End If
            If (Odor_threshold Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(44).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(44).Value = CType(Odor_threshold,String)
            End If
            If (Evaporation_rate Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(45).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(45).Value = CType(Evaporation_rate,String)
            End If
            If (Partition_coefficient Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(46).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(46).Value = CType(Partition_coefficient,String)
            End If
            If (VOC_content Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(47).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(47).Value = CType(VOC_content,String)
            End If
            If (Viscosity Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(48).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(48).Value = CType(Viscosity,String)
            End If
            If (HMIS Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(49).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(49).Value = CType(HMIS,String)
            End If
            If (NFPA Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(50).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(50).Value = CType(NFPA,String)
            End If
            If (CAS1 Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(51).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(51).Value = CType(CAS1,String)
            End If
            If (CAS2 Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(52).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(52).Value = CType(CAS2,String)
            End If
            If (CAS3 Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(53).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(53).Value = CType(CAS3,String)
            End If
            If (CAS4 Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(54).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(54).Value = CType(CAS4,String)
            End If
            If (CAS5 Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(55).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(55).Value = CType(CAS5,String)
            End If
            If (CAS6 Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(56).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(56).Value = CType(CAS6,String)
            End If
            If (OSHA_PEL1 Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(57).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(57).Value = CType(OSHA_PEL1,String)
            End If
            If (OSHA_PEL2 Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(58).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(58).Value = CType(OSHA_PEL2,String)
            End If
            If (OSHA_PEL3 Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(59).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(59).Value = CType(OSHA_PEL3,String)
            End If
            If (OSHA_PEL4 Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(60).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(60).Value = CType(OSHA_PEL4,String)
            End If
            If (OSHA_PEL5 Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(61).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(61).Value = CType(OSHA_PEL5,String)
            End If
            If (OSHA_PEL6 Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(62).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(62).Value = CType(OSHA_PEL6,String)
            End If
            If (ACGIH_TLV1 Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(63).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(63).Value = CType(ACGIH_TLV1,String)
            End If
            If (ACGIH_TLV2 Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(64).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(64).Value = CType(ACGIH_TLV2,String)
            End If
            If (ACGIH_TLV3 Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(65).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(65).Value = CType(ACGIH_TLV3,String)
            End If
            If (ACGIH_TLV4 Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(66).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(66).Value = CType(ACGIH_TLV4,String)
            End If
            If (ACGIH_TLV5 Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(67).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(67).Value = CType(ACGIH_TLV5,String)
            End If
            If (ACGIH_TLV6 Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(68).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(68).Value = CType(ACGIH_TLV6,String)
            End If
            If (Health2 Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(69).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(69).Value = CType(Health2,String)
            End If
            If (Physical2 Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(70).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(70).Value = CType(Physical2,String)
            End If
            If (Environmental2 Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(71).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(71).Value = CType(Environmental2,String)
            End If
            If (goTime.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(72).Value = CType(goTime.Value,Date)
            Else
                Me.Adapter.InsertCommand.Parameters(72).Value = Global.System.DBNull.Value
            End If
            If (Clones Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(73).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(73).Value = CType(Clones,String)
            End If
            If (Issue_date.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(74).Value = CType(Issue_date.Value,Date)
            Else
                Me.Adapter.InsertCommand.Parameters(74).Value = Global.System.DBNull.Value
            End If
            If (Revision_date.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(75).Value = CType(Revision_date.Value,Date)
            Else
                Me.Adapter.InsertCommand.Parameters(75).Value = Global.System.DBNull.Value
            End If
            If (Version.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(76).Value = CType(Version.Value,Integer)
            Else
                Me.Adapter.InsertCommand.Parameters(76).Value = Global.System.DBNull.Value
            End If
            If (Note Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(77).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(77).Value = CType(Note,String)
            End If
            Dim previousConnectionState As Global.System.Data.ConnectionState = Me.Adapter.InsertCommand.Connection.State
            If ((Me.Adapter.InsertCommand.Connection.State And Global.System.Data.ConnectionState.Open)  _
                        <> Global.System.Data.ConnectionState.Open) Then
                Me.Adapter.InsertCommand.Connection.Open
            End If
            Try 
                Dim returnValue As Integer = Me.Adapter.InsertCommand.ExecuteNonQuery
                Return returnValue
            Finally
                If (previousConnectionState = Global.System.Data.ConnectionState.Closed) Then
                    Me.Adapter.InsertCommand.Connection.Close
                End If
            End Try
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Update, true)>  _
        Public Overloads Overridable Function Update( _
                    ByVal Product_name As String,  _
                    ByVal OldUN As String,  _
                    ByVal Product_description As String,  _
                    ByVal Product_class As String,  _
                    ByVal Supplier_code As Global.System.Nullable(Of Integer),  _
                    ByVal Comp1 As String,  _
                    ByVal WeightRangeLow1 As Global.System.Nullable(Of Single),  _
                    ByVal WeightRangeHigh1 As Global.System.Nullable(Of Single),  _
                    ByVal WeightRange1 As String,  _
                    ByVal Comp2 As String,  _
                    ByVal WeightRangeLow2 As Global.System.Nullable(Of Single),  _
                    ByVal WeightRangeHigh2 As Global.System.Nullable(Of Single),  _
                    ByVal WeightRange2 As String,  _
                    ByVal Comp3 As String,  _
                    ByVal WeightRangeLow3 As Global.System.Nullable(Of Single),  _
                    ByVal WeightRangeHigh3 As Global.System.Nullable(Of Single),  _
                    ByVal WeightRange3 As String,  _
                    ByVal Comp4 As String,  _
                    ByVal WeightRangeLow4 As Global.System.Nullable(Of Single),  _
                    ByVal WeightRangeHigh4 As Global.System.Nullable(Of Single),  _
                    ByVal WeightRange4 As String,  _
                    ByVal Comp5 As String,  _
                    ByVal WeightRangeLow5 As Global.System.Nullable(Of Single),  _
                    ByVal WeightRangeHigh5 As Global.System.Nullable(Of Single),  _
                    ByVal WeightRange5 As String,  _
                    ByVal Comp6 As String,  _
                    ByVal WeightRangeLow6 As Global.System.Nullable(Of Single),  _
                    ByVal WeightRangeHigh6 As Global.System.Nullable(Of Single),  _
                    ByVal WeightRange6 As String,  _
                    ByVal pH As String,  _
                    ByVal Specific_gravity As String,  _
                    ByVal Boiling_point As String,  _
                    ByVal Freezing_point As String,  _
                    ByVal Solubility As String,  _
                    ByVal Vapor_density As String,  _
                    ByVal Vapor_pressure As String,  _
                    ByVal Appearance As String,  _
                    ByVal Odor As String,  _
                    ByVal Flash_point As String,  _
                    ByVal Explosive_limits As String,  _
                    ByVal Autoignition_temperature As String,  _
                    ByVal EPA_number As String,  _
                    ByVal Decomposition_temperature As String,  _
                    ByVal Product_RQ As String,  _
                    ByVal Odor_threshold As String,  _
                    ByVal Evaporation_rate As String,  _
                    ByVal Partition_coefficient As String,  _
                    ByVal VOC_content As String,  _
                    ByVal Viscosity As String,  _
                    ByVal HMIS As String,  _
                    ByVal NFPA As String,  _
                    ByVal CAS1 As String,  _
                    ByVal CAS2 As String,  _
                    ByVal CAS3 As String,  _
                    ByVal CAS4 As String,  _
                    ByVal CAS5 As String,  _
                    ByVal CAS6 As String,  _
                    ByVal OSHA_PEL1 As String,  _
                    ByVal OSHA_PEL2 As String,  _
                    ByVal OSHA_PEL3 As String,  _
                    ByVal OSHA_PEL4 As String,  _
                    ByVal OSHA_PEL5 As String,  _
                    ByVal OSHA_PEL6 As String,  _
                    ByVal ACGIH_TLV1 As String,  _
                    ByVal ACGIH_TLV2 As String,  _
                    ByVal ACGIH_TLV3 As String,  _
                    ByVal ACGIH_TLV4 As String,  _
                    ByVal ACGIH_TLV5 As String,  _
                    ByVal ACGIH_TLV6 As String,  _
                    ByVal Health2 As String,  _
                    ByVal Physical2 As String,  _
                    ByVal Environmental2 As String,  _
                    ByVal goTime As Global.System.Nullable(Of Date),  _
                    ByVal Clones As String,  _
                    ByVal Issue_date As Global.System.Nullable(Of Date),  _
                    ByVal Revision_date As Global.System.Nullable(Of Date),  _
                    ByVal Version As Global.System.Nullable(Of Integer),  _
                    ByVal Note As String,  _
                    ByVal Original_PID As Integer,  _
                    ByVal Original_Product_name As String,  _
                    ByVal Original_OldUN As String,  _
                    ByVal Original_Product_class As String,  _
                    ByVal Original_Supplier_code As Global.System.Nullable(Of Integer),  _
                    ByVal Original_Comp1 As String,  _
                    ByVal Original_WeightRangeLow1 As Global.System.Nullable(Of Single),  _
                    ByVal Original_WeightRangeHigh1 As Global.System.Nullable(Of Single),  _
                    ByVal Original_WeightRange1 As String,  _
                    ByVal Original_Comp2 As String,  _
                    ByVal Original_WeightRangeLow2 As Global.System.Nullable(Of Single),  _
                    ByVal Original_WeightRangeHigh2 As Global.System.Nullable(Of Single),  _
                    ByVal Original_WeightRange2 As String,  _
                    ByVal Original_Comp3 As String,  _
                    ByVal Original_WeightRangeLow3 As Global.System.Nullable(Of Single),  _
                    ByVal Original_WeightRangeHigh3 As Global.System.Nullable(Of Single),  _
                    ByVal Original_WeightRange3 As String,  _
                    ByVal Original_Comp4 As String,  _
                    ByVal Original_WeightRangeLow4 As Global.System.Nullable(Of Single),  _
                    ByVal Original_WeightRangeHigh4 As Global.System.Nullable(Of Single),  _
                    ByVal Original_WeightRange4 As String,  _
                    ByVal Original_Comp5 As String,  _
                    ByVal Original_WeightRangeLow5 As Global.System.Nullable(Of Single),  _
                    ByVal Original_WeightRangeHigh5 As Global.System.Nullable(Of Single),  _
                    ByVal Original_WeightRange5 As String,  _
                    ByVal Original_Comp6 As String,  _
                    ByVal Original_WeightRangeLow6 As Global.System.Nullable(Of Single),  _
                    ByVal Original_WeightRangeHigh6 As Global.System.Nullable(Of Single),  _
                    ByVal Original_WeightRange6 As String,  _
                    ByVal Original_pH As String,  _
                    ByVal Original_Specific_gravity As String,  _
                    ByVal Original_Boiling_point As String,  _
                    ByVal Original_Freezing_point As String,  _
                    ByVal Original_Solubility As String,  _
                    ByVal Original_Vapor_density As String,  _
                    ByVal Original_Vapor_pressure As String,  _
                    ByVal Original_Appearance As String,  _
                    ByVal Original_Odor As String,  _
                    ByVal Original_Flash_point As String,  _
                    ByVal Original_Explosive_limits As String,  _
                    ByVal Original_Autoignition_temperature As String,  _
                    ByVal Original_EPA_number As String,  _
                    ByVal Original_Decomposition_temperature As String,  _
                    ByVal Original_Product_RQ As String,  _
                    ByVal Original_Odor_threshold As String,  _
                    ByVal Original_Evaporation_rate As String,  _
                    ByVal Original_Partition_coefficient As String,  _
                    ByVal Original_VOC_content As String,  _
                    ByVal Original_Viscosity As String,  _
                    ByVal Original_HMIS As String,  _
                    ByVal Original_NFPA As String,  _
                    ByVal Original_CAS1 As String,  _
                    ByVal Original_CAS2 As String,  _
                    ByVal Original_CAS3 As String,  _
                    ByVal Original_CAS4 As String,  _
                    ByVal Original_CAS5 As String,  _
                    ByVal Original_CAS6 As String,  _
                    ByVal Original_OSHA_PEL1 As String,  _
                    ByVal Original_OSHA_PEL2 As String,  _
                    ByVal Original_OSHA_PEL3 As String,  _
                    ByVal Original_OSHA_PEL4 As String,  _
                    ByVal Original_OSHA_PEL5 As String,  _
                    ByVal Original_OSHA_PEL6 As String,  _
                    ByVal Original_ACGIH_TLV1 As String,  _
                    ByVal Original_ACGIH_TLV2 As String,  _
                    ByVal Original_ACGIH_TLV3 As String,  _
                    ByVal Original_ACGIH_TLV4 As String,  _
                    ByVal Original_ACGIH_TLV5 As String,  _
                    ByVal Original_ACGIH_TLV6 As String,  _
                    ByVal Original_Health2 As String,  _
                    ByVal Original_Physical2 As String,  _
                    ByVal Original_Environmental2 As String,  _
                    ByVal Original_goTime As Global.System.Nullable(Of Date),  _
                    ByVal Original_Clones As String,  _
                    ByVal Original_Issue_date As Global.System.Nullable(Of Date),  _
                    ByVal Original_Revision_date As Global.System.Nullable(Of Date),  _
                    ByVal Original_Version As Global.System.Nullable(Of Integer)) As Integer
            If (Product_name Is Nothing) Then
                Throw New Global.System.ArgumentNullException("Product_name")
            Else
                Me.Adapter.UpdateCommand.Parameters(0).Value = CType(Product_name,String)
            End If
            If (OldUN Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(1).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(1).Value = CType(OldUN,String)
            End If
            If (Product_description Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(2).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(2).Value = CType(Product_description,String)
            End If
            If (Product_class Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(3).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(3).Value = CType(Product_class,String)
            End If
            If (Supplier_code.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(4).Value = CType(Supplier_code.Value,Integer)
            Else
                Me.Adapter.UpdateCommand.Parameters(4).Value = Global.System.DBNull.Value
            End If
            If (Comp1 Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(5).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(5).Value = CType(Comp1,String)
            End If
            If (WeightRangeLow1.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(6).Value = CType(WeightRangeLow1.Value,Single)
            Else
                Me.Adapter.UpdateCommand.Parameters(6).Value = Global.System.DBNull.Value
            End If
            If (WeightRangeHigh1.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(7).Value = CType(WeightRangeHigh1.Value,Single)
            Else
                Me.Adapter.UpdateCommand.Parameters(7).Value = Global.System.DBNull.Value
            End If
            If (WeightRange1 Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(8).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(8).Value = CType(WeightRange1,String)
            End If
            If (Comp2 Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(9).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(9).Value = CType(Comp2,String)
            End If
            If (WeightRangeLow2.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(10).Value = CType(WeightRangeLow2.Value,Single)
            Else
                Me.Adapter.UpdateCommand.Parameters(10).Value = Global.System.DBNull.Value
            End If
            If (WeightRangeHigh2.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(11).Value = CType(WeightRangeHigh2.Value,Single)
            Else
                Me.Adapter.UpdateCommand.Parameters(11).Value = Global.System.DBNull.Value
            End If
            If (WeightRange2 Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(12).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(12).Value = CType(WeightRange2,String)
            End If
            If (Comp3 Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(13).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(13).Value = CType(Comp3,String)
            End If
            If (WeightRangeLow3.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(14).Value = CType(WeightRangeLow3.Value,Single)
            Else
                Me.Adapter.UpdateCommand.Parameters(14).Value = Global.System.DBNull.Value
            End If
            If (WeightRangeHigh3.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(15).Value = CType(WeightRangeHigh3.Value,Single)
            Else
                Me.Adapter.UpdateCommand.Parameters(15).Value = Global.System.DBNull.Value
            End If
            If (WeightRange3 Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(16).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(16).Value = CType(WeightRange3,String)
            End If
            If (Comp4 Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(17).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(17).Value = CType(Comp4,String)
            End If
            If (WeightRangeLow4.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(18).Value = CType(WeightRangeLow4.Value,Single)
            Else
                Me.Adapter.UpdateCommand.Parameters(18).Value = Global.System.DBNull.Value
            End If
            If (WeightRangeHigh4.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(19).Value = CType(WeightRangeHigh4.Value,Single)
            Else
                Me.Adapter.UpdateCommand.Parameters(19).Value = Global.System.DBNull.Value
            End If
            If (WeightRange4 Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(20).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(20).Value = CType(WeightRange4,String)
            End If
            If (Comp5 Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(21).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(21).Value = CType(Comp5,String)
            End If
            If (WeightRangeLow5.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(22).Value = CType(WeightRangeLow5.Value,Single)
            Else
                Me.Adapter.UpdateCommand.Parameters(22).Value = Global.System.DBNull.Value
            End If
            If (WeightRangeHigh5.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(23).Value = CType(WeightRangeHigh5.Value,Single)
            Else
                Me.Adapter.UpdateCommand.Parameters(23).Value = Global.System.DBNull.Value
            End If
            If (WeightRange5 Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(24).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(24).Value = CType(WeightRange5,String)
            End If
            If (Comp6 Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(25).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(25).Value = CType(Comp6,String)
            End If
            If (WeightRangeLow6.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(26).Value = CType(WeightRangeLow6.Value,Single)
            Else
                Me.Adapter.UpdateCommand.Parameters(26).Value = Global.System.DBNull.Value
            End If
            If (WeightRangeHigh6.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(27).Value = CType(WeightRangeHigh6.Value,Single)
            Else
                Me.Adapter.UpdateCommand.Parameters(27).Value = Global.System.DBNull.Value
            End If
            If (WeightRange6 Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(28).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(28).Value = CType(WeightRange6,String)
            End If
            If (pH Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(29).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(29).Value = CType(pH,String)
            End If
            If (Specific_gravity Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(30).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(30).Value = CType(Specific_gravity,String)
            End If
            If (Boiling_point Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(31).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(31).Value = CType(Boiling_point,String)
            End If
            If (Freezing_point Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(32).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(32).Value = CType(Freezing_point,String)
            End If
            If (Solubility Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(33).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(33).Value = CType(Solubility,String)
            End If
            If (Vapor_density Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(34).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(34).Value = CType(Vapor_density,String)
            End If
            If (Vapor_pressure Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(35).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(35).Value = CType(Vapor_pressure,String)
            End If
            If (Appearance Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(36).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(36).Value = CType(Appearance,String)
            End If
            If (Odor Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(37).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(37).Value = CType(Odor,String)
            End If
            If (Flash_point Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(38).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(38).Value = CType(Flash_point,String)
            End If
            If (Explosive_limits Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(39).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(39).Value = CType(Explosive_limits,String)
            End If
            If (Autoignition_temperature Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(40).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(40).Value = CType(Autoignition_temperature,String)
            End If
            If (EPA_number Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(41).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(41).Value = CType(EPA_number,String)
            End If
            If (Decomposition_temperature Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(42).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(42).Value = CType(Decomposition_temperature,String)
            End If
            If (Product_RQ Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(43).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(43).Value = CType(Product_RQ,String)
            End If
            If (Odor_threshold Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(44).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(44).Value = CType(Odor_threshold,String)
            End If
            If (Evaporation_rate Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(45).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(45).Value = CType(Evaporation_rate,String)
            End If
            If (Partition_coefficient Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(46).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(46).Value = CType(Partition_coefficient,String)
            End If
            If (VOC_content Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(47).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(47).Value = CType(VOC_content,String)
            End If
            If (Viscosity Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(48).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(48).Value = CType(Viscosity,String)
            End If
            If (HMIS Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(49).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(49).Value = CType(HMIS,String)
            End If
            If (NFPA Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(50).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(50).Value = CType(NFPA,String)
            End If
            If (CAS1 Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(51).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(51).Value = CType(CAS1,String)
            End If
            If (CAS2 Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(52).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(52).Value = CType(CAS2,String)
            End If
            If (CAS3 Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(53).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(53).Value = CType(CAS3,String)
            End If
            If (CAS4 Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(54).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(54).Value = CType(CAS4,String)
            End If
            If (CAS5 Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(55).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(55).Value = CType(CAS5,String)
            End If
            If (CAS6 Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(56).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(56).Value = CType(CAS6,String)
            End If
            If (OSHA_PEL1 Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(57).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(57).Value = CType(OSHA_PEL1,String)
            End If
            If (OSHA_PEL2 Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(58).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(58).Value = CType(OSHA_PEL2,String)
            End If
            If (OSHA_PEL3 Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(59).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(59).Value = CType(OSHA_PEL3,String)
            End If
            If (OSHA_PEL4 Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(60).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(60).Value = CType(OSHA_PEL4,String)
            End If
            If (OSHA_PEL5 Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(61).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(61).Value = CType(OSHA_PEL5,String)
            End If
            If (OSHA_PEL6 Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(62).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(62).Value = CType(OSHA_PEL6,String)
            End If
            If (ACGIH_TLV1 Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(63).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(63).Value = CType(ACGIH_TLV1,String)
            End If
            If (ACGIH_TLV2 Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(64).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(64).Value = CType(ACGIH_TLV2,String)
            End If
            If (ACGIH_TLV3 Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(65).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(65).Value = CType(ACGIH_TLV3,String)
            End If
            If (ACGIH_TLV4 Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(66).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(66).Value = CType(ACGIH_TLV4,String)
            End If
            If (ACGIH_TLV5 Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(67).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(67).Value = CType(ACGIH_TLV5,String)
            End If
            If (ACGIH_TLV6 Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(68).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(68).Value = CType(ACGIH_TLV6,String)
            End If
            If (Health2 Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(69).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(69).Value = CType(Health2,String)
            End If
            If (Physical2 Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(70).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(70).Value = CType(Physical2,String)
            End If
            If (Environmental2 Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(71).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(71).Value = CType(Environmental2,String)
            End If
            If (goTime.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(72).Value = CType(goTime.Value,Date)
            Else
                Me.Adapter.UpdateCommand.Parameters(72).Value = Global.System.DBNull.Value
            End If
            If (Clones Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(73).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(73).Value = CType(Clones,String)
            End If
            If (Issue_date.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(74).Value = CType(Issue_date.Value,Date)
            Else
                Me.Adapter.UpdateCommand.Parameters(74).Value = Global.System.DBNull.Value
            End If
            If (Revision_date.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(75).Value = CType(Revision_date.Value,Date)
            Else
                Me.Adapter.UpdateCommand.Parameters(75).Value = Global.System.DBNull.Value
            End If
            If (Version.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(76).Value = CType(Version.Value,Integer)
            Else
                Me.Adapter.UpdateCommand.Parameters(76).Value = Global.System.DBNull.Value
            End If
            If (Note Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(77).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(77).Value = CType(Note,String)
            End If
            Me.Adapter.UpdateCommand.Parameters(78).Value = CType(Original_PID,Integer)
            If (Original_Product_name Is Nothing) Then
                Throw New Global.System.ArgumentNullException("Original_Product_name")
            Else
                Me.Adapter.UpdateCommand.Parameters(79).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(80).Value = CType(Original_Product_name,String)
            End If
            If (Original_OldUN Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(81).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(82).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(81).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(82).Value = CType(Original_OldUN,String)
            End If
            If (Original_Product_class Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(83).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(84).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(83).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(84).Value = CType(Original_Product_class,String)
            End If
            If (Original_Supplier_code.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(85).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(86).Value = CType(Original_Supplier_code.Value,Integer)
            Else
                Me.Adapter.UpdateCommand.Parameters(85).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(86).Value = Global.System.DBNull.Value
            End If
            If (Original_Comp1 Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(87).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(88).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(87).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(88).Value = CType(Original_Comp1,String)
            End If
            If (Original_WeightRangeLow1.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(89).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(90).Value = CType(Original_WeightRangeLow1.Value,Single)
            Else
                Me.Adapter.UpdateCommand.Parameters(89).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(90).Value = Global.System.DBNull.Value
            End If
            If (Original_WeightRangeHigh1.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(91).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(92).Value = CType(Original_WeightRangeHigh1.Value,Single)
            Else
                Me.Adapter.UpdateCommand.Parameters(91).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(92).Value = Global.System.DBNull.Value
            End If
            If (Original_WeightRange1 Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(93).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(94).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(93).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(94).Value = CType(Original_WeightRange1,String)
            End If
            If (Original_Comp2 Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(95).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(96).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(95).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(96).Value = CType(Original_Comp2,String)
            End If
            If (Original_WeightRangeLow2.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(97).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(98).Value = CType(Original_WeightRangeLow2.Value,Single)
            Else
                Me.Adapter.UpdateCommand.Parameters(97).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(98).Value = Global.System.DBNull.Value
            End If
            If (Original_WeightRangeHigh2.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(99).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(100).Value = CType(Original_WeightRangeHigh2.Value,Single)
            Else
                Me.Adapter.UpdateCommand.Parameters(99).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(100).Value = Global.System.DBNull.Value
            End If
            If (Original_WeightRange2 Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(101).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(102).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(101).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(102).Value = CType(Original_WeightRange2,String)
            End If
            If (Original_Comp3 Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(103).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(104).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(103).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(104).Value = CType(Original_Comp3,String)
            End If
            If (Original_WeightRangeLow3.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(105).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(106).Value = CType(Original_WeightRangeLow3.Value,Single)
            Else
                Me.Adapter.UpdateCommand.Parameters(105).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(106).Value = Global.System.DBNull.Value
            End If
            If (Original_WeightRangeHigh3.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(107).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(108).Value = CType(Original_WeightRangeHigh3.Value,Single)
            Else
                Me.Adapter.UpdateCommand.Parameters(107).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(108).Value = Global.System.DBNull.Value
            End If
            If (Original_WeightRange3 Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(109).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(110).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(109).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(110).Value = CType(Original_WeightRange3,String)
            End If
            If (Original_Comp4 Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(111).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(112).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(111).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(112).Value = CType(Original_Comp4,String)
            End If
            If (Original_WeightRangeLow4.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(113).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(114).Value = CType(Original_WeightRangeLow4.Value,Single)
            Else
                Me.Adapter.UpdateCommand.Parameters(113).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(114).Value = Global.System.DBNull.Value
            End If
            If (Original_WeightRangeHigh4.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(115).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(116).Value = CType(Original_WeightRangeHigh4.Value,Single)
            Else
                Me.Adapter.UpdateCommand.Parameters(115).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(116).Value = Global.System.DBNull.Value
            End If
            If (Original_WeightRange4 Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(117).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(118).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(117).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(118).Value = CType(Original_WeightRange4,String)
            End If
            If (Original_Comp5 Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(119).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(120).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(119).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(120).Value = CType(Original_Comp5,String)
            End If
            If (Original_WeightRangeLow5.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(121).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(122).Value = CType(Original_WeightRangeLow5.Value,Single)
            Else
                Me.Adapter.UpdateCommand.Parameters(121).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(122).Value = Global.System.DBNull.Value
            End If
            If (Original_WeightRangeHigh5.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(123).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(124).Value = CType(Original_WeightRangeHigh5.Value,Single)
            Else
                Me.Adapter.UpdateCommand.Parameters(123).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(124).Value = Global.System.DBNull.Value
            End If
            If (Original_WeightRange5 Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(125).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(126).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(125).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(126).Value = CType(Original_WeightRange5,String)
            End If
            If (Original_Comp6 Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(127).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(128).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(127).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(128).Value = CType(Original_Comp6,String)
            End If
            If (Original_WeightRangeLow6.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(129).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(130).Value = CType(Original_WeightRangeLow6.Value,Single)
            Else
                Me.Adapter.UpdateCommand.Parameters(129).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(130).Value = Global.System.DBNull.Value
            End If
            If (Original_WeightRangeHigh6.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(131).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(132).Value = CType(Original_WeightRangeHigh6.Value,Single)
            Else
                Me.Adapter.UpdateCommand.Parameters(131).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(132).Value = Global.System.DBNull.Value
            End If
            If (Original_WeightRange6 Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(133).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(134).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(133).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(134).Value = CType(Original_WeightRange6,String)
            End If
            If (Original_pH Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(135).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(136).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(135).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(136).Value = CType(Original_pH,String)
            End If
            If (Original_Specific_gravity Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(137).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(138).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(137).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(138).Value = CType(Original_Specific_gravity,String)
            End If
            If (Original_Boiling_point Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(139).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(140).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(139).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(140).Value = CType(Original_Boiling_point,String)
            End If
            If (Original_Freezing_point Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(141).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(142).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(141).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(142).Value = CType(Original_Freezing_point,String)
            End If
            If (Original_Solubility Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(143).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(144).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(143).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(144).Value = CType(Original_Solubility,String)
            End If
            If (Original_Vapor_density Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(145).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(146).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(145).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(146).Value = CType(Original_Vapor_density,String)
            End If
            If (Original_Vapor_pressure Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(147).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(148).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(147).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(148).Value = CType(Original_Vapor_pressure,String)
            End If
            If (Original_Appearance Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(149).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(150).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(149).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(150).Value = CType(Original_Appearance,String)
            End If
            If (Original_Odor Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(151).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(152).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(151).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(152).Value = CType(Original_Odor,String)
            End If
            If (Original_Flash_point Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(153).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(154).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(153).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(154).Value = CType(Original_Flash_point,String)
            End If
            If (Original_Explosive_limits Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(155).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(156).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(155).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(156).Value = CType(Original_Explosive_limits,String)
            End If
            If (Original_Autoignition_temperature Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(157).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(158).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(157).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(158).Value = CType(Original_Autoignition_temperature,String)
            End If
            If (Original_EPA_number Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(159).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(160).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(159).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(160).Value = CType(Original_EPA_number,String)
            End If
            If (Original_Decomposition_temperature Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(161).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(162).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(161).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(162).Value = CType(Original_Decomposition_temperature,String)
            End If
            If (Original_Product_RQ Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(163).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(164).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(163).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(164).Value = CType(Original_Product_RQ,String)
            End If
            If (Original_Odor_threshold Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(165).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(166).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(165).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(166).Value = CType(Original_Odor_threshold,String)
            End If
            If (Original_Evaporation_rate Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(167).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(168).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(167).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(168).Value = CType(Original_Evaporation_rate,String)
            End If
            If (Original_Partition_coefficient Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(169).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(170).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(169).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(170).Value = CType(Original_Partition_coefficient,String)
            End If
            If (Original_VOC_content Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(171).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(172).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(171).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(172).Value = CType(Original_VOC_content,String)
            End If
            If (Original_Viscosity Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(173).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(174).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(173).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(174).Value = CType(Original_Viscosity,String)
            End If
            If (Original_HMIS Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(175).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(176).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(175).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(176).Value = CType(Original_HMIS,String)
            End If
            If (Original_NFPA Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(177).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(178).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(177).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(178).Value = CType(Original_NFPA,String)
            End If
            If (Original_CAS1 Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(179).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(180).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(179).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(180).Value = CType(Original_CAS1,String)
            End If
            If (Original_CAS2 Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(181).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(182).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(181).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(182).Value = CType(Original_CAS2,String)
            End If
            If (Original_CAS3 Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(183).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(184).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(183).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(184).Value = CType(Original_CAS3,String)
            End If
            If (Original_CAS4 Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(185).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(186).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(185).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(186).Value = CType(Original_CAS4,String)
            End If
            If (Original_CAS5 Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(187).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(188).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(187).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(188).Value = CType(Original_CAS5,String)
            End If
            If (Original_CAS6 Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(189).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(190).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(189).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(190).Value = CType(Original_CAS6,String)
            End If
            If (Original_OSHA_PEL1 Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(191).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(192).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(191).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(192).Value = CType(Original_OSHA_PEL1,String)
            End If
            If (Original_OSHA_PEL2 Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(193).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(194).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(193).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(194).Value = CType(Original_OSHA_PEL2,String)
            End If
            If (Original_OSHA_PEL3 Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(195).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(196).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(195).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(196).Value = CType(Original_OSHA_PEL3,String)
            End If
            If (Original_OSHA_PEL4 Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(197).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(198).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(197).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(198).Value = CType(Original_OSHA_PEL4,String)
            End If
            If (Original_OSHA_PEL5 Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(199).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(200).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(199).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(200).Value = CType(Original_OSHA_PEL5,String)
            End If
            If (Original_OSHA_PEL6 Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(201).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(202).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(201).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(202).Value = CType(Original_OSHA_PEL6,String)
            End If
            If (Original_ACGIH_TLV1 Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(203).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(204).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(203).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(204).Value = CType(Original_ACGIH_TLV1,String)
            End If
            If (Original_ACGIH_TLV2 Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(205).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(206).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(205).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(206).Value = CType(Original_ACGIH_TLV2,String)
            End If
            If (Original_ACGIH_TLV3 Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(207).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(208).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(207).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(208).Value = CType(Original_ACGIH_TLV3,String)
            End If
            If (Original_ACGIH_TLV4 Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(209).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(210).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(209).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(210).Value = CType(Original_ACGIH_TLV4,String)
            End If
            If (Original_ACGIH_TLV5 Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(211).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(212).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(211).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(212).Value = CType(Original_ACGIH_TLV5,String)
            End If
            If (Original_ACGIH_TLV6 Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(213).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(214).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(213).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(214).Value = CType(Original_ACGIH_TLV6,String)
            End If
            If (Original_Health2 Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(215).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(216).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(215).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(216).Value = CType(Original_Health2,String)
            End If
            If (Original_Physical2 Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(217).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(218).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(217).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(218).Value = CType(Original_Physical2,String)
            End If
            If (Original_Environmental2 Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(219).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(220).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(219).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(220).Value = CType(Original_Environmental2,String)
            End If
            If (Original_goTime.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(221).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(222).Value = CType(Original_goTime.Value,Date)
            Else
                Me.Adapter.UpdateCommand.Parameters(221).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(222).Value = Global.System.DBNull.Value
            End If
            If (Original_Clones Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(223).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(224).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(223).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(224).Value = CType(Original_Clones,String)
            End If
            If (Original_Issue_date.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(225).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(226).Value = CType(Original_Issue_date.Value,Date)
            Else
                Me.Adapter.UpdateCommand.Parameters(225).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(226).Value = Global.System.DBNull.Value
            End If
            If (Original_Revision_date.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(227).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(228).Value = CType(Original_Revision_date.Value,Date)
            Else
                Me.Adapter.UpdateCommand.Parameters(227).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(228).Value = Global.System.DBNull.Value
            End If
            If (Original_Version.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(229).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(230).Value = CType(Original_Version.Value,Integer)
            Else
                Me.Adapter.UpdateCommand.Parameters(229).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(230).Value = Global.System.DBNull.Value
            End If
            Dim previousConnectionState As Global.System.Data.ConnectionState = Me.Adapter.UpdateCommand.Connection.State
            If ((Me.Adapter.UpdateCommand.Connection.State And Global.System.Data.ConnectionState.Open)  _
                        <> Global.System.Data.ConnectionState.Open) Then
                Me.Adapter.UpdateCommand.Connection.Open
            End If
            Try 
                Dim returnValue As Integer = Me.Adapter.UpdateCommand.ExecuteNonQuery
                Return returnValue
            Finally
                If (previousConnectionState = Global.System.Data.ConnectionState.Closed) Then
                    Me.Adapter.UpdateCommand.Connection.Close
                End If
            End Try
        End Function
    End Class
    
    '''<summary>
    '''Represents the connection and commands used to retrieve and save data.
    '''</summary>
    <Global.System.ComponentModel.DesignerCategoryAttribute("code"),  _
     Global.System.ComponentModel.ToolboxItem(true),  _
     Global.System.ComponentModel.DataObjectAttribute(true),  _
     Global.System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner"& _ 
        ", Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a"),  _
     Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
    Partial Public Class Safety_DanceTableAdapter
        Inherits Global.System.ComponentModel.Component
        
        Private WithEvents _adapter As Global.System.Data.OleDb.OleDbDataAdapter
        
        Private _connection As Global.System.Data.OleDb.OleDbConnection
        
        Private _transaction As Global.System.Data.OleDb.OleDbTransaction
        
        Private _commandCollection() As Global.System.Data.OleDb.OleDbCommand
        
        Private _clearBeforeFill As Boolean
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub New()
            MyBase.New
            Me.ClearBeforeFill = true
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Friend ReadOnly Property Adapter() As Global.System.Data.OleDb.OleDbDataAdapter
            Get
                If (Me._adapter Is Nothing) Then
                    Me.InitAdapter
                End If
                Return Me._adapter
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Property Connection() As Global.System.Data.OleDb.OleDbConnection
            Get
                If (Me._connection Is Nothing) Then
                    Me.InitConnection
                End If
                Return Me._connection
            End Get
            Set
                Me._connection = value
                If (Not (Me.Adapter.InsertCommand) Is Nothing) Then
                    Me.Adapter.InsertCommand.Connection = value
                End If
                If (Not (Me.Adapter.DeleteCommand) Is Nothing) Then
                    Me.Adapter.DeleteCommand.Connection = value
                End If
                If (Not (Me.Adapter.UpdateCommand) Is Nothing) Then
                    Me.Adapter.UpdateCommand.Connection = value
                End If
                Dim i As Integer = 0
                Do While (i < Me.CommandCollection.Length)
                    If (Not (Me.CommandCollection(i)) Is Nothing) Then
                        CType(Me.CommandCollection(i),Global.System.Data.OleDb.OleDbCommand).Connection = value
                    End If
                    i = (i + 1)
                Loop
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Property Transaction() As Global.System.Data.OleDb.OleDbTransaction
            Get
                Return Me._transaction
            End Get
            Set
                Me._transaction = value
                Dim i As Integer = 0
                Do While (i < Me.CommandCollection.Length)
                    Me.CommandCollection(i).Transaction = Me._transaction
                    i = (i + 1)
                Loop
                If ((Not (Me.Adapter) Is Nothing)  _
                            AndAlso (Not (Me.Adapter.DeleteCommand) Is Nothing)) Then
                    Me.Adapter.DeleteCommand.Transaction = Me._transaction
                End If
                If ((Not (Me.Adapter) Is Nothing)  _
                            AndAlso (Not (Me.Adapter.InsertCommand) Is Nothing)) Then
                    Me.Adapter.InsertCommand.Transaction = Me._transaction
                End If
                If ((Not (Me.Adapter) Is Nothing)  _
                            AndAlso (Not (Me.Adapter.UpdateCommand) Is Nothing)) Then
                    Me.Adapter.UpdateCommand.Transaction = Me._transaction
                End If
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected ReadOnly Property CommandCollection() As Global.System.Data.OleDb.OleDbCommand()
            Get
                If (Me._commandCollection Is Nothing) Then
                    Me.InitCommandCollection
                End If
                Return Me._commandCollection
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property ClearBeforeFill() As Boolean
            Get
                Return Me._clearBeforeFill
            End Get
            Set
                Me._clearBeforeFill = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Private Sub InitAdapter()
            Me._adapter = New Global.System.Data.OleDb.OleDbDataAdapter()
            Dim tableMapping As Global.System.Data.Common.DataTableMapping = New Global.System.Data.Common.DataTableMapping()
            tableMapping.SourceTable = "Table"
            tableMapping.DataSetTable = "Safety Dance"
            tableMapping.ColumnMappings.Add("SDID", "SDID")
            tableMapping.ColumnMappings.Add("DOTContains", "DOTContains")
            tableMapping.ColumnMappings.Add("UN_number", "UN_number")
            tableMapping.ColumnMappings.Add("Proper_shipping_name", "Proper_shipping_name")
            tableMapping.ColumnMappings.Add("Primary_haz", "Primary_haz")
            tableMapping.ColumnMappings.Add("Secondary_haz", "Secondary_haz")
            tableMapping.ColumnMappings.Add("Packing_group", "Packing_group")
            tableMapping.ColumnMappings.Add("DOT", "DOT")
            tableMapping.ColumnMappings.Add("DOT_label", "DOT_label")
            tableMapping.ColumnMappings.Add("Hazard_classification", "Hazard_classification")
            tableMapping.ColumnMappings.Add("fucky", "fucky")
            tableMapping.ColumnMappings.Add("Signal_word", "Signal_word")
            tableMapping.ColumnMappings.Add("Hazard_statement", "Hazard_statement")
            tableMapping.ColumnMappings.Add("Pict1", "Pict1")
            tableMapping.ColumnMappings.Add("Pict2", "Pict2")
            tableMapping.ColumnMappings.Add("Pict3", "Pict3")
            tableMapping.ColumnMappings.Add("Pict4", "Pict4")
            tableMapping.ColumnMappings.Add("Pict5", "Pict5")
            tableMapping.ColumnMappings.Add("Pre_prevention", "Pre_prevention")
            tableMapping.ColumnMappings.Add("Pre_response", "Pre_response")
            tableMapping.ColumnMappings.Add("Pre_storage", "Pre_storage")
            tableMapping.ColumnMappings.Add("Pre_disposal", "Pre_disposal")
            tableMapping.ColumnMappings.Add("FA_eye_contact", "FA_eye_contact")
            tableMapping.ColumnMappings.Add("FA_skin_contact", "FA_skin_contact")
            tableMapping.ColumnMappings.Add("FA_ingestion", "FA_ingestion")
            tableMapping.ColumnMappings.Add("FA_inhalation", "FA_inhalation")
            tableMapping.ColumnMappings.Add("Note_to_HCP", "Note_to_HCP")
            tableMapping.ColumnMappings.Add("Suitable_extinguishing_media", "Suitable_extinguishing_media")
            tableMapping.ColumnMappings.Add("Unsuitable_extinguishing_media", "Unsuitable_extinguishing_media")
            tableMapping.ColumnMappings.Add("Precautions_for_firefighters", "Precautions_for_firefighters")
            tableMapping.ColumnMappings.Add("Specific_hazards", "Specific_hazards")
            tableMapping.ColumnMappings.Add("Hazardous_combustion_products", "Hazardous_combustion_products")
            tableMapping.ColumnMappings.Add("Personal_precautions", "Personal_precautions")
            tableMapping.ColumnMappings.Add("Small_spills", "Small_spills")
            tableMapping.ColumnMappings.Add("Large_spills", "Large_spills")
            tableMapping.ColumnMappings.Add("Advice_on_safe_handling", "Advice_on_safe_handling")
            tableMapping.ColumnMappings.Add("Storage_conditions", "Storage_conditions")
            tableMapping.ColumnMappings.Add("Suitable_materials_of_construction", "Suitable_materials_of_construction")
            tableMapping.ColumnMappings.Add("Unsuitable_materials_of_construction", "Unsuitable_materials_of_construction")
            tableMapping.ColumnMappings.Add("Eye_face_protection", "Eye_face_protection")
            tableMapping.ColumnMappings.Add("Skin_protection", "Skin_protection")
            tableMapping.ColumnMappings.Add("Respiratory_protection", "Respiratory_protection")
            tableMapping.ColumnMappings.Add("Engineering_controls", "Engineering_controls")
            tableMapping.ColumnMappings.Add("General_hygiene_considerations", "General_hygiene_considerations")
            tableMapping.ColumnMappings.Add("Chemical_stability", "Chemical_stability")
            tableMapping.ColumnMappings.Add("Hazardous_polymerization", "Hazardous_polymerization")
            tableMapping.ColumnMappings.Add("Conditions_to_avoid", "Conditions_to_avoid")
            tableMapping.ColumnMappings.Add("Incompatibilities", "Incompatibilities")
            tableMapping.ColumnMappings.Add("Hazardous_decomposition_products", "Hazardous_decomposition_products")
            tableMapping.ColumnMappings.Add("Likely_routes_of_exposure", "Likely_routes_of_exposure")
            tableMapping.ColumnMappings.Add("Eye_contact", "Eye_contact")
            tableMapping.ColumnMappings.Add("Skin_contact", "Skin_contact")
            tableMapping.ColumnMappings.Add("Ingestion", "Ingestion")
            tableMapping.ColumnMappings.Add("Inhalation", "Inhalation")
            tableMapping.ColumnMappings.Add("Reproductive_effects", "Reproductive_effects")
            tableMapping.ColumnMappings.Add("Teratogenicity", "Teratogenicity")
            tableMapping.ColumnMappings.Add("Mutagenicity", "Mutagenicity")
            tableMapping.ColumnMappings.Add("Embryotoxicity", "Embryotoxicity")
            tableMapping.ColumnMappings.Add("Sensitization_to_product", "Sensitization_to_product")
            tableMapping.ColumnMappings.Add("Synergistic_products", "Synergistic_products")
            tableMapping.ColumnMappings.Add("Carcinogenicity", "Carcinogenicity")
            tableMapping.ColumnMappings.Add("Chronic", "Chronic")
            tableMapping.ColumnMappings.Add("Persistence", "Persistence")
            tableMapping.ColumnMappings.Add("Bioaccumulative_potential", "Bioaccumulative_potential")
            tableMapping.ColumnMappings.Add("Mobility", "Mobility")
            tableMapping.ColumnMappings.Add("Disposal", "Disposal")
            tableMapping.ColumnMappings.Add("RCRA_status", "RCRA_status")
            tableMapping.ColumnMappings.Add("TSCA", "TSCA")
            tableMapping.ColumnMappings.Add("SARA311I", "SARA311I")
            tableMapping.ColumnMappings.Add("SARA311D", "SARA311D")
            tableMapping.ColumnMappings.Add("SARA311F", "SARA311F")
            tableMapping.ColumnMappings.Add("SARA311P", "SARA311P")
            tableMapping.ColumnMappings.Add("SARA311R", "SARA311R")
            tableMapping.ColumnMappings.Add("HMISH", "HMISH")
            tableMapping.ColumnMappings.Add("HMISF", "HMISF")
            tableMapping.ColumnMappings.Add("HMISR", "HMISR")
            tableMapping.ColumnMappings.Add("HMISS", "HMISS")
            tableMapping.ColumnMappings.Add("NFPAH", "NFPAH")
            tableMapping.ColumnMappings.Add("NFPAF", "NFPAF")
            tableMapping.ColumnMappings.Add("NFPAR", "NFPAR")
            tableMapping.ColumnMappings.Add("NFPAS", "NFPAS")
            tableMapping.ColumnMappings.Add("FA_Eye_Contact_code", "FA_Eye_Contact_code")
            tableMapping.ColumnMappings.Add("FA_skin_contact_code", "FA_skin_contact_code")
            tableMapping.ColumnMappings.Add("FA_inhalation_code", "FA_inhalation_code")
            tableMapping.ColumnMappings.Add("FA_ingestion_code", "FA_ingestion_code")
            tableMapping.ColumnMappings.Add("Note_to_hcp_code", "Note_to_hcp_code")
            tableMapping.ColumnMappings.Add("Suitable_extinguishing_media_code", "Suitable_extinguishing_media_code")
            tableMapping.ColumnMappings.Add("Unsuitable_extinguishing_media_code", "Unsuitable_extinguishing_media_code")
            tableMapping.ColumnMappings.Add("Precautions_for_firefighters_code", "Precautions_for_firefighters_code")
            tableMapping.ColumnMappings.Add("Specific_hazards_code", "Specific_hazards_code")
            tableMapping.ColumnMappings.Add("Hazardous_combustion_products_code", "Hazardous_combustion_products_code")
            tableMapping.ColumnMappings.Add("Personal_precautions_code", "Personal_precautions_code")
            tableMapping.ColumnMappings.Add("Small_spills_code", "Small_spills_code")
            tableMapping.ColumnMappings.Add("Large_spills_code", "Large_spills_code")
            tableMapping.ColumnMappings.Add("Advice_on_safe_handling_code", "Advice_on_safe_handling_code")
            tableMapping.ColumnMappings.Add("Storage_conditions_code", "Storage_conditions_code")
            tableMapping.ColumnMappings.Add("Suitable_materials_of_construction_code", "Suitable_materials_of_construction_code")
            tableMapping.ColumnMappings.Add("Unsuitable_materials_of_construction_code", "Unsuitable_materials_of_construction_code")
            tableMapping.ColumnMappings.Add("Eye_face_protection_code", "Eye_face_protection_code")
            tableMapping.ColumnMappings.Add("Skin_protection_code", "Skin_protection_code")
            tableMapping.ColumnMappings.Add("Respiratory_protection_code", "Respiratory_protection_code")
            tableMapping.ColumnMappings.Add("Engineering_controls_code", "Engineering_controls_code")
            tableMapping.ColumnMappings.Add("General_hygiene_considerations_code", "General_hygiene_considerations_code")
            tableMapping.ColumnMappings.Add("Chemical_stability_code", "Chemical_stability_code")
            tableMapping.ColumnMappings.Add("Hazardous_polymerization_code", "Hazardous_polymerization_code")
            tableMapping.ColumnMappings.Add("Conditions_to_avoid_code", "Conditions_to_avoid_code")
            tableMapping.ColumnMappings.Add("Incompatibilities_code", "Incompatibilities_code")
            tableMapping.ColumnMappings.Add("Hazardous_decomposition_products_code", "Hazardous_decomposition_products_code")
            tableMapping.ColumnMappings.Add("Likely_routes_of_exposure_code", "Likely_routes_of_exposure_code")
            tableMapping.ColumnMappings.Add("Skin_contact_code", "Skin_contact_code")
            tableMapping.ColumnMappings.Add("Ingestion_code", "Ingestion_code")
            tableMapping.ColumnMappings.Add("Inhalation_code", "Inhalation_code")
            tableMapping.ColumnMappings.Add("Reproductive_effects_code", "Reproductive_effects_code")
            tableMapping.ColumnMappings.Add("Teratogenicity_code", "Teratogenicity_code")
            tableMapping.ColumnMappings.Add("Mutagenicity_code", "Mutagenicity_code")
            tableMapping.ColumnMappings.Add("Embryotoxicity_code", "Embryotoxicity_code")
            tableMapping.ColumnMappings.Add("Sensitization_to_product_code", "Sensitization_to_product_code")
            tableMapping.ColumnMappings.Add("Synergistic_products_code", "Synergistic_products_code")
            tableMapping.ColumnMappings.Add("Carcinogenicity_code", "Carcinogenicity_code")
            tableMapping.ColumnMappings.Add("Chronic_code", "Chronic_code")
            tableMapping.ColumnMappings.Add("Persistence_code", "Persistence_code")
            tableMapping.ColumnMappings.Add("Bioaccumulative_potential_code", "Bioaccumulative_potential_code")
            tableMapping.ColumnMappings.Add("Mobility_code", "Mobility_code")
            tableMapping.ColumnMappings.Add("Disposal_code", "Disposal_code")
            tableMapping.ColumnMappings.Add("RCRA_status_code", "RCRA_status_code")
            tableMapping.ColumnMappings.Add("Eye_contact_code", "Eye_contact_code")
            tableMapping.ColumnMappings.Add("TSCA_code", "TSCA_code")
            Me._adapter.TableMappings.Add(tableMapping)
            Me._adapter.InsertCommand = New Global.System.Data.OleDb.OleDbCommand()
            Me._adapter.InsertCommand.Connection = Me.Connection
            Me._adapter.InsertCommand.CommandText = "INSERT INTO `Safety Dance` (`SDID`, `DOTContains`, `UN_number`, `Proper_shipping_"& _ 
                "name`, `Primary_haz`, `Secondary_haz`, `Packing_group`, `DOT`, `DOT_label`, `Haz"& _ 
                "ard_classification`, `fucky`, `Signal_word`, `Hazard_statement`, `Pict1`, `Pict2"& _ 
                "`, `Pict3`, `Pict4`, `Pict5`, `Pre_prevention`, `Pre_response`, `Pre_storage`, `"& _ 
                "Pre_disposal`, `FA_eye_contact`, `FA_skin_contact`, `FA_ingestion`, `FA_inhalati"& _ 
                "on`, `Note_to_HCP`, `Suitable_extinguishing_media`, `Unsuitable_extinguishing_me"& _ 
                "dia`, `Precautions_for_firefighters`, `Specific_hazards`, `Hazardous_combustion_"& _ 
                "products`, `Personal_precautions`, `Small_spills`, `Large_spills`, `Advice_on_sa"& _ 
                "fe_handling`, `Storage_conditions`, `Suitable_materials_of_construction`, `Unsui"& _ 
                "table_materials_of_construction`, `Eye_face_protection`, `Skin_protection`, `Res"& _ 
                "piratory_protection`, `Engineering_controls`, `General_hygiene_considerations`, "& _ 
                "`Chemical_stability`, `Hazardous_polymerization`, `Conditions_to_avoid`, `Incomp"& _ 
                "atibilities`, `Hazardous_decomposition_products`, `Likely_routes_of_exposure`, `"& _ 
                "Eye_contact`, `Skin_contact`, `Ingestion`, `Inhalation`, `Reproductive_effects`,"& _ 
                " `Teratogenicity`, `Mutagenicity`, `Embryotoxicity`, `Sensitization_to_product`,"& _ 
                " `Synergistic_products`, `Carcinogenicity`, `Chronic`, `Persistence`, `Bioaccumu"& _ 
                "lative_potential`, `Mobility`, `Disposal`, `RCRA_status`, `TSCA`, `SARA311I`, `S"& _ 
                "ARA311D`, `SARA311F`, `SARA311P`, `SARA311R`, `HMISH`, `HMISF`, `HMISR`, `HMISS`"& _ 
                ", `NFPAH`, `NFPAF`, `NFPAR`, `NFPAS`, `FA_Eye_Contact_code`, `FA_skin_contact_co"& _ 
                "de`, `FA_inhalation_code`, `FA_ingestion_code`, `Note_to_hcp_code`, `Suitable_ex"& _ 
                "tinguishing_media_code`, `Unsuitable_extinguishing_media_code`, `Precautions_for"& _ 
                "_firefighters_code`, `Specific_hazards_code`, `Hazardous_combustion_products_cod"& _ 
                "e`, `Personal_precautions_code`, `Small_spills_code`, `Large_spills_code`, `Advi"& _ 
                "ce_on_safe_handling_code`, `Storage_conditions_code`, `Suitable_materials_of_con"& _ 
                "struction_code`, `Unsuitable_materials_of_construction_code`, `Eye_face_protecti"& _ 
                "on_code`, `Skin_protection_code`, `Respiratory_protection_code`, `Engineering_co"& _ 
                "ntrols_code`, `General_hygiene_considerations_code`, `Chemical_stability_code`, "& _ 
                "`Hazardous_polymerization_code`, `Conditions_to_avoid_code`, `Incompatibilities_"& _ 
                "code`, `Hazardous_decomposition_products_code`, `Likely_routes_of_exposure_code`"& _ 
                ", `Skin_contact_code`, `Ingestion_code`, `Inhalation_code`, `Reproductive_effect"& _ 
                "s_code`, `Teratogenicity_code`, `Mutagenicity_code`, `Embryotoxicity_code`, `Sen"& _ 
                "sitization_to_product_code`, `Synergistic_products_code`, `Carcinogenicity_code`"& _ 
                ", `Chronic_code`, `Persistence_code`, `Bioaccumulative_potential_code`, `Mobilit"& _ 
                "y_code`, `Disposal_code`, `RCRA_status_code`, `Eye_contact_code`, `TSCA_code`) V"& _ 
                "ALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?"& _ 
                ", ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, "& _ 
                "?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?,"& _ 
                " ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?"& _ 
                ", ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)"
            Me._adapter.InsertCommand.CommandType = Global.System.Data.CommandType.Text
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("SDID", Global.System.Data.OleDb.OleDbType.[Integer], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "SDID", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("DOTContains", Global.System.Data.OleDb.OleDbType.VarWChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "DOTContains", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("UN_number", Global.System.Data.OleDb.OleDbType.VarWChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "UN_number", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("Proper_shipping_name", Global.System.Data.OleDb.OleDbType.VarWChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "Proper_shipping_name", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("Primary_haz", Global.System.Data.OleDb.OleDbType.VarWChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "Primary_haz", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("Secondary_haz", Global.System.Data.OleDb.OleDbType.VarWChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "Secondary_haz", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("Packing_group", Global.System.Data.OleDb.OleDbType.VarWChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "Packing_group", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("DOT", Global.System.Data.OleDb.OleDbType.VarWChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "DOT", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("DOT_label", Global.System.Data.OleDb.OleDbType.VarWChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "DOT_label", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("Hazard_classification", Global.System.Data.OleDb.OleDbType.LongVarWChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "Hazard_classification", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("fucky", Global.System.Data.OleDb.OleDbType.LongVarWChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "fucky", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("Signal_word", Global.System.Data.OleDb.OleDbType.VarWChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "Signal_word", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("Hazard_statement", Global.System.Data.OleDb.OleDbType.LongVarWChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "Hazard_statement", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("Pict1", Global.System.Data.OleDb.OleDbType.VarWChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "Pict1", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("Pict2", Global.System.Data.OleDb.OleDbType.VarWChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "Pict2", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("Pict3", Global.System.Data.OleDb.OleDbType.VarWChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "Pict3", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("Pict4", Global.System.Data.OleDb.OleDbType.VarWChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "Pict4", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("Pict5", Global.System.Data.OleDb.OleDbType.VarWChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "Pict5", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("Pre_prevention", Global.System.Data.OleDb.OleDbType.LongVarWChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "Pre_prevention", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("Pre_response", Global.System.Data.OleDb.OleDbType.LongVarWChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "Pre_response", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("Pre_storage", Global.System.Data.OleDb.OleDbType.LongVarWChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "Pre_storage", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("Pre_disposal", Global.System.Data.OleDb.OleDbType.LongVarWChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "Pre_disposal", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("FA_eye_contact", Global.System.Data.OleDb.OleDbType.LongVarWChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "FA_eye_contact", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("FA_skin_contact", Global.System.Data.OleDb.OleDbType.LongVarWChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "FA_skin_contact", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("FA_ingestion", Global.System.Data.OleDb.OleDbType.LongVarWChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "FA_ingestion", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("FA_inhalation", Global.System.Data.OleDb.OleDbType.LongVarWChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "FA_inhalation", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("Note_to_HCP", Global.System.Data.OleDb.OleDbType.LongVarWChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "Note_to_HCP", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("Suitable_extinguishing_media", Global.System.Data.OleDb.OleDbType.LongVarWChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "Suitable_extinguishing_media", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("Unsuitable_extinguishing_media", Global.System.Data.OleDb.OleDbType.LongVarWChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "Unsuitable_extinguishing_media", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("Precautions_for_firefighters", Global.System.Data.OleDb.OleDbType.LongVarWChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "Precautions_for_firefighters", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("Specific_hazards", Global.System.Data.OleDb.OleDbType.LongVarWChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "Specific_hazards", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("Hazardous_combustion_products", Global.System.Data.OleDb.OleDbType.LongVarWChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "Hazardous_combustion_products", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("Personal_precautions", Global.System.Data.OleDb.OleDbType.LongVarWChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "Personal_precautions", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("Small_spills", Global.System.Data.OleDb.OleDbType.LongVarWChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "Small_spills", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("Large_spills", Global.System.Data.OleDb.OleDbType.LongVarWChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "Large_spills", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("Advice_on_safe_handling", Global.System.Data.OleDb.OleDbType.LongVarWChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "Advice_on_safe_handling", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("Storage_conditions", Global.System.Data.OleDb.OleDbType.LongVarWChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "Storage_conditions", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("Suitable_materials_of_construction", Global.System.Data.OleDb.OleDbType.LongVarWChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "Suitable_materials_of_construction", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("Unsuitable_materials_of_construction", Global.System.Data.OleDb.OleDbType.LongVarWChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "Unsuitable_materials_of_construction", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("Eye_face_protection", Global.System.Data.OleDb.OleDbType.LongVarWChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "Eye_face_protection", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("Skin_protection", Global.System.Data.OleDb.OleDbType.LongVarWChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "Skin_protection", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("Respiratory_protection", Global.System.Data.OleDb.OleDbType.LongVarWChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "Respiratory_protection", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("Engineering_controls", Global.System.Data.OleDb.OleDbType.LongVarWChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "Engineering_controls", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("General_hygiene_considerations", Global.System.Data.OleDb.OleDbType.LongVarWChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "General_hygiene_considerations", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("Chemical_stability", Global.System.Data.OleDb.OleDbType.LongVarWChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "Chemical_stability", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("Hazardous_polymerization", Global.System.Data.OleDb.OleDbType.LongVarWChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "Hazardous_polymerization", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("Conditions_to_avoid", Global.System.Data.OleDb.OleDbType.LongVarWChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "Conditions_to_avoid", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("Incompatibilities", Global.System.Data.OleDb.OleDbType.LongVarWChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "Incompatibilities", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("Hazardous_decomposition_products", Global.System.Data.OleDb.OleDbType.LongVarWChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "Hazardous_decomposition_products", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("Likely_routes_of_exposure", Global.System.Data.OleDb.OleDbType.LongVarWChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "Likely_routes_of_exposure", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("Eye_contact", Global.System.Data.OleDb.OleDbType.LongVarWChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "Eye_contact", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("Skin_contact", Global.System.Data.OleDb.OleDbType.LongVarWChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "Skin_contact", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("Ingestion", Global.System.Data.OleDb.OleDbType.LongVarWChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "Ingestion", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("Inhalation", Global.System.Data.OleDb.OleDbType.LongVarWChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "Inhalation", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("Reproductive_effects", Global.System.Data.OleDb.OleDbType.LongVarWChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "Reproductive_effects", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("Teratogenicity", Global.System.Data.OleDb.OleDbType.LongVarWChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "Teratogenicity", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("Mutagenicity", Global.System.Data.OleDb.OleDbType.LongVarWChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "Mutagenicity", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("Embryotoxicity", Global.System.Data.OleDb.OleDbType.LongVarWChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "Embryotoxicity", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("Sensitization_to_product", Global.System.Data.OleDb.OleDbType.LongVarWChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "Sensitization_to_product", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("Synergistic_products", Global.System.Data.OleDb.OleDbType.LongVarWChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "Synergistic_products", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("Carcinogenicity", Global.System.Data.OleDb.OleDbType.LongVarWChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "Carcinogenicity", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("Chronic", Global.System.Data.OleDb.OleDbType.LongVarWChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "Chronic", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("Persistence", Global.System.Data.OleDb.OleDbType.LongVarWChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "Persistence", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("Bioaccumulative_potential", Global.System.Data.OleDb.OleDbType.LongVarWChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "Bioaccumulative_potential", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("Mobility", Global.System.Data.OleDb.OleDbType.LongVarWChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "Mobility", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("Disposal", Global.System.Data.OleDb.OleDbType.LongVarWChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "Disposal", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("RCRA_status", Global.System.Data.OleDb.OleDbType.LongVarWChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "RCRA_status", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("TSCA", Global.System.Data.OleDb.OleDbType.LongVarWChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "TSCA", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("SARA311I", Global.System.Data.OleDb.OleDbType.[Boolean], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "SARA311I", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("SARA311D", Global.System.Data.OleDb.OleDbType.[Boolean], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "SARA311D", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("SARA311F", Global.System.Data.OleDb.OleDbType.[Boolean], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "SARA311F", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("SARA311P", Global.System.Data.OleDb.OleDbType.[Boolean], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "SARA311P", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("SARA311R", Global.System.Data.OleDb.OleDbType.[Boolean], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "SARA311R", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("HMISH", Global.System.Data.OleDb.OleDbType.VarWChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "HMISH", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("HMISF", Global.System.Data.OleDb.OleDbType.VarWChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "HMISF", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("HMISR", Global.System.Data.OleDb.OleDbType.VarWChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "HMISR", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("HMISS", Global.System.Data.OleDb.OleDbType.VarWChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "HMISS", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("NFPAH", Global.System.Data.OleDb.OleDbType.VarWChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "NFPAH", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("NFPAF", Global.System.Data.OleDb.OleDbType.VarWChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "NFPAF", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("NFPAR", Global.System.Data.OleDb.OleDbType.VarWChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "NFPAR", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("NFPAS", Global.System.Data.OleDb.OleDbType.VarWChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "NFPAS", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("FA_Eye_Contact_code", Global.System.Data.OleDb.OleDbType.[Integer], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "FA_Eye_Contact_code", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("FA_skin_contact_code", Global.System.Data.OleDb.OleDbType.[Integer], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "FA_skin_contact_code", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("FA_inhalation_code", Global.System.Data.OleDb.OleDbType.[Integer], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "FA_inhalation_code", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("FA_ingestion_code", Global.System.Data.OleDb.OleDbType.[Integer], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "FA_ingestion_code", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("Note_to_hcp_code", Global.System.Data.OleDb.OleDbType.[Integer], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "Note_to_hcp_code", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("Suitable_extinguishing_media_code", Global.System.Data.OleDb.OleDbType.[Integer], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "Suitable_extinguishing_media_code", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("Unsuitable_extinguishing_media_code", Global.System.Data.OleDb.OleDbType.[Integer], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "Unsuitable_extinguishing_media_code", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("Precautions_for_firefighters_code", Global.System.Data.OleDb.OleDbType.[Integer], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "Precautions_for_firefighters_code", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("Specific_hazards_code", Global.System.Data.OleDb.OleDbType.[Integer], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "Specific_hazards_code", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("Hazardous_combustion_products_code", Global.System.Data.OleDb.OleDbType.[Integer], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "Hazardous_combustion_products_code", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("Personal_precautions_code", Global.System.Data.OleDb.OleDbType.[Integer], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "Personal_precautions_code", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("Small_spills_code", Global.System.Data.OleDb.OleDbType.[Integer], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "Small_spills_code", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("Large_spills_code", Global.System.Data.OleDb.OleDbType.[Integer], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "Large_spills_code", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("Advice_on_safe_handling_code", Global.System.Data.OleDb.OleDbType.[Integer], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "Advice_on_safe_handling_code", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("Storage_conditions_code", Global.System.Data.OleDb.OleDbType.[Integer], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "Storage_conditions_code", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("Suitable_materials_of_construction_code", Global.System.Data.OleDb.OleDbType.[Integer], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "Suitable_materials_of_construction_code", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("Unsuitable_materials_of_construction_code", Global.System.Data.OleDb.OleDbType.[Integer], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "Unsuitable_materials_of_construction_code", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("Eye_face_protection_code", Global.System.Data.OleDb.OleDbType.[Integer], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "Eye_face_protection_code", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("Skin_protection_code", Global.System.Data.OleDb.OleDbType.[Integer], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "Skin_protection_code", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("Respiratory_protection_code", Global.System.Data.OleDb.OleDbType.[Integer], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "Respiratory_protection_code", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("Engineering_controls_code", Global.System.Data.OleDb.OleDbType.[Integer], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "Engineering_controls_code", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("General_hygiene_considerations_code", Global.System.Data.OleDb.OleDbType.[Integer], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "General_hygiene_considerations_code", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("Chemical_stability_code", Global.System.Data.OleDb.OleDbType.[Integer], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "Chemical_stability_code", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("Hazardous_polymerization_code", Global.System.Data.OleDb.OleDbType.[Integer], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "Hazardous_polymerization_code", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("Conditions_to_avoid_code", Global.System.Data.OleDb.OleDbType.[Integer], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "Conditions_to_avoid_code", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("Incompatibilities_code", Global.System.Data.OleDb.OleDbType.[Integer], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "Incompatibilities_code", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("Hazardous_decomposition_products_code", Global.System.Data.OleDb.OleDbType.[Integer], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "Hazardous_decomposition_products_code", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("Likely_routes_of_exposure_code", Global.System.Data.OleDb.OleDbType.[Integer], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "Likely_routes_of_exposure_code", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("Skin_contact_code", Global.System.Data.OleDb.OleDbType.[Integer], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "Skin_contact_code", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("Ingestion_code", Global.System.Data.OleDb.OleDbType.[Integer], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "Ingestion_code", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("Inhalation_code", Global.System.Data.OleDb.OleDbType.[Integer], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "Inhalation_code", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("Reproductive_effects_code", Global.System.Data.OleDb.OleDbType.[Integer], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "Reproductive_effects_code", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("Teratogenicity_code", Global.System.Data.OleDb.OleDbType.[Integer], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "Teratogenicity_code", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("Mutagenicity_code", Global.System.Data.OleDb.OleDbType.[Integer], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "Mutagenicity_code", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("Embryotoxicity_code", Global.System.Data.OleDb.OleDbType.[Integer], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "Embryotoxicity_code", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("Sensitization_to_product_code", Global.System.Data.OleDb.OleDbType.[Integer], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "Sensitization_to_product_code", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("Synergistic_products_code", Global.System.Data.OleDb.OleDbType.[Integer], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "Synergistic_products_code", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("Carcinogenicity_code", Global.System.Data.OleDb.OleDbType.[Integer], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "Carcinogenicity_code", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("Chronic_code", Global.System.Data.OleDb.OleDbType.[Integer], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "Chronic_code", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("Persistence_code", Global.System.Data.OleDb.OleDbType.[Integer], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "Persistence_code", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("Bioaccumulative_potential_code", Global.System.Data.OleDb.OleDbType.[Integer], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "Bioaccumulative_potential_code", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("Mobility_code", Global.System.Data.OleDb.OleDbType.[Integer], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "Mobility_code", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("Disposal_code", Global.System.Data.OleDb.OleDbType.[Integer], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "Disposal_code", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("RCRA_status_code", Global.System.Data.OleDb.OleDbType.[Integer], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "RCRA_status_code", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("Eye_contact_code", Global.System.Data.OleDb.OleDbType.[Integer], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "Eye_contact_code", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("TSCA_code", Global.System.Data.OleDb.OleDbType.[Integer], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "TSCA_code", Global.System.Data.DataRowVersion.Current, false, Nothing))
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Private Sub InitConnection()
            Me._connection = New Global.System.Data.OleDb.OleDbConnection()
            Me._connection.ConnectionString = Global.Interfacer5.MySettings.Default.Dossier
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Private Sub InitCommandCollection()
            Me._commandCollection = New Global.System.Data.OleDb.OleDbCommand(0) {}
            Me._commandCollection(0) = New Global.System.Data.OleDb.OleDbCommand()
            Me._commandCollection(0).Connection = Me.Connection
            Me._commandCollection(0).CommandText = "SELECT SDID, DOTContains, UN_number, Proper_shipping_name, Primary_haz, Secondary"& _ 
                "_haz, Packing_group, DOT, DOT_label, Hazard_classification, fucky, Signal_word, "& _ 
                "Hazard_statement, Pict1, Pict2, Pict3, Pict4, Pict5, Pre_prevention, Pre_respons"& _ 
                "e, Pre_storage, Pre_disposal, FA_eye_contact, FA_skin_contact, FA_ingestion, FA_"& _ 
                "inhalation, Note_to_HCP, Suitable_extinguishing_media, Unsuitable_extinguishing_"& _ 
                "media, Precautions_for_firefighters, Specific_hazards, Hazardous_combustion_prod"& _ 
                "ucts, Personal_precautions, Small_spills, Large_spills, Advice_on_safe_handling,"& _ 
                " Storage_conditions, Suitable_materials_of_construction, Unsuitable_materials_of"& _ 
                "_construction, Eye_face_protection, Skin_protection, Respiratory_protection, Eng"& _ 
                "ineering_controls, General_hygiene_considerations, Chemical_stability, Hazardous"& _ 
                "_polymerization, Conditions_to_avoid, Incompatibilities, Hazardous_decomposition"& _ 
                "_products, Likely_routes_of_exposure, Eye_contact, Skin_contact, Ingestion, Inha"& _ 
                "lation, Reproductive_effects, Teratogenicity, Mutagenicity, Embryotoxicity, Sens"& _ 
                "itization_to_product, Synergistic_products, Carcinogenicity, Chronic, Persistenc"& _ 
                "e, Bioaccumulative_potential, Mobility, Disposal, RCRA_status, TSCA, SARA311I, S"& _ 
                "ARA311D, SARA311F, SARA311P, SARA311R, HMISH, HMISF, HMISR, HMISS, NFPAH, NFPAF,"& _ 
                " NFPAR, NFPAS, FA_Eye_Contact_code, FA_skin_contact_code, FA_inhalation_code, FA"& _ 
                "_ingestion_code, Note_to_hcp_code, Suitable_extinguishing_media_code, Unsuitable"& _ 
                "_extinguishing_media_code, Precautions_for_firefighters_code, Specific_hazards_c"& _ 
                "ode, Hazardous_combustion_products_code, Personal_precautions_code, Small_spills"& _ 
                "_code, Large_spills_code, Advice_on_safe_handling_code, Storage_conditions_code,"& _ 
                " Suitable_materials_of_construction_code, Unsuitable_materials_of_construction_c"& _ 
                "ode, Eye_face_protection_code, Skin_protection_code, Respiratory_protection_code"& _ 
                ", Engineering_controls_code, General_hygiene_considerations_code, Chemical_stabi"& _ 
                "lity_code, Hazardous_polymerization_code, Conditions_to_avoid_code, Incompatibil"& _ 
                "ities_code, Hazardous_decomposition_products_code, Likely_routes_of_exposure_cod"& _ 
                "e, Skin_contact_code, Ingestion_code, Inhalation_code, Reproductive_effects_code"& _ 
                ", Teratogenicity_code, Mutagenicity_code, Embryotoxicity_code, Sensitization_to_"& _ 
                "product_code, Synergistic_products_code, Carcinogenicity_code, Chronic_code, Per"& _ 
                "sistence_code, Bioaccumulative_potential_code, Mobility_code, Disposal_code, RCR"& _ 
                "A_status_code, Eye_contact_code, TSCA_code FROM [Safety Dance]"
            Me._commandCollection(0).CommandType = Global.System.Data.CommandType.Text
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Fill, true)>  _
        Public Overloads Overridable Function Fill(ByVal dataTable As Dossier.Safety_DanceDataTable) As Integer
            Me.Adapter.SelectCommand = Me.CommandCollection(0)
            If (Me.ClearBeforeFill = true) Then
                dataTable.Clear
            End If
            Dim returnValue As Integer = Me.Adapter.Fill(dataTable)
            Return returnValue
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.[Select], true)>  _
        Public Overloads Overridable Function GetData() As Dossier.Safety_DanceDataTable
            Me.Adapter.SelectCommand = Me.CommandCollection(0)
            Dim dataTable As Dossier.Safety_DanceDataTable = New Dossier.Safety_DanceDataTable()
            Me.Adapter.Fill(dataTable)
            Return dataTable
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function Update(ByVal dataTable As Dossier.Safety_DanceDataTable) As Integer
            Return Me.Adapter.Update(dataTable)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function Update(ByVal dataSet As Dossier) As Integer
            Return Me.Adapter.Update(dataSet, "Safety Dance")
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function Update(ByVal dataRow As Global.System.Data.DataRow) As Integer
            Return Me.Adapter.Update(New Global.System.Data.DataRow() {dataRow})
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function Update(ByVal dataRows() As Global.System.Data.DataRow) As Integer
            Return Me.Adapter.Update(dataRows)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Insert, true)>  _
        Public Overloads Overridable Function Insert( _
                    ByVal SDID As Integer,  _
                    ByVal DOTContains As String,  _
                    ByVal UN_number As String,  _
                    ByVal Proper_shipping_name As String,  _
                    ByVal Primary_haz As String,  _
                    ByVal Secondary_haz As String,  _
                    ByVal Packing_group As String,  _
                    ByVal DOT As String,  _
                    ByVal DOT_label As String,  _
                    ByVal Hazard_classification As String,  _
                    ByVal fucky As String,  _
                    ByVal Signal_word As String,  _
                    ByVal Hazard_statement As String,  _
                    ByVal Pict1 As String,  _
                    ByVal Pict2 As String,  _
                    ByVal Pict3 As String,  _
                    ByVal Pict4 As String,  _
                    ByVal Pict5 As String,  _
                    ByVal Pre_prevention As String,  _
                    ByVal Pre_response As String,  _
                    ByVal Pre_storage As String,  _
                    ByVal Pre_disposal As String,  _
                    ByVal FA_eye_contact As String,  _
                    ByVal FA_skin_contact As String,  _
                    ByVal FA_ingestion As String,  _
                    ByVal FA_inhalation As String,  _
                    ByVal Note_to_HCP As String,  _
                    ByVal Suitable_extinguishing_media As String,  _
                    ByVal Unsuitable_extinguishing_media As String,  _
                    ByVal Precautions_for_firefighters As String,  _
                    ByVal Specific_hazards As String,  _
                    ByVal Hazardous_combustion_products As String,  _
                    ByVal Personal_precautions As String,  _
                    ByVal Small_spills As String,  _
                    ByVal Large_spills As String,  _
                    ByVal Advice_on_safe_handling As String,  _
                    ByVal Storage_conditions As String,  _
                    ByVal Suitable_materials_of_construction As String,  _
                    ByVal Unsuitable_materials_of_construction As String,  _
                    ByVal Eye_face_protection As String,  _
                    ByVal Skin_protection As String,  _
                    ByVal Respiratory_protection As String,  _
                    ByVal Engineering_controls As String,  _
                    ByVal General_hygiene_considerations As String,  _
                    ByVal Chemical_stability As String,  _
                    ByVal Hazardous_polymerization As String,  _
                    ByVal Conditions_to_avoid As String,  _
                    ByVal Incompatibilities As String,  _
                    ByVal Hazardous_decomposition_products As String,  _
                    ByVal Likely_routes_of_exposure As String,  _
                    ByVal Eye_contact As String,  _
                    ByVal Skin_contact As String,  _
                    ByVal Ingestion As String,  _
                    ByVal Inhalation As String,  _
                    ByVal Reproductive_effects As String,  _
                    ByVal Teratogenicity As String,  _
                    ByVal Mutagenicity As String,  _
                    ByVal Embryotoxicity As String,  _
                    ByVal Sensitization_to_product As String,  _
                    ByVal Synergistic_products As String,  _
                    ByVal Carcinogenicity As String,  _
                    ByVal Chronic As String,  _
                    ByVal Persistence As String,  _
                    ByVal Bioaccumulative_potential As String,  _
                    ByVal Mobility As String,  _
                    ByVal Disposal As String,  _
                    ByVal RCRA_status As String,  _
                    ByVal TSCA As String,  _
                    ByVal SARA311I As Boolean,  _
                    ByVal SARA311D As Boolean,  _
                    ByVal SARA311F As Boolean,  _
                    ByVal SARA311P As Boolean,  _
                    ByVal SARA311R As Boolean,  _
                    ByVal HMISH As String,  _
                    ByVal HMISF As String,  _
                    ByVal HMISR As String,  _
                    ByVal HMISS As String,  _
                    ByVal NFPAH As String,  _
                    ByVal NFPAF As String,  _
                    ByVal NFPAR As String,  _
                    ByVal NFPAS As String,  _
                    ByVal FA_Eye_Contact_code As Global.System.Nullable(Of Integer),  _
                    ByVal FA_skin_contact_code As Global.System.Nullable(Of Integer),  _
                    ByVal FA_inhalation_code As Global.System.Nullable(Of Integer),  _
                    ByVal FA_ingestion_code As Global.System.Nullable(Of Integer),  _
                    ByVal Note_to_hcp_code As Global.System.Nullable(Of Integer),  _
                    ByVal Suitable_extinguishing_media_code As Global.System.Nullable(Of Integer),  _
                    ByVal Unsuitable_extinguishing_media_code As Global.System.Nullable(Of Integer),  _
                    ByVal Precautions_for_firefighters_code As Global.System.Nullable(Of Integer),  _
                    ByVal Specific_hazards_code As Global.System.Nullable(Of Integer),  _
                    ByVal Hazardous_combustion_products_code As Global.System.Nullable(Of Integer),  _
                    ByVal Personal_precautions_code As Global.System.Nullable(Of Integer),  _
                    ByVal Small_spills_code As Global.System.Nullable(Of Integer),  _
                    ByVal Large_spills_code As Global.System.Nullable(Of Integer),  _
                    ByVal Advice_on_safe_handling_code As Global.System.Nullable(Of Integer),  _
                    ByVal Storage_conditions_code As Global.System.Nullable(Of Integer),  _
                    ByVal Suitable_materials_of_construction_code As Global.System.Nullable(Of Integer),  _
                    ByVal Unsuitable_materials_of_construction_code As Global.System.Nullable(Of Integer),  _
                    ByVal Eye_face_protection_code As Global.System.Nullable(Of Integer),  _
                    ByVal Skin_protection_code As Global.System.Nullable(Of Integer),  _
                    ByVal Respiratory_protection_code As Global.System.Nullable(Of Integer),  _
                    ByVal Engineering_controls_code As Global.System.Nullable(Of Integer),  _
                    ByVal General_hygiene_considerations_code As Global.System.Nullable(Of Integer),  _
                    ByVal Chemical_stability_code As Global.System.Nullable(Of Integer),  _
                    ByVal Hazardous_polymerization_code As Global.System.Nullable(Of Integer),  _
                    ByVal Conditions_to_avoid_code As Global.System.Nullable(Of Integer),  _
                    ByVal Incompatibilities_code As Global.System.Nullable(Of Integer),  _
                    ByVal Hazardous_decomposition_products_code As Global.System.Nullable(Of Integer),  _
                    ByVal Likely_routes_of_exposure_code As Global.System.Nullable(Of Integer),  _
                    ByVal Skin_contact_code As Global.System.Nullable(Of Integer),  _
                    ByVal Ingestion_code As Global.System.Nullable(Of Integer),  _
                    ByVal Inhalation_code As Global.System.Nullable(Of Integer),  _
                    ByVal Reproductive_effects_code As Global.System.Nullable(Of Integer),  _
                    ByVal Teratogenicity_code As Global.System.Nullable(Of Integer),  _
                    ByVal Mutagenicity_code As Global.System.Nullable(Of Integer),  _
                    ByVal Embryotoxicity_code As Global.System.Nullable(Of Integer),  _
                    ByVal Sensitization_to_product_code As Global.System.Nullable(Of Integer),  _
                    ByVal Synergistic_products_code As Global.System.Nullable(Of Integer),  _
                    ByVal Carcinogenicity_code As Global.System.Nullable(Of Integer),  _
                    ByVal Chronic_code As Global.System.Nullable(Of Integer),  _
                    ByVal Persistence_code As Global.System.Nullable(Of Integer),  _
                    ByVal Bioaccumulative_potential_code As Global.System.Nullable(Of Integer),  _
                    ByVal Mobility_code As Global.System.Nullable(Of Integer),  _
                    ByVal Disposal_code As Global.System.Nullable(Of Integer),  _
                    ByVal RCRA_status_code As Global.System.Nullable(Of Integer),  _
                    ByVal Eye_contact_code As Global.System.Nullable(Of Integer),  _
                    ByVal TSCA_code As Global.System.Nullable(Of Integer)) As Integer
            Me.Adapter.InsertCommand.Parameters(0).Value = CType(SDID,Integer)
            If (DOTContains Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(1).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(1).Value = CType(DOTContains,String)
            End If
            If (UN_number Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(2).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(2).Value = CType(UN_number,String)
            End If
            If (Proper_shipping_name Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(3).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(3).Value = CType(Proper_shipping_name,String)
            End If
            If (Primary_haz Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(4).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(4).Value = CType(Primary_haz,String)
            End If
            If (Secondary_haz Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(5).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(5).Value = CType(Secondary_haz,String)
            End If
            If (Packing_group Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(6).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(6).Value = CType(Packing_group,String)
            End If
            If (DOT Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(7).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(7).Value = CType(DOT,String)
            End If
            If (DOT_label Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(8).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(8).Value = CType(DOT_label,String)
            End If
            If (Hazard_classification Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(9).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(9).Value = CType(Hazard_classification,String)
            End If
            If (fucky Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(10).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(10).Value = CType(fucky,String)
            End If
            If (Signal_word Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(11).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(11).Value = CType(Signal_word,String)
            End If
            If (Hazard_statement Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(12).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(12).Value = CType(Hazard_statement,String)
            End If
            If (Pict1 Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(13).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(13).Value = CType(Pict1,String)
            End If
            If (Pict2 Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(14).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(14).Value = CType(Pict2,String)
            End If
            If (Pict3 Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(15).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(15).Value = CType(Pict3,String)
            End If
            If (Pict4 Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(16).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(16).Value = CType(Pict4,String)
            End If
            If (Pict5 Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(17).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(17).Value = CType(Pict5,String)
            End If
            If (Pre_prevention Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(18).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(18).Value = CType(Pre_prevention,String)
            End If
            If (Pre_response Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(19).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(19).Value = CType(Pre_response,String)
            End If
            If (Pre_storage Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(20).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(20).Value = CType(Pre_storage,String)
            End If
            If (Pre_disposal Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(21).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(21).Value = CType(Pre_disposal,String)
            End If
            If (FA_eye_contact Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(22).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(22).Value = CType(FA_eye_contact,String)
            End If
            If (FA_skin_contact Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(23).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(23).Value = CType(FA_skin_contact,String)
            End If
            If (FA_ingestion Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(24).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(24).Value = CType(FA_ingestion,String)
            End If
            If (FA_inhalation Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(25).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(25).Value = CType(FA_inhalation,String)
            End If
            If (Note_to_HCP Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(26).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(26).Value = CType(Note_to_HCP,String)
            End If
            If (Suitable_extinguishing_media Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(27).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(27).Value = CType(Suitable_extinguishing_media,String)
            End If
            If (Unsuitable_extinguishing_media Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(28).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(28).Value = CType(Unsuitable_extinguishing_media,String)
            End If
            If (Precautions_for_firefighters Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(29).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(29).Value = CType(Precautions_for_firefighters,String)
            End If
            If (Specific_hazards Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(30).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(30).Value = CType(Specific_hazards,String)
            End If
            If (Hazardous_combustion_products Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(31).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(31).Value = CType(Hazardous_combustion_products,String)
            End If
            If (Personal_precautions Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(32).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(32).Value = CType(Personal_precautions,String)
            End If
            If (Small_spills Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(33).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(33).Value = CType(Small_spills,String)
            End If
            If (Large_spills Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(34).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(34).Value = CType(Large_spills,String)
            End If
            If (Advice_on_safe_handling Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(35).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(35).Value = CType(Advice_on_safe_handling,String)
            End If
            If (Storage_conditions Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(36).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(36).Value = CType(Storage_conditions,String)
            End If
            If (Suitable_materials_of_construction Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(37).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(37).Value = CType(Suitable_materials_of_construction,String)
            End If
            If (Unsuitable_materials_of_construction Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(38).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(38).Value = CType(Unsuitable_materials_of_construction,String)
            End If
            If (Eye_face_protection Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(39).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(39).Value = CType(Eye_face_protection,String)
            End If
            If (Skin_protection Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(40).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(40).Value = CType(Skin_protection,String)
            End If
            If (Respiratory_protection Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(41).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(41).Value = CType(Respiratory_protection,String)
            End If
            If (Engineering_controls Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(42).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(42).Value = CType(Engineering_controls,String)
            End If
            If (General_hygiene_considerations Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(43).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(43).Value = CType(General_hygiene_considerations,String)
            End If
            If (Chemical_stability Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(44).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(44).Value = CType(Chemical_stability,String)
            End If
            If (Hazardous_polymerization Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(45).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(45).Value = CType(Hazardous_polymerization,String)
            End If
            If (Conditions_to_avoid Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(46).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(46).Value = CType(Conditions_to_avoid,String)
            End If
            If (Incompatibilities Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(47).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(47).Value = CType(Incompatibilities,String)
            End If
            If (Hazardous_decomposition_products Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(48).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(48).Value = CType(Hazardous_decomposition_products,String)
            End If
            If (Likely_routes_of_exposure Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(49).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(49).Value = CType(Likely_routes_of_exposure,String)
            End If
            If (Eye_contact Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(50).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(50).Value = CType(Eye_contact,String)
            End If
            If (Skin_contact Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(51).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(51).Value = CType(Skin_contact,String)
            End If
            If (Ingestion Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(52).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(52).Value = CType(Ingestion,String)
            End If
            If (Inhalation Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(53).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(53).Value = CType(Inhalation,String)
            End If
            If (Reproductive_effects Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(54).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(54).Value = CType(Reproductive_effects,String)
            End If
            If (Teratogenicity Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(55).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(55).Value = CType(Teratogenicity,String)
            End If
            If (Mutagenicity Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(56).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(56).Value = CType(Mutagenicity,String)
            End If
            If (Embryotoxicity Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(57).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(57).Value = CType(Embryotoxicity,String)
            End If
            If (Sensitization_to_product Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(58).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(58).Value = CType(Sensitization_to_product,String)
            End If
            If (Synergistic_products Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(59).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(59).Value = CType(Synergistic_products,String)
            End If
            If (Carcinogenicity Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(60).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(60).Value = CType(Carcinogenicity,String)
            End If
            If (Chronic Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(61).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(61).Value = CType(Chronic,String)
            End If
            If (Persistence Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(62).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(62).Value = CType(Persistence,String)
            End If
            If (Bioaccumulative_potential Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(63).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(63).Value = CType(Bioaccumulative_potential,String)
            End If
            If (Mobility Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(64).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(64).Value = CType(Mobility,String)
            End If
            If (Disposal Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(65).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(65).Value = CType(Disposal,String)
            End If
            If (RCRA_status Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(66).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(66).Value = CType(RCRA_status,String)
            End If
            If (TSCA Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(67).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(67).Value = CType(TSCA,String)
            End If
            Me.Adapter.InsertCommand.Parameters(68).Value = CType(SARA311I,Boolean)
            Me.Adapter.InsertCommand.Parameters(69).Value = CType(SARA311D,Boolean)
            Me.Adapter.InsertCommand.Parameters(70).Value = CType(SARA311F,Boolean)
            Me.Adapter.InsertCommand.Parameters(71).Value = CType(SARA311P,Boolean)
            Me.Adapter.InsertCommand.Parameters(72).Value = CType(SARA311R,Boolean)
            If (HMISH Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(73).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(73).Value = CType(HMISH,String)
            End If
            If (HMISF Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(74).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(74).Value = CType(HMISF,String)
            End If
            If (HMISR Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(75).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(75).Value = CType(HMISR,String)
            End If
            If (HMISS Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(76).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(76).Value = CType(HMISS,String)
            End If
            If (NFPAH Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(77).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(77).Value = CType(NFPAH,String)
            End If
            If (NFPAF Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(78).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(78).Value = CType(NFPAF,String)
            End If
            If (NFPAR Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(79).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(79).Value = CType(NFPAR,String)
            End If
            If (NFPAS Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(80).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(80).Value = CType(NFPAS,String)
            End If
            If (FA_Eye_Contact_code.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(81).Value = CType(FA_Eye_Contact_code.Value,Integer)
            Else
                Me.Adapter.InsertCommand.Parameters(81).Value = Global.System.DBNull.Value
            End If
            If (FA_skin_contact_code.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(82).Value = CType(FA_skin_contact_code.Value,Integer)
            Else
                Me.Adapter.InsertCommand.Parameters(82).Value = Global.System.DBNull.Value
            End If
            If (FA_inhalation_code.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(83).Value = CType(FA_inhalation_code.Value,Integer)
            Else
                Me.Adapter.InsertCommand.Parameters(83).Value = Global.System.DBNull.Value
            End If
            If (FA_ingestion_code.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(84).Value = CType(FA_ingestion_code.Value,Integer)
            Else
                Me.Adapter.InsertCommand.Parameters(84).Value = Global.System.DBNull.Value
            End If
            If (Note_to_hcp_code.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(85).Value = CType(Note_to_hcp_code.Value,Integer)
            Else
                Me.Adapter.InsertCommand.Parameters(85).Value = Global.System.DBNull.Value
            End If
            If (Suitable_extinguishing_media_code.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(86).Value = CType(Suitable_extinguishing_media_code.Value,Integer)
            Else
                Me.Adapter.InsertCommand.Parameters(86).Value = Global.System.DBNull.Value
            End If
            If (Unsuitable_extinguishing_media_code.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(87).Value = CType(Unsuitable_extinguishing_media_code.Value,Integer)
            Else
                Me.Adapter.InsertCommand.Parameters(87).Value = Global.System.DBNull.Value
            End If
            If (Precautions_for_firefighters_code.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(88).Value = CType(Precautions_for_firefighters_code.Value,Integer)
            Else
                Me.Adapter.InsertCommand.Parameters(88).Value = Global.System.DBNull.Value
            End If
            If (Specific_hazards_code.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(89).Value = CType(Specific_hazards_code.Value,Integer)
            Else
                Me.Adapter.InsertCommand.Parameters(89).Value = Global.System.DBNull.Value
            End If
            If (Hazardous_combustion_products_code.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(90).Value = CType(Hazardous_combustion_products_code.Value,Integer)
            Else
                Me.Adapter.InsertCommand.Parameters(90).Value = Global.System.DBNull.Value
            End If
            If (Personal_precautions_code.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(91).Value = CType(Personal_precautions_code.Value,Integer)
            Else
                Me.Adapter.InsertCommand.Parameters(91).Value = Global.System.DBNull.Value
            End If
            If (Small_spills_code.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(92).Value = CType(Small_spills_code.Value,Integer)
            Else
                Me.Adapter.InsertCommand.Parameters(92).Value = Global.System.DBNull.Value
            End If
            If (Large_spills_code.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(93).Value = CType(Large_spills_code.Value,Integer)
            Else
                Me.Adapter.InsertCommand.Parameters(93).Value = Global.System.DBNull.Value
            End If
            If (Advice_on_safe_handling_code.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(94).Value = CType(Advice_on_safe_handling_code.Value,Integer)
            Else
                Me.Adapter.InsertCommand.Parameters(94).Value = Global.System.DBNull.Value
            End If
            If (Storage_conditions_code.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(95).Value = CType(Storage_conditions_code.Value,Integer)
            Else
                Me.Adapter.InsertCommand.Parameters(95).Value = Global.System.DBNull.Value
            End If
            If (Suitable_materials_of_construction_code.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(96).Value = CType(Suitable_materials_of_construction_code.Value,Integer)
            Else
                Me.Adapter.InsertCommand.Parameters(96).Value = Global.System.DBNull.Value
            End If
            If (Unsuitable_materials_of_construction_code.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(97).Value = CType(Unsuitable_materials_of_construction_code.Value,Integer)
            Else
                Me.Adapter.InsertCommand.Parameters(97).Value = Global.System.DBNull.Value
            End If
            If (Eye_face_protection_code.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(98).Value = CType(Eye_face_protection_code.Value,Integer)
            Else
                Me.Adapter.InsertCommand.Parameters(98).Value = Global.System.DBNull.Value
            End If
            If (Skin_protection_code.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(99).Value = CType(Skin_protection_code.Value,Integer)
            Else
                Me.Adapter.InsertCommand.Parameters(99).Value = Global.System.DBNull.Value
            End If
            If (Respiratory_protection_code.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(100).Value = CType(Respiratory_protection_code.Value,Integer)
            Else
                Me.Adapter.InsertCommand.Parameters(100).Value = Global.System.DBNull.Value
            End If
            If (Engineering_controls_code.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(101).Value = CType(Engineering_controls_code.Value,Integer)
            Else
                Me.Adapter.InsertCommand.Parameters(101).Value = Global.System.DBNull.Value
            End If
            If (General_hygiene_considerations_code.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(102).Value = CType(General_hygiene_considerations_code.Value,Integer)
            Else
                Me.Adapter.InsertCommand.Parameters(102).Value = Global.System.DBNull.Value
            End If
            If (Chemical_stability_code.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(103).Value = CType(Chemical_stability_code.Value,Integer)
            Else
                Me.Adapter.InsertCommand.Parameters(103).Value = Global.System.DBNull.Value
            End If
            If (Hazardous_polymerization_code.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(104).Value = CType(Hazardous_polymerization_code.Value,Integer)
            Else
                Me.Adapter.InsertCommand.Parameters(104).Value = Global.System.DBNull.Value
            End If
            If (Conditions_to_avoid_code.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(105).Value = CType(Conditions_to_avoid_code.Value,Integer)
            Else
                Me.Adapter.InsertCommand.Parameters(105).Value = Global.System.DBNull.Value
            End If
            If (Incompatibilities_code.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(106).Value = CType(Incompatibilities_code.Value,Integer)
            Else
                Me.Adapter.InsertCommand.Parameters(106).Value = Global.System.DBNull.Value
            End If
            If (Hazardous_decomposition_products_code.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(107).Value = CType(Hazardous_decomposition_products_code.Value,Integer)
            Else
                Me.Adapter.InsertCommand.Parameters(107).Value = Global.System.DBNull.Value
            End If
            If (Likely_routes_of_exposure_code.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(108).Value = CType(Likely_routes_of_exposure_code.Value,Integer)
            Else
                Me.Adapter.InsertCommand.Parameters(108).Value = Global.System.DBNull.Value
            End If
            If (Skin_contact_code.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(109).Value = CType(Skin_contact_code.Value,Integer)
            Else
                Me.Adapter.InsertCommand.Parameters(109).Value = Global.System.DBNull.Value
            End If
            If (Ingestion_code.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(110).Value = CType(Ingestion_code.Value,Integer)
            Else
                Me.Adapter.InsertCommand.Parameters(110).Value = Global.System.DBNull.Value
            End If
            If (Inhalation_code.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(111).Value = CType(Inhalation_code.Value,Integer)
            Else
                Me.Adapter.InsertCommand.Parameters(111).Value = Global.System.DBNull.Value
            End If
            If (Reproductive_effects_code.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(112).Value = CType(Reproductive_effects_code.Value,Integer)
            Else
                Me.Adapter.InsertCommand.Parameters(112).Value = Global.System.DBNull.Value
            End If
            If (Teratogenicity_code.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(113).Value = CType(Teratogenicity_code.Value,Integer)
            Else
                Me.Adapter.InsertCommand.Parameters(113).Value = Global.System.DBNull.Value
            End If
            If (Mutagenicity_code.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(114).Value = CType(Mutagenicity_code.Value,Integer)
            Else
                Me.Adapter.InsertCommand.Parameters(114).Value = Global.System.DBNull.Value
            End If
            If (Embryotoxicity_code.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(115).Value = CType(Embryotoxicity_code.Value,Integer)
            Else
                Me.Adapter.InsertCommand.Parameters(115).Value = Global.System.DBNull.Value
            End If
            If (Sensitization_to_product_code.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(116).Value = CType(Sensitization_to_product_code.Value,Integer)
            Else
                Me.Adapter.InsertCommand.Parameters(116).Value = Global.System.DBNull.Value
            End If
            If (Synergistic_products_code.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(117).Value = CType(Synergistic_products_code.Value,Integer)
            Else
                Me.Adapter.InsertCommand.Parameters(117).Value = Global.System.DBNull.Value
            End If
            If (Carcinogenicity_code.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(118).Value = CType(Carcinogenicity_code.Value,Integer)
            Else
                Me.Adapter.InsertCommand.Parameters(118).Value = Global.System.DBNull.Value
            End If
            If (Chronic_code.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(119).Value = CType(Chronic_code.Value,Integer)
            Else
                Me.Adapter.InsertCommand.Parameters(119).Value = Global.System.DBNull.Value
            End If
            If (Persistence_code.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(120).Value = CType(Persistence_code.Value,Integer)
            Else
                Me.Adapter.InsertCommand.Parameters(120).Value = Global.System.DBNull.Value
            End If
            If (Bioaccumulative_potential_code.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(121).Value = CType(Bioaccumulative_potential_code.Value,Integer)
            Else
                Me.Adapter.InsertCommand.Parameters(121).Value = Global.System.DBNull.Value
            End If
            If (Mobility_code.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(122).Value = CType(Mobility_code.Value,Integer)
            Else
                Me.Adapter.InsertCommand.Parameters(122).Value = Global.System.DBNull.Value
            End If
            If (Disposal_code.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(123).Value = CType(Disposal_code.Value,Integer)
            Else
                Me.Adapter.InsertCommand.Parameters(123).Value = Global.System.DBNull.Value
            End If
            If (RCRA_status_code.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(124).Value = CType(RCRA_status_code.Value,Integer)
            Else
                Me.Adapter.InsertCommand.Parameters(124).Value = Global.System.DBNull.Value
            End If
            If (Eye_contact_code.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(125).Value = CType(Eye_contact_code.Value,Integer)
            Else
                Me.Adapter.InsertCommand.Parameters(125).Value = Global.System.DBNull.Value
            End If
            If (TSCA_code.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(126).Value = CType(TSCA_code.Value,Integer)
            Else
                Me.Adapter.InsertCommand.Parameters(126).Value = Global.System.DBNull.Value
            End If
            Dim previousConnectionState As Global.System.Data.ConnectionState = Me.Adapter.InsertCommand.Connection.State
            If ((Me.Adapter.InsertCommand.Connection.State And Global.System.Data.ConnectionState.Open)  _
                        <> Global.System.Data.ConnectionState.Open) Then
                Me.Adapter.InsertCommand.Connection.Open
            End If
            Try 
                Dim returnValue As Integer = Me.Adapter.InsertCommand.ExecuteNonQuery
                Return returnValue
            Finally
                If (previousConnectionState = Global.System.Data.ConnectionState.Closed) Then
                    Me.Adapter.InsertCommand.Connection.Close
                End If
            End Try
        End Function
    End Class
    
    '''<summary>
    '''Represents the connection and commands used to retrieve and save data.
    '''</summary>
    <Global.System.ComponentModel.DesignerCategoryAttribute("code"),  _
     Global.System.ComponentModel.ToolboxItem(true),  _
     Global.System.ComponentModel.DataObjectAttribute(true),  _
     Global.System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner"& _ 
        ", Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a"),  _
     Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
    Partial Public Class Safety_LexiconTableAdapter
        Inherits Global.System.ComponentModel.Component
        
        Private WithEvents _adapter As Global.System.Data.OleDb.OleDbDataAdapter
        
        Private _connection As Global.System.Data.OleDb.OleDbConnection
        
        Private _transaction As Global.System.Data.OleDb.OleDbTransaction
        
        Private _commandCollection() As Global.System.Data.OleDb.OleDbCommand
        
        Private _clearBeforeFill As Boolean
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub New()
            MyBase.New
            Me.ClearBeforeFill = true
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Friend ReadOnly Property Adapter() As Global.System.Data.OleDb.OleDbDataAdapter
            Get
                If (Me._adapter Is Nothing) Then
                    Me.InitAdapter
                End If
                Return Me._adapter
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Property Connection() As Global.System.Data.OleDb.OleDbConnection
            Get
                If (Me._connection Is Nothing) Then
                    Me.InitConnection
                End If
                Return Me._connection
            End Get
            Set
                Me._connection = value
                If (Not (Me.Adapter.InsertCommand) Is Nothing) Then
                    Me.Adapter.InsertCommand.Connection = value
                End If
                If (Not (Me.Adapter.DeleteCommand) Is Nothing) Then
                    Me.Adapter.DeleteCommand.Connection = value
                End If
                If (Not (Me.Adapter.UpdateCommand) Is Nothing) Then
                    Me.Adapter.UpdateCommand.Connection = value
                End If
                Dim i As Integer = 0
                Do While (i < Me.CommandCollection.Length)
                    If (Not (Me.CommandCollection(i)) Is Nothing) Then
                        CType(Me.CommandCollection(i),Global.System.Data.OleDb.OleDbCommand).Connection = value
                    End If
                    i = (i + 1)
                Loop
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Property Transaction() As Global.System.Data.OleDb.OleDbTransaction
            Get
                Return Me._transaction
            End Get
            Set
                Me._transaction = value
                Dim i As Integer = 0
                Do While (i < Me.CommandCollection.Length)
                    Me.CommandCollection(i).Transaction = Me._transaction
                    i = (i + 1)
                Loop
                If ((Not (Me.Adapter) Is Nothing)  _
                            AndAlso (Not (Me.Adapter.DeleteCommand) Is Nothing)) Then
                    Me.Adapter.DeleteCommand.Transaction = Me._transaction
                End If
                If ((Not (Me.Adapter) Is Nothing)  _
                            AndAlso (Not (Me.Adapter.InsertCommand) Is Nothing)) Then
                    Me.Adapter.InsertCommand.Transaction = Me._transaction
                End If
                If ((Not (Me.Adapter) Is Nothing)  _
                            AndAlso (Not (Me.Adapter.UpdateCommand) Is Nothing)) Then
                    Me.Adapter.UpdateCommand.Transaction = Me._transaction
                End If
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected ReadOnly Property CommandCollection() As Global.System.Data.OleDb.OleDbCommand()
            Get
                If (Me._commandCollection Is Nothing) Then
                    Me.InitCommandCollection
                End If
                Return Me._commandCollection
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property ClearBeforeFill() As Boolean
            Get
                Return Me._clearBeforeFill
            End Get
            Set
                Me._clearBeforeFill = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Private Sub InitAdapter()
            Me._adapter = New Global.System.Data.OleDb.OleDbDataAdapter()
            Dim tableMapping As Global.System.Data.Common.DataTableMapping = New Global.System.Data.Common.DataTableMapping()
            tableMapping.SourceTable = "Table"
            tableMapping.DataSetTable = "Safety Lexicon"
            tableMapping.ColumnMappings.Add("SAFLEXID", "SAFLEXID")
            tableMapping.ColumnMappings.Add("FA_eye_contact", "FA_eye_contact")
            tableMapping.ColumnMappings.Add("FA_skin_contact", "FA_skin_contact")
            tableMapping.ColumnMappings.Add("FA_ingestion", "FA_ingestion")
            tableMapping.ColumnMappings.Add("FA_inhalation", "FA_inhalation")
            tableMapping.ColumnMappings.Add("Note_to_HCP", "Note_to_HCP")
            tableMapping.ColumnMappings.Add("Suitable_extinguishing_media", "Suitable_extinguishing_media")
            tableMapping.ColumnMappings.Add("Unsuitable_extinguishing_media", "Unsuitable_extinguishing_media")
            tableMapping.ColumnMappings.Add("Precautions_for_firefighters", "Precautions_for_firefighters")
            tableMapping.ColumnMappings.Add("Specific_hazards", "Specific_hazards")
            tableMapping.ColumnMappings.Add("Hazardous_combustion_products", "Hazardous_combustion_products")
            tableMapping.ColumnMappings.Add("Personal_precautions", "Personal_precautions")
            tableMapping.ColumnMappings.Add("Small_spills", "Small_spills")
            tableMapping.ColumnMappings.Add("Large_spills", "Large_spills")
            tableMapping.ColumnMappings.Add("Advice_on_safe_handling", "Advice_on_safe_handling")
            tableMapping.ColumnMappings.Add("Storage_conditions", "Storage_conditions")
            tableMapping.ColumnMappings.Add("Suitable_materials_of_construction", "Suitable_materials_of_construction")
            tableMapping.ColumnMappings.Add("Unsuitable_materials_of_construction", "Unsuitable_materials_of_construction")
            tableMapping.ColumnMappings.Add("Eye_face_protection", "Eye_face_protection")
            tableMapping.ColumnMappings.Add("Skin_protection", "Skin_protection")
            tableMapping.ColumnMappings.Add("Respiratory_protection", "Respiratory_protection")
            tableMapping.ColumnMappings.Add("Engineering_controls", "Engineering_controls")
            tableMapping.ColumnMappings.Add("General_hygiene_considerations", "General_hygiene_considerations")
            tableMapping.ColumnMappings.Add("Chemical_stability", "Chemical_stability")
            tableMapping.ColumnMappings.Add("Hazardous_polymerization", "Hazardous_polymerization")
            tableMapping.ColumnMappings.Add("Conditions_to_avoid", "Conditions_to_avoid")
            tableMapping.ColumnMappings.Add("Incompatibilities", "Incompatibilities")
            tableMapping.ColumnMappings.Add("Hazardous_decomposition_products", "Hazardous_decomposition_products")
            tableMapping.ColumnMappings.Add("Likely_routes_of_exposure", "Likely_routes_of_exposure")
            tableMapping.ColumnMappings.Add("Eye_contact", "Eye_contact")
            tableMapping.ColumnMappings.Add("Skin_contact", "Skin_contact")
            tableMapping.ColumnMappings.Add("Ingestion", "Ingestion")
            tableMapping.ColumnMappings.Add("Inhalation", "Inhalation")
            tableMapping.ColumnMappings.Add("Reproductive_effects", "Reproductive_effects")
            tableMapping.ColumnMappings.Add("Teratogenicity", "Teratogenicity")
            tableMapping.ColumnMappings.Add("Mutagenicity", "Mutagenicity")
            tableMapping.ColumnMappings.Add("Embryotoxicity", "Embryotoxicity")
            tableMapping.ColumnMappings.Add("Sensitization_to_product", "Sensitization_to_product")
            tableMapping.ColumnMappings.Add("Synergistic_products", "Synergistic_products")
            tableMapping.ColumnMappings.Add("Carcinogenicity", "Carcinogenicity")
            tableMapping.ColumnMappings.Add("Chronic", "Chronic")
            tableMapping.ColumnMappings.Add("Persistence", "Persistence")
            tableMapping.ColumnMappings.Add("Bioaccumulative_potential", "Bioaccumulative_potential")
            tableMapping.ColumnMappings.Add("Mobility", "Mobility")
            tableMapping.ColumnMappings.Add("Disposal", "Disposal")
            tableMapping.ColumnMappings.Add("RCRA_status", "RCRA_status")
            tableMapping.ColumnMappings.Add("TSCA", "TSCA")
            Me._adapter.TableMappings.Add(tableMapping)
            Me._adapter.InsertCommand = New Global.System.Data.OleDb.OleDbCommand()
            Me._adapter.InsertCommand.Connection = Me.Connection
            Me._adapter.InsertCommand.CommandText = "INSERT INTO `Safety Lexicon` (`FA_eye_contact`, `FA_skin_contact`, `FA_ingestion`"& _ 
                ", `FA_inhalation`, `Note_to_HCP`, `Suitable_extinguishing_media`, `Unsuitable_ex"& _ 
                "tinguishing_media`, `Precautions_for_firefighters`, `Specific_hazards`, `Hazardo"& _ 
                "us_combustion_products`, `Personal_precautions`, `Small_spills`, `Large_spills`,"& _ 
                " `Advice_on_safe_handling`, `Storage_conditions`, `Suitable_materials_of_constru"& _ 
                "ction`, `Unsuitable_materials_of_construction`, `Eye_face_protection`, `Skin_pro"& _ 
                "tection`, `Respiratory_protection`, `Engineering_controls`, `General_hygiene_con"& _ 
                "siderations`, `Chemical_stability`, `Hazardous_polymerization`, `Conditions_to_a"& _ 
                "void`, `Incompatibilities`, `Hazardous_decomposition_products`, `Likely_routes_o"& _ 
                "f_exposure`, `Eye_contact`, `Skin_contact`, `Ingestion`, `Inhalation`, `Reproduc"& _ 
                "tive_effects`, `Teratogenicity`, `Mutagenicity`, `Embryotoxicity`, `Sensitizatio"& _ 
                "n_to_product`, `Synergistic_products`, `Carcinogenicity`, `Chronic`, `Persistenc"& _ 
                "e`, `Bioaccumulative_potential`, `Mobility`, `Disposal`, `RCRA_status`, `TSCA`) "& _ 
                "VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, "& _ 
                "?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)"
            Me._adapter.InsertCommand.CommandType = Global.System.Data.CommandType.Text
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("FA_eye_contact", Global.System.Data.OleDb.OleDbType.LongVarWChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "FA_eye_contact", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("FA_skin_contact", Global.System.Data.OleDb.OleDbType.LongVarWChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "FA_skin_contact", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("FA_ingestion", Global.System.Data.OleDb.OleDbType.LongVarWChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "FA_ingestion", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("FA_inhalation", Global.System.Data.OleDb.OleDbType.LongVarWChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "FA_inhalation", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("Note_to_HCP", Global.System.Data.OleDb.OleDbType.LongVarWChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "Note_to_HCP", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("Suitable_extinguishing_media", Global.System.Data.OleDb.OleDbType.LongVarWChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "Suitable_extinguishing_media", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("Unsuitable_extinguishing_media", Global.System.Data.OleDb.OleDbType.LongVarWChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "Unsuitable_extinguishing_media", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("Precautions_for_firefighters", Global.System.Data.OleDb.OleDbType.LongVarWChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "Precautions_for_firefighters", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("Specific_hazards", Global.System.Data.OleDb.OleDbType.LongVarWChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "Specific_hazards", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("Hazardous_combustion_products", Global.System.Data.OleDb.OleDbType.LongVarWChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "Hazardous_combustion_products", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("Personal_precautions", Global.System.Data.OleDb.OleDbType.LongVarWChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "Personal_precautions", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("Small_spills", Global.System.Data.OleDb.OleDbType.LongVarWChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "Small_spills", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("Large_spills", Global.System.Data.OleDb.OleDbType.LongVarWChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "Large_spills", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("Advice_on_safe_handling", Global.System.Data.OleDb.OleDbType.LongVarWChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "Advice_on_safe_handling", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("Storage_conditions", Global.System.Data.OleDb.OleDbType.LongVarWChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "Storage_conditions", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("Suitable_materials_of_construction", Global.System.Data.OleDb.OleDbType.LongVarWChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "Suitable_materials_of_construction", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("Unsuitable_materials_of_construction", Global.System.Data.OleDb.OleDbType.LongVarWChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "Unsuitable_materials_of_construction", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("Eye_face_protection", Global.System.Data.OleDb.OleDbType.LongVarWChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "Eye_face_protection", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("Skin_protection", Global.System.Data.OleDb.OleDbType.LongVarWChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "Skin_protection", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("Respiratory_protection", Global.System.Data.OleDb.OleDbType.LongVarWChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "Respiratory_protection", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("Engineering_controls", Global.System.Data.OleDb.OleDbType.LongVarWChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "Engineering_controls", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("General_hygiene_considerations", Global.System.Data.OleDb.OleDbType.LongVarWChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "General_hygiene_considerations", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("Chemical_stability", Global.System.Data.OleDb.OleDbType.LongVarWChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "Chemical_stability", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("Hazardous_polymerization", Global.System.Data.OleDb.OleDbType.LongVarWChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "Hazardous_polymerization", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("Conditions_to_avoid", Global.System.Data.OleDb.OleDbType.LongVarWChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "Conditions_to_avoid", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("Incompatibilities", Global.System.Data.OleDb.OleDbType.LongVarWChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "Incompatibilities", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("Hazardous_decomposition_products", Global.System.Data.OleDb.OleDbType.LongVarWChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "Hazardous_decomposition_products", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("Likely_routes_of_exposure", Global.System.Data.OleDb.OleDbType.LongVarWChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "Likely_routes_of_exposure", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("Eye_contact", Global.System.Data.OleDb.OleDbType.LongVarWChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "Eye_contact", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("Skin_contact", Global.System.Data.OleDb.OleDbType.LongVarWChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "Skin_contact", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("Ingestion", Global.System.Data.OleDb.OleDbType.LongVarWChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "Ingestion", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("Inhalation", Global.System.Data.OleDb.OleDbType.LongVarWChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "Inhalation", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("Reproductive_effects", Global.System.Data.OleDb.OleDbType.LongVarWChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "Reproductive_effects", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("Teratogenicity", Global.System.Data.OleDb.OleDbType.LongVarWChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "Teratogenicity", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("Mutagenicity", Global.System.Data.OleDb.OleDbType.LongVarWChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "Mutagenicity", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("Embryotoxicity", Global.System.Data.OleDb.OleDbType.LongVarWChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "Embryotoxicity", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("Sensitization_to_product", Global.System.Data.OleDb.OleDbType.LongVarWChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "Sensitization_to_product", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("Synergistic_products", Global.System.Data.OleDb.OleDbType.LongVarWChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "Synergistic_products", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("Carcinogenicity", Global.System.Data.OleDb.OleDbType.LongVarWChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "Carcinogenicity", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("Chronic", Global.System.Data.OleDb.OleDbType.LongVarWChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "Chronic", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("Persistence", Global.System.Data.OleDb.OleDbType.LongVarWChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "Persistence", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("Bioaccumulative_potential", Global.System.Data.OleDb.OleDbType.LongVarWChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "Bioaccumulative_potential", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("Mobility", Global.System.Data.OleDb.OleDbType.LongVarWChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "Mobility", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("Disposal", Global.System.Data.OleDb.OleDbType.LongVarWChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "Disposal", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("RCRA_status", Global.System.Data.OleDb.OleDbType.LongVarWChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "RCRA_status", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.OleDb.OleDbParameter("TSCA", Global.System.Data.OleDb.OleDbType.LongVarWChar, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "TSCA", Global.System.Data.DataRowVersion.Current, false, Nothing))
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Private Sub InitConnection()
            Me._connection = New Global.System.Data.OleDb.OleDbConnection()
            Me._connection.ConnectionString = Global.Interfacer5.MySettings.Default.Dossier
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Private Sub InitCommandCollection()
            Me._commandCollection = New Global.System.Data.OleDb.OleDbCommand(0) {}
            Me._commandCollection(0) = New Global.System.Data.OleDb.OleDbCommand()
            Me._commandCollection(0).Connection = Me.Connection
            Me._commandCollection(0).CommandText = "SELECT SAFLEXID, FA_eye_contact, FA_skin_contact, FA_ingestion, FA_inhalation, No"& _ 
                "te_to_HCP, Suitable_extinguishing_media, Unsuitable_extinguishing_media, Precaut"& _ 
                "ions_for_firefighters, Specific_hazards, Hazardous_combustion_products, Personal"& _ 
                "_precautions, Small_spills, Large_spills, Advice_on_safe_handling, Storage_condi"& _ 
                "tions, Suitable_materials_of_construction, Unsuitable_materials_of_construction,"& _ 
                " Eye_face_protection, Skin_protection, Respiratory_protection, Engineering_contr"& _ 
                "ols, General_hygiene_considerations, Chemical_stability, Hazardous_polymerizatio"& _ 
                "n, Conditions_to_avoid, Incompatibilities, Hazardous_decomposition_products, Lik"& _ 
                "ely_routes_of_exposure, Eye_contact, Skin_contact, Ingestion, Inhalation, Reprod"& _ 
                "uctive_effects, Teratogenicity, Mutagenicity, Embryotoxicity, Sensitization_to_p"& _ 
                "roduct, Synergistic_products, Carcinogenicity, Chronic, Persistence, Bioaccumula"& _ 
                "tive_potential, Mobility, Disposal, RCRA_status, TSCA FROM [Safety Lexicon]"
            Me._commandCollection(0).CommandType = Global.System.Data.CommandType.Text
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Fill, true)>  _
        Public Overloads Overridable Function Fill(ByVal dataTable As Dossier.Safety_LexiconDataTable) As Integer
            Me.Adapter.SelectCommand = Me.CommandCollection(0)
            If (Me.ClearBeforeFill = true) Then
                dataTable.Clear
            End If
            Dim returnValue As Integer = Me.Adapter.Fill(dataTable)
            Return returnValue
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.[Select], true)>  _
        Public Overloads Overridable Function GetData() As Dossier.Safety_LexiconDataTable
            Me.Adapter.SelectCommand = Me.CommandCollection(0)
            Dim dataTable As Dossier.Safety_LexiconDataTable = New Dossier.Safety_LexiconDataTable()
            Me.Adapter.Fill(dataTable)
            Return dataTable
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function Update(ByVal dataTable As Dossier.Safety_LexiconDataTable) As Integer
            Return Me.Adapter.Update(dataTable)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function Update(ByVal dataSet As Dossier) As Integer
            Return Me.Adapter.Update(dataSet, "Safety Lexicon")
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function Update(ByVal dataRow As Global.System.Data.DataRow) As Integer
            Return Me.Adapter.Update(New Global.System.Data.DataRow() {dataRow})
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function Update(ByVal dataRows() As Global.System.Data.DataRow) As Integer
            Return Me.Adapter.Update(dataRows)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Insert, true)>  _
        Public Overloads Overridable Function Insert( _
                    ByVal FA_eye_contact As String,  _
                    ByVal FA_skin_contact As String,  _
                    ByVal FA_ingestion As String,  _
                    ByVal FA_inhalation As String,  _
                    ByVal Note_to_HCP As String,  _
                    ByVal Suitable_extinguishing_media As String,  _
                    ByVal Unsuitable_extinguishing_media As String,  _
                    ByVal Precautions_for_firefighters As String,  _
                    ByVal Specific_hazards As String,  _
                    ByVal Hazardous_combustion_products As String,  _
                    ByVal Personal_precautions As String,  _
                    ByVal Small_spills As String,  _
                    ByVal Large_spills As String,  _
                    ByVal Advice_on_safe_handling As String,  _
                    ByVal Storage_conditions As String,  _
                    ByVal Suitable_materials_of_construction As String,  _
                    ByVal Unsuitable_materials_of_construction As String,  _
                    ByVal Eye_face_protection As String,  _
                    ByVal Skin_protection As String,  _
                    ByVal Respiratory_protection As String,  _
                    ByVal Engineering_controls As String,  _
                    ByVal General_hygiene_considerations As String,  _
                    ByVal Chemical_stability As String,  _
                    ByVal Hazardous_polymerization As String,  _
                    ByVal Conditions_to_avoid As String,  _
                    ByVal Incompatibilities As String,  _
                    ByVal Hazardous_decomposition_products As String,  _
                    ByVal Likely_routes_of_exposure As String,  _
                    ByVal Eye_contact As String,  _
                    ByVal Skin_contact As String,  _
                    ByVal Ingestion As String,  _
                    ByVal Inhalation As String,  _
                    ByVal Reproductive_effects As String,  _
                    ByVal Teratogenicity As String,  _
                    ByVal Mutagenicity As String,  _
                    ByVal Embryotoxicity As String,  _
                    ByVal Sensitization_to_product As String,  _
                    ByVal Synergistic_products As String,  _
                    ByVal Carcinogenicity As String,  _
                    ByVal Chronic As String,  _
                    ByVal Persistence As String,  _
                    ByVal Bioaccumulative_potential As String,  _
                    ByVal Mobility As String,  _
                    ByVal Disposal As String,  _
                    ByVal RCRA_status As String,  _
                    ByVal TSCA As String) As Integer
            If (FA_eye_contact Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(0).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(0).Value = CType(FA_eye_contact,String)
            End If
            If (FA_skin_contact Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(1).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(1).Value = CType(FA_skin_contact,String)
            End If
            If (FA_ingestion Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(2).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(2).Value = CType(FA_ingestion,String)
            End If
            If (FA_inhalation Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(3).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(3).Value = CType(FA_inhalation,String)
            End If
            If (Note_to_HCP Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(4).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(4).Value = CType(Note_to_HCP,String)
            End If
            If (Suitable_extinguishing_media Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(5).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(5).Value = CType(Suitable_extinguishing_media,String)
            End If
            If (Unsuitable_extinguishing_media Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(6).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(6).Value = CType(Unsuitable_extinguishing_media,String)
            End If
            If (Precautions_for_firefighters Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(7).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(7).Value = CType(Precautions_for_firefighters,String)
            End If
            If (Specific_hazards Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(8).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(8).Value = CType(Specific_hazards,String)
            End If
            If (Hazardous_combustion_products Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(9).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(9).Value = CType(Hazardous_combustion_products,String)
            End If
            If (Personal_precautions Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(10).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(10).Value = CType(Personal_precautions,String)
            End If
            If (Small_spills Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(11).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(11).Value = CType(Small_spills,String)
            End If
            If (Large_spills Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(12).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(12).Value = CType(Large_spills,String)
            End If
            If (Advice_on_safe_handling Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(13).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(13).Value = CType(Advice_on_safe_handling,String)
            End If
            If (Storage_conditions Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(14).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(14).Value = CType(Storage_conditions,String)
            End If
            If (Suitable_materials_of_construction Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(15).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(15).Value = CType(Suitable_materials_of_construction,String)
            End If
            If (Unsuitable_materials_of_construction Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(16).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(16).Value = CType(Unsuitable_materials_of_construction,String)
            End If
            If (Eye_face_protection Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(17).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(17).Value = CType(Eye_face_protection,String)
            End If
            If (Skin_protection Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(18).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(18).Value = CType(Skin_protection,String)
            End If
            If (Respiratory_protection Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(19).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(19).Value = CType(Respiratory_protection,String)
            End If
            If (Engineering_controls Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(20).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(20).Value = CType(Engineering_controls,String)
            End If
            If (General_hygiene_considerations Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(21).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(21).Value = CType(General_hygiene_considerations,String)
            End If
            If (Chemical_stability Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(22).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(22).Value = CType(Chemical_stability,String)
            End If
            If (Hazardous_polymerization Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(23).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(23).Value = CType(Hazardous_polymerization,String)
            End If
            If (Conditions_to_avoid Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(24).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(24).Value = CType(Conditions_to_avoid,String)
            End If
            If (Incompatibilities Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(25).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(25).Value = CType(Incompatibilities,String)
            End If
            If (Hazardous_decomposition_products Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(26).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(26).Value = CType(Hazardous_decomposition_products,String)
            End If
            If (Likely_routes_of_exposure Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(27).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(27).Value = CType(Likely_routes_of_exposure,String)
            End If
            If (Eye_contact Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(28).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(28).Value = CType(Eye_contact,String)
            End If
            If (Skin_contact Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(29).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(29).Value = CType(Skin_contact,String)
            End If
            If (Ingestion Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(30).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(30).Value = CType(Ingestion,String)
            End If
            If (Inhalation Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(31).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(31).Value = CType(Inhalation,String)
            End If
            If (Reproductive_effects Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(32).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(32).Value = CType(Reproductive_effects,String)
            End If
            If (Teratogenicity Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(33).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(33).Value = CType(Teratogenicity,String)
            End If
            If (Mutagenicity Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(34).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(34).Value = CType(Mutagenicity,String)
            End If
            If (Embryotoxicity Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(35).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(35).Value = CType(Embryotoxicity,String)
            End If
            If (Sensitization_to_product Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(36).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(36).Value = CType(Sensitization_to_product,String)
            End If
            If (Synergistic_products Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(37).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(37).Value = CType(Synergistic_products,String)
            End If
            If (Carcinogenicity Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(38).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(38).Value = CType(Carcinogenicity,String)
            End If
            If (Chronic Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(39).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(39).Value = CType(Chronic,String)
            End If
            If (Persistence Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(40).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(40).Value = CType(Persistence,String)
            End If
            If (Bioaccumulative_potential Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(41).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(41).Value = CType(Bioaccumulative_potential,String)
            End If
            If (Mobility Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(42).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(42).Value = CType(Mobility,String)
            End If
            If (Disposal Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(43).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(43).Value = CType(Disposal,String)
            End If
            If (RCRA_status Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(44).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(44).Value = CType(RCRA_status,String)
            End If
            If (TSCA Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(45).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(45).Value = CType(TSCA,String)
            End If
            Dim previousConnectionState As Global.System.Data.ConnectionState = Me.Adapter.InsertCommand.Connection.State
            If ((Me.Adapter.InsertCommand.Connection.State And Global.System.Data.ConnectionState.Open)  _
                        <> Global.System.Data.ConnectionState.Open) Then
                Me.Adapter.InsertCommand.Connection.Open
            End If
            Try 
                Dim returnValue As Integer = Me.Adapter.InsertCommand.ExecuteNonQuery
                Return returnValue
            Finally
                If (previousConnectionState = Global.System.Data.ConnectionState.Closed) Then
                    Me.Adapter.InsertCommand.Connection.Close
                End If
            End Try
        End Function
    End Class
    
    '''<summary>
    '''TableAdapterManager is used to coordinate TableAdapters in the dataset to enable Hierarchical Update scenarios
    '''</summary>
    <Global.System.ComponentModel.DesignerCategoryAttribute("code"),  _
     Global.System.ComponentModel.ToolboxItem(true),  _
     Global.System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterManagerDesigner, Microsoft.VSD"& _ 
        "esigner, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a"),  _
     Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapterManager")>  _
    Partial Public Class TableAdapterManager
        Inherits Global.System.ComponentModel.Component
        
        Private _updateOrder As UpdateOrderOption
        
        Private _acute_ToxicityTableAdapter As Acute_ToxicityTableAdapter
        
        Private _aquatic_ToxicityTableAdapter As Aquatic_ToxicityTableAdapter
        
        Private _brandingTableAdapter As BrandingTableAdapter
        
        Private _componentsTableAdapter As ComponentsTableAdapter
        
        Private _defaultsTableAdapter As DefaultsTableAdapter
        
        Private _hazard_LexiconTableAdapter As Hazard_LexiconTableAdapter
        
        Private _precautionary_LexiconTableAdapter As Precautionary_LexiconTableAdapter
        
        Private _product_LogTableAdapter As Product_LogTableAdapter
        
        Private _safety_DanceTableAdapter As Safety_DanceTableAdapter
        
        Private _safety_LexiconTableAdapter As Safety_LexiconTableAdapter
        
        Private _backupDataSetBeforeUpdate As Boolean
        
        Private _connection As Global.System.Data.IDbConnection
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property UpdateOrder() As UpdateOrderOption
            Get
                Return Me._updateOrder
            End Get
            Set
                Me._updateOrder = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.EditorAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterManagerPropertyEditor, Microso"& _ 
            "ft.VSDesigner, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3"& _ 
            "a", "System.Drawing.Design.UITypeEditor")>  _
        Public Property Acute_ToxicityTableAdapter() As Acute_ToxicityTableAdapter
            Get
                Return Me._acute_ToxicityTableAdapter
            End Get
            Set
                Me._acute_ToxicityTableAdapter = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.EditorAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterManagerPropertyEditor, Microso"& _ 
            "ft.VSDesigner, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3"& _ 
            "a", "System.Drawing.Design.UITypeEditor")>  _
        Public Property Aquatic_ToxicityTableAdapter() As Aquatic_ToxicityTableAdapter
            Get
                Return Me._aquatic_ToxicityTableAdapter
            End Get
            Set
                Me._aquatic_ToxicityTableAdapter = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.EditorAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterManagerPropertyEditor, Microso"& _ 
            "ft.VSDesigner, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3"& _ 
            "a", "System.Drawing.Design.UITypeEditor")>  _
        Public Property BrandingTableAdapter() As BrandingTableAdapter
            Get
                Return Me._brandingTableAdapter
            End Get
            Set
                Me._brandingTableAdapter = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.EditorAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterManagerPropertyEditor, Microso"& _ 
            "ft.VSDesigner, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3"& _ 
            "a", "System.Drawing.Design.UITypeEditor")>  _
        Public Property ComponentsTableAdapter() As ComponentsTableAdapter
            Get
                Return Me._componentsTableAdapter
            End Get
            Set
                Me._componentsTableAdapter = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.EditorAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterManagerPropertyEditor, Microso"& _ 
            "ft.VSDesigner, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3"& _ 
            "a", "System.Drawing.Design.UITypeEditor")>  _
        Public Property DefaultsTableAdapter() As DefaultsTableAdapter
            Get
                Return Me._defaultsTableAdapter
            End Get
            Set
                Me._defaultsTableAdapter = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.EditorAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterManagerPropertyEditor, Microso"& _ 
            "ft.VSDesigner, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3"& _ 
            "a", "System.Drawing.Design.UITypeEditor")>  _
        Public Property Hazard_LexiconTableAdapter() As Hazard_LexiconTableAdapter
            Get
                Return Me._hazard_LexiconTableAdapter
            End Get
            Set
                Me._hazard_LexiconTableAdapter = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.EditorAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterManagerPropertyEditor, Microso"& _ 
            "ft.VSDesigner, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3"& _ 
            "a", "System.Drawing.Design.UITypeEditor")>  _
        Public Property Precautionary_LexiconTableAdapter() As Precautionary_LexiconTableAdapter
            Get
                Return Me._precautionary_LexiconTableAdapter
            End Get
            Set
                Me._precautionary_LexiconTableAdapter = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.EditorAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterManagerPropertyEditor, Microso"& _ 
            "ft.VSDesigner, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3"& _ 
            "a", "System.Drawing.Design.UITypeEditor")>  _
        Public Property Product_LogTableAdapter() As Product_LogTableAdapter
            Get
                Return Me._product_LogTableAdapter
            End Get
            Set
                Me._product_LogTableAdapter = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.EditorAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterManagerPropertyEditor, Microso"& _ 
            "ft.VSDesigner, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3"& _ 
            "a", "System.Drawing.Design.UITypeEditor")>  _
        Public Property Safety_DanceTableAdapter() As Safety_DanceTableAdapter
            Get
                Return Me._safety_DanceTableAdapter
            End Get
            Set
                Me._safety_DanceTableAdapter = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.EditorAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterManagerPropertyEditor, Microso"& _ 
            "ft.VSDesigner, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3"& _ 
            "a", "System.Drawing.Design.UITypeEditor")>  _
        Public Property Safety_LexiconTableAdapter() As Safety_LexiconTableAdapter
            Get
                Return Me._safety_LexiconTableAdapter
            End Get
            Set
                Me._safety_LexiconTableAdapter = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property BackupDataSetBeforeUpdate() As Boolean
            Get
                Return Me._backupDataSetBeforeUpdate
            End Get
            Set
                Me._backupDataSetBeforeUpdate = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Browsable(false)>  _
        Public Property Connection() As Global.System.Data.IDbConnection
            Get
                If (Not (Me._connection) Is Nothing) Then
                    Return Me._connection
                End If
                If ((Not (Me._acute_ToxicityTableAdapter) Is Nothing)  _
                            AndAlso (Not (Me._acute_ToxicityTableAdapter.Connection) Is Nothing)) Then
                    Return Me._acute_ToxicityTableAdapter.Connection
                End If
                If ((Not (Me._aquatic_ToxicityTableAdapter) Is Nothing)  _
                            AndAlso (Not (Me._aquatic_ToxicityTableAdapter.Connection) Is Nothing)) Then
                    Return Me._aquatic_ToxicityTableAdapter.Connection
                End If
                If ((Not (Me._brandingTableAdapter) Is Nothing)  _
                            AndAlso (Not (Me._brandingTableAdapter.Connection) Is Nothing)) Then
                    Return Me._brandingTableAdapter.Connection
                End If
                If ((Not (Me._componentsTableAdapter) Is Nothing)  _
                            AndAlso (Not (Me._componentsTableAdapter.Connection) Is Nothing)) Then
                    Return Me._componentsTableAdapter.Connection
                End If
                If ((Not (Me._defaultsTableAdapter) Is Nothing)  _
                            AndAlso (Not (Me._defaultsTableAdapter.Connection) Is Nothing)) Then
                    Return Me._defaultsTableAdapter.Connection
                End If
                If ((Not (Me._hazard_LexiconTableAdapter) Is Nothing)  _
                            AndAlso (Not (Me._hazard_LexiconTableAdapter.Connection) Is Nothing)) Then
                    Return Me._hazard_LexiconTableAdapter.Connection
                End If
                If ((Not (Me._precautionary_LexiconTableAdapter) Is Nothing)  _
                            AndAlso (Not (Me._precautionary_LexiconTableAdapter.Connection) Is Nothing)) Then
                    Return Me._precautionary_LexiconTableAdapter.Connection
                End If
                If ((Not (Me._product_LogTableAdapter) Is Nothing)  _
                            AndAlso (Not (Me._product_LogTableAdapter.Connection) Is Nothing)) Then
                    Return Me._product_LogTableAdapter.Connection
                End If
                If ((Not (Me._safety_DanceTableAdapter) Is Nothing)  _
                            AndAlso (Not (Me._safety_DanceTableAdapter.Connection) Is Nothing)) Then
                    Return Me._safety_DanceTableAdapter.Connection
                End If
                If ((Not (Me._safety_LexiconTableAdapter) Is Nothing)  _
                            AndAlso (Not (Me._safety_LexiconTableAdapter.Connection) Is Nothing)) Then
                    Return Me._safety_LexiconTableAdapter.Connection
                End If
                Return Nothing
            End Get
            Set
                Me._connection = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Browsable(false)>  _
        Public ReadOnly Property TableAdapterInstanceCount() As Integer
            Get
                Dim count As Integer = 0
                If (Not (Me._acute_ToxicityTableAdapter) Is Nothing) Then
                    count = (count + 1)
                End If
                If (Not (Me._aquatic_ToxicityTableAdapter) Is Nothing) Then
                    count = (count + 1)
                End If
                If (Not (Me._brandingTableAdapter) Is Nothing) Then
                    count = (count + 1)
                End If
                If (Not (Me._componentsTableAdapter) Is Nothing) Then
                    count = (count + 1)
                End If
                If (Not (Me._defaultsTableAdapter) Is Nothing) Then
                    count = (count + 1)
                End If
                If (Not (Me._hazard_LexiconTableAdapter) Is Nothing) Then
                    count = (count + 1)
                End If
                If (Not (Me._precautionary_LexiconTableAdapter) Is Nothing) Then
                    count = (count + 1)
                End If
                If (Not (Me._product_LogTableAdapter) Is Nothing) Then
                    count = (count + 1)
                End If
                If (Not (Me._safety_DanceTableAdapter) Is Nothing) Then
                    count = (count + 1)
                End If
                If (Not (Me._safety_LexiconTableAdapter) Is Nothing) Then
                    count = (count + 1)
                End If
                Return count
            End Get
        End Property
        
        '''<summary>
        '''Update rows in top-down order.
        '''</summary>
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Private Function UpdateUpdatedRows(ByVal dataSet As Dossier, ByVal allChangedRows As Global.System.Collections.Generic.List(Of Global.System.Data.DataRow), ByVal allAddedRows As Global.System.Collections.Generic.List(Of Global.System.Data.DataRow)) As Integer
            Dim result As Integer = 0
            If (Not (Me._acute_ToxicityTableAdapter) Is Nothing) Then
                Dim updatedRows() As Global.System.Data.DataRow = dataSet.Acute_Toxicity.Select(Nothing, Nothing, Global.System.Data.DataViewRowState.ModifiedCurrent)
                updatedRows = Me.GetRealUpdatedRows(updatedRows, allAddedRows)
                If ((Not (updatedRows) Is Nothing)  _
                            AndAlso (0 < updatedRows.Length)) Then
                    result = (result + Me._acute_ToxicityTableAdapter.Update(updatedRows))
                    allChangedRows.AddRange(updatedRows)
                End If
            End If
            If (Not (Me._aquatic_ToxicityTableAdapter) Is Nothing) Then
                Dim updatedRows() As Global.System.Data.DataRow = dataSet.Aquatic_Toxicity.Select(Nothing, Nothing, Global.System.Data.DataViewRowState.ModifiedCurrent)
                updatedRows = Me.GetRealUpdatedRows(updatedRows, allAddedRows)
                If ((Not (updatedRows) Is Nothing)  _
                            AndAlso (0 < updatedRows.Length)) Then
                    result = (result + Me._aquatic_ToxicityTableAdapter.Update(updatedRows))
                    allChangedRows.AddRange(updatedRows)
                End If
            End If
            If (Not (Me._brandingTableAdapter) Is Nothing) Then
                Dim updatedRows() As Global.System.Data.DataRow = dataSet.Branding.Select(Nothing, Nothing, Global.System.Data.DataViewRowState.ModifiedCurrent)
                updatedRows = Me.GetRealUpdatedRows(updatedRows, allAddedRows)
                If ((Not (updatedRows) Is Nothing)  _
                            AndAlso (0 < updatedRows.Length)) Then
                    result = (result + Me._brandingTableAdapter.Update(updatedRows))
                    allChangedRows.AddRange(updatedRows)
                End If
            End If
            If (Not (Me._componentsTableAdapter) Is Nothing) Then
                Dim updatedRows() As Global.System.Data.DataRow = dataSet.Components.Select(Nothing, Nothing, Global.System.Data.DataViewRowState.ModifiedCurrent)
                updatedRows = Me.GetRealUpdatedRows(updatedRows, allAddedRows)
                If ((Not (updatedRows) Is Nothing)  _
                            AndAlso (0 < updatedRows.Length)) Then
                    result = (result + Me._componentsTableAdapter.Update(updatedRows))
                    allChangedRows.AddRange(updatedRows)
                End If
            End If
            If (Not (Me._defaultsTableAdapter) Is Nothing) Then
                Dim updatedRows() As Global.System.Data.DataRow = dataSet.Defaults.Select(Nothing, Nothing, Global.System.Data.DataViewRowState.ModifiedCurrent)
                updatedRows = Me.GetRealUpdatedRows(updatedRows, allAddedRows)
                If ((Not (updatedRows) Is Nothing)  _
                            AndAlso (0 < updatedRows.Length)) Then
                    result = (result + Me._defaultsTableAdapter.Update(updatedRows))
                    allChangedRows.AddRange(updatedRows)
                End If
            End If
            If (Not (Me._hazard_LexiconTableAdapter) Is Nothing) Then
                Dim updatedRows() As Global.System.Data.DataRow = dataSet.Hazard_Lexicon.Select(Nothing, Nothing, Global.System.Data.DataViewRowState.ModifiedCurrent)
                updatedRows = Me.GetRealUpdatedRows(updatedRows, allAddedRows)
                If ((Not (updatedRows) Is Nothing)  _
                            AndAlso (0 < updatedRows.Length)) Then
                    result = (result + Me._hazard_LexiconTableAdapter.Update(updatedRows))
                    allChangedRows.AddRange(updatedRows)
                End If
            End If
            If (Not (Me._precautionary_LexiconTableAdapter) Is Nothing) Then
                Dim updatedRows() As Global.System.Data.DataRow = dataSet.Precautionary_Lexicon.Select(Nothing, Nothing, Global.System.Data.DataViewRowState.ModifiedCurrent)
                updatedRows = Me.GetRealUpdatedRows(updatedRows, allAddedRows)
                If ((Not (updatedRows) Is Nothing)  _
                            AndAlso (0 < updatedRows.Length)) Then
                    result = (result + Me._precautionary_LexiconTableAdapter.Update(updatedRows))
                    allChangedRows.AddRange(updatedRows)
                End If
            End If
            If (Not (Me._product_LogTableAdapter) Is Nothing) Then
                Dim updatedRows() As Global.System.Data.DataRow = dataSet.Product_Log.Select(Nothing, Nothing, Global.System.Data.DataViewRowState.ModifiedCurrent)
                updatedRows = Me.GetRealUpdatedRows(updatedRows, allAddedRows)
                If ((Not (updatedRows) Is Nothing)  _
                            AndAlso (0 < updatedRows.Length)) Then
                    result = (result + Me._product_LogTableAdapter.Update(updatedRows))
                    allChangedRows.AddRange(updatedRows)
                End If
            End If
            If (Not (Me._safety_DanceTableAdapter) Is Nothing) Then
                Dim updatedRows() As Global.System.Data.DataRow = dataSet.Safety_Dance.Select(Nothing, Nothing, Global.System.Data.DataViewRowState.ModifiedCurrent)
                updatedRows = Me.GetRealUpdatedRows(updatedRows, allAddedRows)
                If ((Not (updatedRows) Is Nothing)  _
                            AndAlso (0 < updatedRows.Length)) Then
                    result = (result + Me._safety_DanceTableAdapter.Update(updatedRows))
                    allChangedRows.AddRange(updatedRows)
                End If
            End If
            If (Not (Me._safety_LexiconTableAdapter) Is Nothing) Then
                Dim updatedRows() As Global.System.Data.DataRow = dataSet.Safety_Lexicon.Select(Nothing, Nothing, Global.System.Data.DataViewRowState.ModifiedCurrent)
                updatedRows = Me.GetRealUpdatedRows(updatedRows, allAddedRows)
                If ((Not (updatedRows) Is Nothing)  _
                            AndAlso (0 < updatedRows.Length)) Then
                    result = (result + Me._safety_LexiconTableAdapter.Update(updatedRows))
                    allChangedRows.AddRange(updatedRows)
                End If
            End If
            Return result
        End Function
        
        '''<summary>
        '''Insert rows in top-down order.
        '''</summary>
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Private Function UpdateInsertedRows(ByVal dataSet As Dossier, ByVal allAddedRows As Global.System.Collections.Generic.List(Of Global.System.Data.DataRow)) As Integer
            Dim result As Integer = 0
            If (Not (Me._acute_ToxicityTableAdapter) Is Nothing) Then
                Dim addedRows() As Global.System.Data.DataRow = dataSet.Acute_Toxicity.Select(Nothing, Nothing, Global.System.Data.DataViewRowState.Added)
                If ((Not (addedRows) Is Nothing)  _
                            AndAlso (0 < addedRows.Length)) Then
                    result = (result + Me._acute_ToxicityTableAdapter.Update(addedRows))
                    allAddedRows.AddRange(addedRows)
                End If
            End If
            If (Not (Me._aquatic_ToxicityTableAdapter) Is Nothing) Then
                Dim addedRows() As Global.System.Data.DataRow = dataSet.Aquatic_Toxicity.Select(Nothing, Nothing, Global.System.Data.DataViewRowState.Added)
                If ((Not (addedRows) Is Nothing)  _
                            AndAlso (0 < addedRows.Length)) Then
                    result = (result + Me._aquatic_ToxicityTableAdapter.Update(addedRows))
                    allAddedRows.AddRange(addedRows)
                End If
            End If
            If (Not (Me._brandingTableAdapter) Is Nothing) Then
                Dim addedRows() As Global.System.Data.DataRow = dataSet.Branding.Select(Nothing, Nothing, Global.System.Data.DataViewRowState.Added)
                If ((Not (addedRows) Is Nothing)  _
                            AndAlso (0 < addedRows.Length)) Then
                    result = (result + Me._brandingTableAdapter.Update(addedRows))
                    allAddedRows.AddRange(addedRows)
                End If
            End If
            If (Not (Me._componentsTableAdapter) Is Nothing) Then
                Dim addedRows() As Global.System.Data.DataRow = dataSet.Components.Select(Nothing, Nothing, Global.System.Data.DataViewRowState.Added)
                If ((Not (addedRows) Is Nothing)  _
                            AndAlso (0 < addedRows.Length)) Then
                    result = (result + Me._componentsTableAdapter.Update(addedRows))
                    allAddedRows.AddRange(addedRows)
                End If
            End If
            If (Not (Me._defaultsTableAdapter) Is Nothing) Then
                Dim addedRows() As Global.System.Data.DataRow = dataSet.Defaults.Select(Nothing, Nothing, Global.System.Data.DataViewRowState.Added)
                If ((Not (addedRows) Is Nothing)  _
                            AndAlso (0 < addedRows.Length)) Then
                    result = (result + Me._defaultsTableAdapter.Update(addedRows))
                    allAddedRows.AddRange(addedRows)
                End If
            End If
            If (Not (Me._hazard_LexiconTableAdapter) Is Nothing) Then
                Dim addedRows() As Global.System.Data.DataRow = dataSet.Hazard_Lexicon.Select(Nothing, Nothing, Global.System.Data.DataViewRowState.Added)
                If ((Not (addedRows) Is Nothing)  _
                            AndAlso (0 < addedRows.Length)) Then
                    result = (result + Me._hazard_LexiconTableAdapter.Update(addedRows))
                    allAddedRows.AddRange(addedRows)
                End If
            End If
            If (Not (Me._precautionary_LexiconTableAdapter) Is Nothing) Then
                Dim addedRows() As Global.System.Data.DataRow = dataSet.Precautionary_Lexicon.Select(Nothing, Nothing, Global.System.Data.DataViewRowState.Added)
                If ((Not (addedRows) Is Nothing)  _
                            AndAlso (0 < addedRows.Length)) Then
                    result = (result + Me._precautionary_LexiconTableAdapter.Update(addedRows))
                    allAddedRows.AddRange(addedRows)
                End If
            End If
            If (Not (Me._product_LogTableAdapter) Is Nothing) Then
                Dim addedRows() As Global.System.Data.DataRow = dataSet.Product_Log.Select(Nothing, Nothing, Global.System.Data.DataViewRowState.Added)
                If ((Not (addedRows) Is Nothing)  _
                            AndAlso (0 < addedRows.Length)) Then
                    result = (result + Me._product_LogTableAdapter.Update(addedRows))
                    allAddedRows.AddRange(addedRows)
                End If
            End If
            If (Not (Me._safety_DanceTableAdapter) Is Nothing) Then
                Dim addedRows() As Global.System.Data.DataRow = dataSet.Safety_Dance.Select(Nothing, Nothing, Global.System.Data.DataViewRowState.Added)
                If ((Not (addedRows) Is Nothing)  _
                            AndAlso (0 < addedRows.Length)) Then
                    result = (result + Me._safety_DanceTableAdapter.Update(addedRows))
                    allAddedRows.AddRange(addedRows)
                End If
            End If
            If (Not (Me._safety_LexiconTableAdapter) Is Nothing) Then
                Dim addedRows() As Global.System.Data.DataRow = dataSet.Safety_Lexicon.Select(Nothing, Nothing, Global.System.Data.DataViewRowState.Added)
                If ((Not (addedRows) Is Nothing)  _
                            AndAlso (0 < addedRows.Length)) Then
                    result = (result + Me._safety_LexiconTableAdapter.Update(addedRows))
                    allAddedRows.AddRange(addedRows)
                End If
            End If
            Return result
        End Function
        
        '''<summary>
        '''Delete rows in bottom-up order.
        '''</summary>
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Private Function UpdateDeletedRows(ByVal dataSet As Dossier, ByVal allChangedRows As Global.System.Collections.Generic.List(Of Global.System.Data.DataRow)) As Integer
            Dim result As Integer = 0
            If (Not (Me._safety_LexiconTableAdapter) Is Nothing) Then
                Dim deletedRows() As Global.System.Data.DataRow = dataSet.Safety_Lexicon.Select(Nothing, Nothing, Global.System.Data.DataViewRowState.Deleted)
                If ((Not (deletedRows) Is Nothing)  _
                            AndAlso (0 < deletedRows.Length)) Then
                    result = (result + Me._safety_LexiconTableAdapter.Update(deletedRows))
                    allChangedRows.AddRange(deletedRows)
                End If
            End If
            If (Not (Me._safety_DanceTableAdapter) Is Nothing) Then
                Dim deletedRows() As Global.System.Data.DataRow = dataSet.Safety_Dance.Select(Nothing, Nothing, Global.System.Data.DataViewRowState.Deleted)
                If ((Not (deletedRows) Is Nothing)  _
                            AndAlso (0 < deletedRows.Length)) Then
                    result = (result + Me._safety_DanceTableAdapter.Update(deletedRows))
                    allChangedRows.AddRange(deletedRows)
                End If
            End If
            If (Not (Me._product_LogTableAdapter) Is Nothing) Then
                Dim deletedRows() As Global.System.Data.DataRow = dataSet.Product_Log.Select(Nothing, Nothing, Global.System.Data.DataViewRowState.Deleted)
                If ((Not (deletedRows) Is Nothing)  _
                            AndAlso (0 < deletedRows.Length)) Then
                    result = (result + Me._product_LogTableAdapter.Update(deletedRows))
                    allChangedRows.AddRange(deletedRows)
                End If
            End If
            If (Not (Me._precautionary_LexiconTableAdapter) Is Nothing) Then
                Dim deletedRows() As Global.System.Data.DataRow = dataSet.Precautionary_Lexicon.Select(Nothing, Nothing, Global.System.Data.DataViewRowState.Deleted)
                If ((Not (deletedRows) Is Nothing)  _
                            AndAlso (0 < deletedRows.Length)) Then
                    result = (result + Me._precautionary_LexiconTableAdapter.Update(deletedRows))
                    allChangedRows.AddRange(deletedRows)
                End If
            End If
            If (Not (Me._hazard_LexiconTableAdapter) Is Nothing) Then
                Dim deletedRows() As Global.System.Data.DataRow = dataSet.Hazard_Lexicon.Select(Nothing, Nothing, Global.System.Data.DataViewRowState.Deleted)
                If ((Not (deletedRows) Is Nothing)  _
                            AndAlso (0 < deletedRows.Length)) Then
                    result = (result + Me._hazard_LexiconTableAdapter.Update(deletedRows))
                    allChangedRows.AddRange(deletedRows)
                End If
            End If
            If (Not (Me._defaultsTableAdapter) Is Nothing) Then
                Dim deletedRows() As Global.System.Data.DataRow = dataSet.Defaults.Select(Nothing, Nothing, Global.System.Data.DataViewRowState.Deleted)
                If ((Not (deletedRows) Is Nothing)  _
                            AndAlso (0 < deletedRows.Length)) Then
                    result = (result + Me._defaultsTableAdapter.Update(deletedRows))
                    allChangedRows.AddRange(deletedRows)
                End If
            End If
            If (Not (Me._componentsTableAdapter) Is Nothing) Then
                Dim deletedRows() As Global.System.Data.DataRow = dataSet.Components.Select(Nothing, Nothing, Global.System.Data.DataViewRowState.Deleted)
                If ((Not (deletedRows) Is Nothing)  _
                            AndAlso (0 < deletedRows.Length)) Then
                    result = (result + Me._componentsTableAdapter.Update(deletedRows))
                    allChangedRows.AddRange(deletedRows)
                End If
            End If
            If (Not (Me._brandingTableAdapter) Is Nothing) Then
                Dim deletedRows() As Global.System.Data.DataRow = dataSet.Branding.Select(Nothing, Nothing, Global.System.Data.DataViewRowState.Deleted)
                If ((Not (deletedRows) Is Nothing)  _
                            AndAlso (0 < deletedRows.Length)) Then
                    result = (result + Me._brandingTableAdapter.Update(deletedRows))
                    allChangedRows.AddRange(deletedRows)
                End If
            End If
            If (Not (Me._aquatic_ToxicityTableAdapter) Is Nothing) Then
                Dim deletedRows() As Global.System.Data.DataRow = dataSet.Aquatic_Toxicity.Select(Nothing, Nothing, Global.System.Data.DataViewRowState.Deleted)
                If ((Not (deletedRows) Is Nothing)  _
                            AndAlso (0 < deletedRows.Length)) Then
                    result = (result + Me._aquatic_ToxicityTableAdapter.Update(deletedRows))
                    allChangedRows.AddRange(deletedRows)
                End If
            End If
            If (Not (Me._acute_ToxicityTableAdapter) Is Nothing) Then
                Dim deletedRows() As Global.System.Data.DataRow = dataSet.Acute_Toxicity.Select(Nothing, Nothing, Global.System.Data.DataViewRowState.Deleted)
                If ((Not (deletedRows) Is Nothing)  _
                            AndAlso (0 < deletedRows.Length)) Then
                    result = (result + Me._acute_ToxicityTableAdapter.Update(deletedRows))
                    allChangedRows.AddRange(deletedRows)
                End If
            End If
            Return result
        End Function
        
        '''<summary>
        '''Remove inserted rows that become updated rows after calling TableAdapter.Update(inserted rows) first
        '''</summary>
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Private Function GetRealUpdatedRows(ByVal updatedRows() As Global.System.Data.DataRow, ByVal allAddedRows As Global.System.Collections.Generic.List(Of Global.System.Data.DataRow)) As Global.System.Data.DataRow()
            If ((updatedRows Is Nothing)  _
                        OrElse (updatedRows.Length < 1)) Then
                Return updatedRows
            End If
            If ((allAddedRows Is Nothing)  _
                        OrElse (allAddedRows.Count < 1)) Then
                Return updatedRows
            End If
            Dim realUpdatedRows As Global.System.Collections.Generic.List(Of Global.System.Data.DataRow) = New Global.System.Collections.Generic.List(Of Global.System.Data.DataRow)()
            Dim i As Integer = 0
            Do While (i < updatedRows.Length)
                Dim row As Global.System.Data.DataRow = updatedRows(i)
                If (allAddedRows.Contains(row) = false) Then
                    realUpdatedRows.Add(row)
                End If
                i = (i + 1)
            Loop
            Return realUpdatedRows.ToArray
        End Function
        
        '''<summary>
        '''Update all changes to the dataset.
        '''</summary>
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Overridable Function UpdateAll(ByVal dataSet As Dossier) As Integer
            If (dataSet Is Nothing) Then
                Throw New Global.System.ArgumentNullException("dataSet")
            End If
            If (dataSet.HasChanges = false) Then
                Return 0
            End If
            If ((Not (Me._acute_ToxicityTableAdapter) Is Nothing)  _
                        AndAlso (Me.MatchTableAdapterConnection(Me._acute_ToxicityTableAdapter.Connection) = false)) Then
                Throw New Global.System.ArgumentException("All TableAdapters managed by a TableAdapterManager must use the same connection s"& _ 
                        "tring.")
            End If
            If ((Not (Me._aquatic_ToxicityTableAdapter) Is Nothing)  _
                        AndAlso (Me.MatchTableAdapterConnection(Me._aquatic_ToxicityTableAdapter.Connection) = false)) Then
                Throw New Global.System.ArgumentException("All TableAdapters managed by a TableAdapterManager must use the same connection s"& _ 
                        "tring.")
            End If
            If ((Not (Me._brandingTableAdapter) Is Nothing)  _
                        AndAlso (Me.MatchTableAdapterConnection(Me._brandingTableAdapter.Connection) = false)) Then
                Throw New Global.System.ArgumentException("All TableAdapters managed by a TableAdapterManager must use the same connection s"& _ 
                        "tring.")
            End If
            If ((Not (Me._componentsTableAdapter) Is Nothing)  _
                        AndAlso (Me.MatchTableAdapterConnection(Me._componentsTableAdapter.Connection) = false)) Then
                Throw New Global.System.ArgumentException("All TableAdapters managed by a TableAdapterManager must use the same connection s"& _ 
                        "tring.")
            End If
            If ((Not (Me._defaultsTableAdapter) Is Nothing)  _
                        AndAlso (Me.MatchTableAdapterConnection(Me._defaultsTableAdapter.Connection) = false)) Then
                Throw New Global.System.ArgumentException("All TableAdapters managed by a TableAdapterManager must use the same connection s"& _ 
                        "tring.")
            End If
            If ((Not (Me._hazard_LexiconTableAdapter) Is Nothing)  _
                        AndAlso (Me.MatchTableAdapterConnection(Me._hazard_LexiconTableAdapter.Connection) = false)) Then
                Throw New Global.System.ArgumentException("All TableAdapters managed by a TableAdapterManager must use the same connection s"& _ 
                        "tring.")
            End If
            If ((Not (Me._precautionary_LexiconTableAdapter) Is Nothing)  _
                        AndAlso (Me.MatchTableAdapterConnection(Me._precautionary_LexiconTableAdapter.Connection) = false)) Then
                Throw New Global.System.ArgumentException("All TableAdapters managed by a TableAdapterManager must use the same connection s"& _ 
                        "tring.")
            End If
            If ((Not (Me._product_LogTableAdapter) Is Nothing)  _
                        AndAlso (Me.MatchTableAdapterConnection(Me._product_LogTableAdapter.Connection) = false)) Then
                Throw New Global.System.ArgumentException("All TableAdapters managed by a TableAdapterManager must use the same connection s"& _ 
                        "tring.")
            End If
            If ((Not (Me._safety_DanceTableAdapter) Is Nothing)  _
                        AndAlso (Me.MatchTableAdapterConnection(Me._safety_DanceTableAdapter.Connection) = false)) Then
                Throw New Global.System.ArgumentException("All TableAdapters managed by a TableAdapterManager must use the same connection s"& _ 
                        "tring.")
            End If
            If ((Not (Me._safety_LexiconTableAdapter) Is Nothing)  _
                        AndAlso (Me.MatchTableAdapterConnection(Me._safety_LexiconTableAdapter.Connection) = false)) Then
                Throw New Global.System.ArgumentException("All TableAdapters managed by a TableAdapterManager must use the same connection s"& _ 
                        "tring.")
            End If
            Dim workConnection As Global.System.Data.IDbConnection = Me.Connection
            If (workConnection Is Nothing) Then
                Throw New Global.System.ApplicationException("TableAdapterManager contains no connection information. Set each TableAdapterMana"& _ 
                        "ger TableAdapter property to a valid TableAdapter instance.")
            End If
            Dim workConnOpened As Boolean = false
            If ((workConnection.State And Global.System.Data.ConnectionState.Broken)  _
                        = Global.System.Data.ConnectionState.Broken) Then
                workConnection.Close
            End If
            If (workConnection.State = Global.System.Data.ConnectionState.Closed) Then
                workConnection.Open
                workConnOpened = true
            End If
            Dim workTransaction As Global.System.Data.IDbTransaction = workConnection.BeginTransaction
            If (workTransaction Is Nothing) Then
                Throw New Global.System.ApplicationException("The transaction cannot begin. The current data connection does not support transa"& _ 
                        "ctions or the current state is not allowing the transaction to begin.")
            End If
            Dim allChangedRows As Global.System.Collections.Generic.List(Of Global.System.Data.DataRow) = New Global.System.Collections.Generic.List(Of Global.System.Data.DataRow)()
            Dim allAddedRows As Global.System.Collections.Generic.List(Of Global.System.Data.DataRow) = New Global.System.Collections.Generic.List(Of Global.System.Data.DataRow)()
            Dim adaptersWithAcceptChangesDuringUpdate As Global.System.Collections.Generic.List(Of Global.System.Data.Common.DataAdapter) = New Global.System.Collections.Generic.List(Of Global.System.Data.Common.DataAdapter)()
            Dim revertConnections As Global.System.Collections.Generic.Dictionary(Of Object, Global.System.Data.IDbConnection) = New Global.System.Collections.Generic.Dictionary(Of Object, Global.System.Data.IDbConnection)()
            Dim result As Integer = 0
            Dim backupDataSet As Global.System.Data.DataSet = Nothing
            If Me.BackupDataSetBeforeUpdate Then
                backupDataSet = New Global.System.Data.DataSet()
                backupDataSet.Merge(dataSet)
            End If
            Try 
                '---- Prepare for update -----------
                '
                If (Not (Me._acute_ToxicityTableAdapter) Is Nothing) Then
                    revertConnections.Add(Me._acute_ToxicityTableAdapter, Me._acute_ToxicityTableAdapter.Connection)
                    Me._acute_ToxicityTableAdapter.Connection = CType(workConnection,Global.System.Data.OleDb.OleDbConnection)
                    Me._acute_ToxicityTableAdapter.Transaction = CType(workTransaction,Global.System.Data.OleDb.OleDbTransaction)
                    If Me._acute_ToxicityTableAdapter.Adapter.AcceptChangesDuringUpdate Then
                        Me._acute_ToxicityTableAdapter.Adapter.AcceptChangesDuringUpdate = false
                        adaptersWithAcceptChangesDuringUpdate.Add(Me._acute_ToxicityTableAdapter.Adapter)
                    End If
                End If
                If (Not (Me._aquatic_ToxicityTableAdapter) Is Nothing) Then
                    revertConnections.Add(Me._aquatic_ToxicityTableAdapter, Me._aquatic_ToxicityTableAdapter.Connection)
                    Me._aquatic_ToxicityTableAdapter.Connection = CType(workConnection,Global.System.Data.OleDb.OleDbConnection)
                    Me._aquatic_ToxicityTableAdapter.Transaction = CType(workTransaction,Global.System.Data.OleDb.OleDbTransaction)
                    If Me._aquatic_ToxicityTableAdapter.Adapter.AcceptChangesDuringUpdate Then
                        Me._aquatic_ToxicityTableAdapter.Adapter.AcceptChangesDuringUpdate = false
                        adaptersWithAcceptChangesDuringUpdate.Add(Me._aquatic_ToxicityTableAdapter.Adapter)
                    End If
                End If
                If (Not (Me._brandingTableAdapter) Is Nothing) Then
                    revertConnections.Add(Me._brandingTableAdapter, Me._brandingTableAdapter.Connection)
                    Me._brandingTableAdapter.Connection = CType(workConnection,Global.System.Data.OleDb.OleDbConnection)
                    Me._brandingTableAdapter.Transaction = CType(workTransaction,Global.System.Data.OleDb.OleDbTransaction)
                    If Me._brandingTableAdapter.Adapter.AcceptChangesDuringUpdate Then
                        Me._brandingTableAdapter.Adapter.AcceptChangesDuringUpdate = false
                        adaptersWithAcceptChangesDuringUpdate.Add(Me._brandingTableAdapter.Adapter)
                    End If
                End If
                If (Not (Me._componentsTableAdapter) Is Nothing) Then
                    revertConnections.Add(Me._componentsTableAdapter, Me._componentsTableAdapter.Connection)
                    Me._componentsTableAdapter.Connection = CType(workConnection,Global.System.Data.OleDb.OleDbConnection)
                    Me._componentsTableAdapter.Transaction = CType(workTransaction,Global.System.Data.OleDb.OleDbTransaction)
                    If Me._componentsTableAdapter.Adapter.AcceptChangesDuringUpdate Then
                        Me._componentsTableAdapter.Adapter.AcceptChangesDuringUpdate = false
                        adaptersWithAcceptChangesDuringUpdate.Add(Me._componentsTableAdapter.Adapter)
                    End If
                End If
                If (Not (Me._defaultsTableAdapter) Is Nothing) Then
                    revertConnections.Add(Me._defaultsTableAdapter, Me._defaultsTableAdapter.Connection)
                    Me._defaultsTableAdapter.Connection = CType(workConnection,Global.System.Data.OleDb.OleDbConnection)
                    Me._defaultsTableAdapter.Transaction = CType(workTransaction,Global.System.Data.OleDb.OleDbTransaction)
                    If Me._defaultsTableAdapter.Adapter.AcceptChangesDuringUpdate Then
                        Me._defaultsTableAdapter.Adapter.AcceptChangesDuringUpdate = false
                        adaptersWithAcceptChangesDuringUpdate.Add(Me._defaultsTableAdapter.Adapter)
                    End If
                End If
                If (Not (Me._hazard_LexiconTableAdapter) Is Nothing) Then
                    revertConnections.Add(Me._hazard_LexiconTableAdapter, Me._hazard_LexiconTableAdapter.Connection)
                    Me._hazard_LexiconTableAdapter.Connection = CType(workConnection,Global.System.Data.OleDb.OleDbConnection)
                    Me._hazard_LexiconTableAdapter.Transaction = CType(workTransaction,Global.System.Data.OleDb.OleDbTransaction)
                    If Me._hazard_LexiconTableAdapter.Adapter.AcceptChangesDuringUpdate Then
                        Me._hazard_LexiconTableAdapter.Adapter.AcceptChangesDuringUpdate = false
                        adaptersWithAcceptChangesDuringUpdate.Add(Me._hazard_LexiconTableAdapter.Adapter)
                    End If
                End If
                If (Not (Me._precautionary_LexiconTableAdapter) Is Nothing) Then
                    revertConnections.Add(Me._precautionary_LexiconTableAdapter, Me._precautionary_LexiconTableAdapter.Connection)
                    Me._precautionary_LexiconTableAdapter.Connection = CType(workConnection,Global.System.Data.OleDb.OleDbConnection)
                    Me._precautionary_LexiconTableAdapter.Transaction = CType(workTransaction,Global.System.Data.OleDb.OleDbTransaction)
                    If Me._precautionary_LexiconTableAdapter.Adapter.AcceptChangesDuringUpdate Then
                        Me._precautionary_LexiconTableAdapter.Adapter.AcceptChangesDuringUpdate = false
                        adaptersWithAcceptChangesDuringUpdate.Add(Me._precautionary_LexiconTableAdapter.Adapter)
                    End If
                End If
                If (Not (Me._product_LogTableAdapter) Is Nothing) Then
                    revertConnections.Add(Me._product_LogTableAdapter, Me._product_LogTableAdapter.Connection)
                    Me._product_LogTableAdapter.Connection = CType(workConnection,Global.System.Data.OleDb.OleDbConnection)
                    Me._product_LogTableAdapter.Transaction = CType(workTransaction,Global.System.Data.OleDb.OleDbTransaction)
                    If Me._product_LogTableAdapter.Adapter.AcceptChangesDuringUpdate Then
                        Me._product_LogTableAdapter.Adapter.AcceptChangesDuringUpdate = false
                        adaptersWithAcceptChangesDuringUpdate.Add(Me._product_LogTableAdapter.Adapter)
                    End If
                End If
                If (Not (Me._safety_DanceTableAdapter) Is Nothing) Then
                    revertConnections.Add(Me._safety_DanceTableAdapter, Me._safety_DanceTableAdapter.Connection)
                    Me._safety_DanceTableAdapter.Connection = CType(workConnection,Global.System.Data.OleDb.OleDbConnection)
                    Me._safety_DanceTableAdapter.Transaction = CType(workTransaction,Global.System.Data.OleDb.OleDbTransaction)
                    If Me._safety_DanceTableAdapter.Adapter.AcceptChangesDuringUpdate Then
                        Me._safety_DanceTableAdapter.Adapter.AcceptChangesDuringUpdate = false
                        adaptersWithAcceptChangesDuringUpdate.Add(Me._safety_DanceTableAdapter.Adapter)
                    End If
                End If
                If (Not (Me._safety_LexiconTableAdapter) Is Nothing) Then
                    revertConnections.Add(Me._safety_LexiconTableAdapter, Me._safety_LexiconTableAdapter.Connection)
                    Me._safety_LexiconTableAdapter.Connection = CType(workConnection,Global.System.Data.OleDb.OleDbConnection)
                    Me._safety_LexiconTableAdapter.Transaction = CType(workTransaction,Global.System.Data.OleDb.OleDbTransaction)
                    If Me._safety_LexiconTableAdapter.Adapter.AcceptChangesDuringUpdate Then
                        Me._safety_LexiconTableAdapter.Adapter.AcceptChangesDuringUpdate = false
                        adaptersWithAcceptChangesDuringUpdate.Add(Me._safety_LexiconTableAdapter.Adapter)
                    End If
                End If
                '
                '---- Perform updates -----------
                '
                If (Me.UpdateOrder = UpdateOrderOption.UpdateInsertDelete) Then
                    result = (result + Me.UpdateUpdatedRows(dataSet, allChangedRows, allAddedRows))
                    result = (result + Me.UpdateInsertedRows(dataSet, allAddedRows))
                Else
                    result = (result + Me.UpdateInsertedRows(dataSet, allAddedRows))
                    result = (result + Me.UpdateUpdatedRows(dataSet, allChangedRows, allAddedRows))
                End If
                result = (result + Me.UpdateDeletedRows(dataSet, allChangedRows))
                '
                '---- Commit updates -----------
                '
                workTransaction.Commit
                If (0 < allAddedRows.Count) Then
                    Dim rows((allAddedRows.Count) - 1) As Global.System.Data.DataRow
                    allAddedRows.CopyTo(rows)
                    Dim i As Integer = 0
                    Do While (i < rows.Length)
                        Dim row As Global.System.Data.DataRow = rows(i)
                        row.AcceptChanges
                        i = (i + 1)
                    Loop
                End If
                If (0 < allChangedRows.Count) Then
                    Dim rows((allChangedRows.Count) - 1) As Global.System.Data.DataRow
                    allChangedRows.CopyTo(rows)
                    Dim i As Integer = 0
                    Do While (i < rows.Length)
                        Dim row As Global.System.Data.DataRow = rows(i)
                        row.AcceptChanges
                        i = (i + 1)
                    Loop
                End If
            Catch ex As Global.System.Exception
                workTransaction.Rollback
                '---- Restore the dataset -----------
                If Me.BackupDataSetBeforeUpdate Then
                    Global.System.Diagnostics.Debug.Assert((Not (backupDataSet) Is Nothing))
                    dataSet.Clear
                    dataSet.Merge(backupDataSet)
                Else
                    If (0 < allAddedRows.Count) Then
                        Dim rows((allAddedRows.Count) - 1) As Global.System.Data.DataRow
                        allAddedRows.CopyTo(rows)
                        Dim i As Integer = 0
                        Do While (i < rows.Length)
                            Dim row As Global.System.Data.DataRow = rows(i)
                            row.AcceptChanges
                            row.SetAdded
                            i = (i + 1)
                        Loop
                    End If
                End If
                Throw ex
            Finally
                If workConnOpened Then
                    workConnection.Close
                End If
                If (Not (Me._acute_ToxicityTableAdapter) Is Nothing) Then
                    Me._acute_ToxicityTableAdapter.Connection = CType(revertConnections(Me._acute_ToxicityTableAdapter),Global.System.Data.OleDb.OleDbConnection)
                    Me._acute_ToxicityTableAdapter.Transaction = Nothing
                End If
                If (Not (Me._aquatic_ToxicityTableAdapter) Is Nothing) Then
                    Me._aquatic_ToxicityTableAdapter.Connection = CType(revertConnections(Me._aquatic_ToxicityTableAdapter),Global.System.Data.OleDb.OleDbConnection)
                    Me._aquatic_ToxicityTableAdapter.Transaction = Nothing
                End If
                If (Not (Me._brandingTableAdapter) Is Nothing) Then
                    Me._brandingTableAdapter.Connection = CType(revertConnections(Me._brandingTableAdapter),Global.System.Data.OleDb.OleDbConnection)
                    Me._brandingTableAdapter.Transaction = Nothing
                End If
                If (Not (Me._componentsTableAdapter) Is Nothing) Then
                    Me._componentsTableAdapter.Connection = CType(revertConnections(Me._componentsTableAdapter),Global.System.Data.OleDb.OleDbConnection)
                    Me._componentsTableAdapter.Transaction = Nothing
                End If
                If (Not (Me._defaultsTableAdapter) Is Nothing) Then
                    Me._defaultsTableAdapter.Connection = CType(revertConnections(Me._defaultsTableAdapter),Global.System.Data.OleDb.OleDbConnection)
                    Me._defaultsTableAdapter.Transaction = Nothing
                End If
                If (Not (Me._hazard_LexiconTableAdapter) Is Nothing) Then
                    Me._hazard_LexiconTableAdapter.Connection = CType(revertConnections(Me._hazard_LexiconTableAdapter),Global.System.Data.OleDb.OleDbConnection)
                    Me._hazard_LexiconTableAdapter.Transaction = Nothing
                End If
                If (Not (Me._precautionary_LexiconTableAdapter) Is Nothing) Then
                    Me._precautionary_LexiconTableAdapter.Connection = CType(revertConnections(Me._precautionary_LexiconTableAdapter),Global.System.Data.OleDb.OleDbConnection)
                    Me._precautionary_LexiconTableAdapter.Transaction = Nothing
                End If
                If (Not (Me._product_LogTableAdapter) Is Nothing) Then
                    Me._product_LogTableAdapter.Connection = CType(revertConnections(Me._product_LogTableAdapter),Global.System.Data.OleDb.OleDbConnection)
                    Me._product_LogTableAdapter.Transaction = Nothing
                End If
                If (Not (Me._safety_DanceTableAdapter) Is Nothing) Then
                    Me._safety_DanceTableAdapter.Connection = CType(revertConnections(Me._safety_DanceTableAdapter),Global.System.Data.OleDb.OleDbConnection)
                    Me._safety_DanceTableAdapter.Transaction = Nothing
                End If
                If (Not (Me._safety_LexiconTableAdapter) Is Nothing) Then
                    Me._safety_LexiconTableAdapter.Connection = CType(revertConnections(Me._safety_LexiconTableAdapter),Global.System.Data.OleDb.OleDbConnection)
                    Me._safety_LexiconTableAdapter.Transaction = Nothing
                End If
                If (0 < adaptersWithAcceptChangesDuringUpdate.Count) Then
                    Dim adapters((adaptersWithAcceptChangesDuringUpdate.Count) - 1) As Global.System.Data.Common.DataAdapter
                    adaptersWithAcceptChangesDuringUpdate.CopyTo(adapters)
                    Dim i As Integer = 0
                    Do While (i < adapters.Length)
                        Dim adapter As Global.System.Data.Common.DataAdapter = adapters(i)
                        adapter.AcceptChangesDuringUpdate = true
                        i = (i + 1)
                    Loop
                End If
            End Try
            Return result
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overridable Sub SortSelfReferenceRows(ByVal rows() As Global.System.Data.DataRow, ByVal relation As Global.System.Data.DataRelation, ByVal childFirst As Boolean)
            Global.System.Array.Sort(Of Global.System.Data.DataRow)(rows, New SelfReferenceComparer(relation, childFirst))
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overridable Function MatchTableAdapterConnection(ByVal inputConnection As Global.System.Data.IDbConnection) As Boolean
            If (Not (Me._connection) Is Nothing) Then
                Return true
            End If
            If ((Me.Connection Is Nothing)  _
                        OrElse (inputConnection Is Nothing)) Then
                Return true
            End If
            If String.Equals(Me.Connection.ConnectionString, inputConnection.ConnectionString, Global.System.StringComparison.Ordinal) Then
                Return true
            End If
            Return false
        End Function
        
        '''<summary>
        '''Update Order Option
        '''</summary>
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Enum UpdateOrderOption
            
            InsertUpdateDelete = 0
            
            UpdateInsertDelete = 1
        End Enum
        
        '''<summary>
        '''Used to sort self-referenced table's rows
        '''</summary>
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Private Class SelfReferenceComparer
            Inherits Object
            Implements Global.System.Collections.Generic.IComparer(Of Global.System.Data.DataRow)
            
            Private _relation As Global.System.Data.DataRelation
            
            Private _childFirst As Integer
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
            Friend Sub New(ByVal relation As Global.System.Data.DataRelation, ByVal childFirst As Boolean)
                MyBase.New
                Me._relation = relation
                If childFirst Then
                    Me._childFirst = -1
                Else
                    Me._childFirst = 1
                End If
            End Sub
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
            Private Function GetRoot(ByVal row As Global.System.Data.DataRow, ByRef distance As Integer) As Global.System.Data.DataRow
                Global.System.Diagnostics.Debug.Assert((Not (row) Is Nothing))
                Dim root As Global.System.Data.DataRow = row
                distance = 0

                Dim traversedRows As Global.System.Collections.Generic.IDictionary(Of Global.System.Data.DataRow, Global.System.Data.DataRow) = New Global.System.Collections.Generic.Dictionary(Of Global.System.Data.DataRow, Global.System.Data.DataRow)()
                traversedRows(row) = row

                Dim parent As Global.System.Data.DataRow = row.GetParentRow(Me._relation, Global.System.Data.DataRowVersion.[Default])

                Do While ((Not (parent) Is Nothing)  _
                            AndAlso (traversedRows.ContainsKey(parent) = false))
                    distance = (distance + 1)
                    root = parent
                    traversedRows(parent) = parent
                    parent = parent.GetParentRow(Me._relation, Global.System.Data.DataRowVersion.[Default])

                Loop

                If (distance = 0) Then
                    traversedRows.Clear
                    traversedRows(row) = row
                    parent = row.GetParentRow(Me._relation, Global.System.Data.DataRowVersion.Original)

                    Do While ((Not (parent) Is Nothing)  _
                                AndAlso (traversedRows.ContainsKey(parent) = false))
                        distance = (distance + 1)
                        root = parent
                        traversedRows(parent) = parent
                        parent = parent.GetParentRow(Me._relation, Global.System.Data.DataRowVersion.Original)

                    Loop
                End If

                Return root
            End Function
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
            Public Function Compare(ByVal row1 As Global.System.Data.DataRow, ByVal row2 As Global.System.Data.DataRow) As Integer Implements Global.System.Collections.Generic.IComparer(Of Global.System.Data.DataRow).Compare
                If Object.ReferenceEquals(row1, row2) Then
                    Return 0
                End If
                If (row1 Is Nothing) Then
                    Return -1
                End If
                If (row2 Is Nothing) Then
                    Return 1
                End If

                Dim distance1 As Integer = 0
                Dim root1 As Global.System.Data.DataRow = Me.GetRoot(row1, distance1)

                Dim distance2 As Integer = 0
                Dim root2 As Global.System.Data.DataRow = Me.GetRoot(row2, distance2)

                If Object.ReferenceEquals(root1, root2) Then
                    Return (Me._childFirst * distance1.CompareTo(distance2))
                Else
                    Global.System.Diagnostics.Debug.Assert(((Not (root1.Table) Is Nothing)  _
                                    AndAlso (Not (root2.Table) Is Nothing)))
                    If (root1.Table.Rows.IndexOf(root1) < root2.Table.Rows.IndexOf(root2)) Then
                        Return -1
                    Else
                        Return 1
                    End If
                End If
            End Function
        End Class
    End Class
End Namespace
